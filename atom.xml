<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>滴水成涓</title>
  
  <subtitle>每天进步一点点</subtitle>
  <link href="https://guozhe001.github.io/atom.xml" rel="self"/>
  
  <link href="https://guozhe001.github.io/"/>
  <updated>2021-04-09T11:05:53.319Z</updated>
  <id>https://guozhe001.github.io/</id>
  
  <author>
    <name>guozhe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Geth源码学习之共识与奖励</title>
    <link href="https://guozhe001.github.io/2021/04/09/blockchain/eth/Geth%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%85%B1%E8%AF%86%E4%B8%8E%E5%A5%96%E5%8A%B1/"/>
    <id>https://guozhe001.github.io/2021/04/09/blockchain/eth/Geth%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%85%B1%E8%AF%86%E4%B8%8E%E5%A5%96%E5%8A%B1/</id>
    <published>2021-04-09T07:28:00.829Z</published>
    <updated>2021-04-09T11:05:53.319Z</updated>
    
    <content type="html"><![CDATA[<h3 id="计算挖矿奖励">计算挖矿奖励</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// AccumulateRewards credits the coinbase of the given block with the mining</span></span><br><span class="line"><span class="comment">// reward. The total reward consists of the static block reward and rewards for</span></span><br><span class="line"><span class="comment">// included uncles. The coinbase of each uncle block is also rewarded.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">accumulateRewards</span><span class="params">(config *params.ChainConfig, state *state.StateDB, header *types.Header, uncles []*types.Header)</span></span> &#123;</span><br><span class="line"><span class="comment">// Select the correct block reward based on chain progression</span></span><br><span class="line"><span class="comment">// 根据不同的阶段，获取静态的区块奖励</span></span><br><span class="line">blockReward := FrontierBlockReward</span><br><span class="line"><span class="keyword">if</span> config.IsByzantium(header.Number) &#123;</span><br><span class="line">blockReward = ByzantiumBlockReward</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> config.IsConstantinople(header.Number) &#123;</span><br><span class="line">blockReward = ConstantinopleBlockReward</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Accumulate the rewards for the miner and any included uncles</span></span><br><span class="line">reward := <span class="built_in">new</span>(big.Int).Set(blockReward)</span><br><span class="line">r := <span class="built_in">new</span>(big.Int)</span><br><span class="line"><span class="keyword">for</span> _, uncle := <span class="keyword">range</span> uncles &#123;</span><br><span class="line">r.Add(uncle.Number, big8) <span class="comment">// r = uncle.Number + 8</span></span><br><span class="line">r.Sub(r, header.Number) <span class="comment">// r = r - header.Number</span></span><br><span class="line">r.Mul(r, blockReward)  <span class="comment">// r = r * blockReward</span></span><br><span class="line">r.Div(r, big8) <span class="comment">// r = r / 8</span></span><br><span class="line">state.AddBalance(uncle.Coinbase, r) <span class="comment">// 挖出叔父区块的miner获得静态的（2个）奖励</span></span><br><span class="line"><span class="comment">//叔父区块number当前区块numberr.Add(uncle.Number, big8)r.Sub(r, header.Number)r.Mul(r, blockReward)r.Div(r, big8)挖出叔父区块的奖励blockReward</span></span><br><span class="line"><span class="comment">//1297141.75八分之七2</span></span><br><span class="line"><span class="comment">//1396121.5八分之六2</span></span><br><span class="line"><span class="comment">//1495101.25八分之五2</span></span><br><span class="line"><span class="comment">//159481八分之四2</span></span><br><span class="line"><span class="comment">//169360.75八分之三2</span></span><br><span class="line"><span class="comment">//179240.5八分之二2</span></span><br><span class="line"><span class="comment">//189120.25八分之一2</span></span><br><span class="line"><span class="comment">//199000八分之零2</span></span><br><span class="line"><span class="comment">//1109-1-2-0.25八分之零2</span></span><br><span class="line"><span class="comment">// 叔块距离当前区块越远，能够得到的奖励越少，最多不超过8个区块</span></span><br><span class="line"><span class="comment">// 不会出现负数的原因应该是在添加叔父区块时有判断，只有距离在8个区块之内的区块才能算是叔父区块，其他的不让添加</span></span><br><span class="line">r.Div(blockReward, big32) <span class="comment">// 当前挖到区块的miner每添加一个叔块获得1/32的静态（2个）的奖励</span></span><br><span class="line">reward.Add(reward, r)</span><br><span class="line">&#125;</span><br><span class="line">state.AddBalance(header.Coinbase, reward)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="解析源码中叔父区块的挖矿者获得的奖励">解析源码中叔父区块的挖矿者获得的奖励</h4><p>blockReward=2,不会出现负数的原因应该是在添加叔父区块时有判断，只有距离在8个区块之内的区块才能算是叔父区块，其他的不让添加</p><table><thead><tr><th>叔父区块number</th><th>当前区块number</th><th>r.Add(uncle.Number, big8)</th><th>r.Sub(r, header.Number)</th><th>r.Mul(r, blockReward)</th><th>r.Div(r, big8)</th><th>挖出叔父区块的奖励</th><th>blockReward</th></tr></thead><tbody><tr><td>1</td><td>2</td><td>9</td><td>7</td><td>14</td><td>1.75</td><td>八分之七</td><td>2</td></tr><tr><td>1</td><td>3</td><td>9</td><td>6</td><td>12</td><td>1.5</td><td>八分之六</td><td>2</td></tr><tr><td>1</td><td>4</td><td>9</td><td>5</td><td>10</td><td>1.25</td><td>八分之五</td><td>2</td></tr><tr><td>1</td><td>5</td><td>9</td><td>4</td><td>8</td><td>1</td><td>八分之四</td><td>2</td></tr><tr><td>1</td><td>6</td><td>9</td><td>3</td><td>6</td><td>0.75</td><td>八分之三</td><td>2</td></tr><tr><td>1</td><td>7</td><td>9</td><td>2</td><td>4</td><td>0.5</td><td>八分之二</td><td>2</td></tr><tr><td>1</td><td>8</td><td>9</td><td>1</td><td>2</td><td>0.25</td><td>八分之一</td><td>2</td></tr><tr><td>1</td><td>9</td><td>9</td><td>0</td><td>0</td><td>0</td><td>八分之零</td><td>2</td></tr><tr><td>1</td><td>10</td><td>9</td><td>-1</td><td>-2</td><td>-0.25</td><td>八分之零</td><td>2</td></tr></tbody></table><h4 id="块头验证">块头验证</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// VerifyHeader checks whether a header conforms to the consensus rules of the</span></span><br><span class="line"><span class="comment">// stock Ethereum ethash engine.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ethash *Ethash)</span> <span class="title">VerifyHeader</span><span class="params">(chain consensus.ChainHeaderReader, header *types.Header, seal <span class="keyword">bool</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">// If we&#x27;re running a full engine faking, accept any input as valid</span></span><br><span class="line"><span class="keyword">if</span> ethash.config.PowMode == ModeFullFake &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Short circuit if the header is known, or its parent not</span></span><br><span class="line">number := header.Number.Uint64()</span><br><span class="line"><span class="comment">// 根据区块号和区块头的hash获取区块信息，只有区块高度为number的区块头的hash等于指定hash才返回数据，否则返回nil</span></span><br><span class="line"><span class="keyword">if</span> chain.GetHeader(header.Hash(), number) != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获取父区块，父区块不能为nil</span></span><br><span class="line">parent := chain.GetHeader(header.ParentHash, number<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span> parent == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> consensus.ErrUnknownAncestor</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Sanity checks passed, do a proper verification</span></span><br><span class="line"><span class="keyword">return</span> ethash.verifyHeader(chain, header, parent, <span class="literal">false</span>, seal, time.Now().Unix())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// verifyHeader checks whether a header conforms to the consensus rules of the</span></span><br><span class="line"><span class="comment">// stock Ethereum ethash engine.</span></span><br><span class="line"><span class="comment">// See YP section 4.3.4. &quot;Block Header Validity&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ethash *Ethash)</span> <span class="title">verifyHeader</span><span class="params">(chain consensus.ChainHeaderReader, header, parent *types.Header, uncle <span class="keyword">bool</span>, seal <span class="keyword">bool</span>, unixNow <span class="keyword">int64</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">// Ensure that the header&#x27;s extra-data section is of a reasonable size</span></span><br><span class="line"><span class="comment">// 块头的扩展数据的字符长度不能超过32</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">uint64</span>(<span class="built_in">len</span>(header.Extra)) &gt; params.MaximumExtraDataSize &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">&quot;extra-data too long: %d &gt; %d&quot;</span>, <span class="built_in">len</span>(header.Extra), params.MaximumExtraDataSize)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Verify the header&#x27;s timestamp</span></span><br><span class="line"><span class="keyword">if</span> !uncle &#123;</span><br><span class="line"><span class="comment">// 如果块头的时间超过了当前时间+15秒，抛异常；</span></span><br><span class="line"><span class="keyword">if</span> header.Time &gt; <span class="keyword">uint64</span>(unixNow+allowedFutureBlockTimeSeconds) &#123;</span><br><span class="line"><span class="keyword">return</span> consensus.ErrFutureBlock</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果块头的时间小于父区块的时间，也抛异常</span></span><br><span class="line"><span class="keyword">if</span> header.Time &lt;= parent.Time &#123;</span><br><span class="line"><span class="keyword">return</span> errOlderBlockTime</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Verify the block&#x27;s difficulty based on its timestamp and parent&#x27;s difficulty</span></span><br><span class="line"><span class="comment">// 根据父区块的难度和当前区块的时间获取期望的难度</span></span><br><span class="line">expected := ethash.CalcDifficulty(chain, header.Time, parent)</span><br><span class="line"><span class="comment">// 如果当前区块的难度和计算的难度不一致，则抛异常</span></span><br><span class="line"><span class="keyword">if</span> expected.Cmp(header.Difficulty) != <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">&quot;invalid difficulty: have %v, want %v&quot;</span>, header.Difficulty, expected)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Verify that the gas limit is &lt;= 2^63-1</span></span><br><span class="line"><span class="comment">// 区块的gas总量不能超过2^63-1</span></span><br><span class="line"><span class="built_in">cap</span> := <span class="keyword">uint64</span>(<span class="number">0x7fffffffffffffff</span>)</span><br><span class="line"><span class="keyword">if</span> header.GasLimit &gt; <span class="built_in">cap</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">&quot;invalid gasLimit: have %v, max %v&quot;</span>, header.GasLimit, <span class="built_in">cap</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Verify that the gasUsed is &lt;= gasLimit</span></span><br><span class="line"><span class="comment">// 使用的gas不能超过gas上限</span></span><br><span class="line"><span class="keyword">if</span> header.GasUsed &gt; header.GasLimit &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">&quot;invalid gasUsed: have %d, gasLimit %d&quot;</span>, header.GasUsed, header.GasLimit)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Verify that the gas limit remains within allowed bounds</span></span><br><span class="line"><span class="comment">// 当前区块的gas上限与父区块的gas上限相减取绝对值</span></span><br><span class="line">diff := <span class="keyword">int64</span>(parent.GasLimit) - <span class="keyword">int64</span>(header.GasLimit)</span><br><span class="line"><span class="keyword">if</span> diff &lt; <span class="number">0</span> &#123;</span><br><span class="line">diff *= <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line">limit := parent.GasLimit / params.GasLimitBoundDivisor</span><br><span class="line"><span class="comment">// 此处的整体意思是每次gas费的上限增加不能超过上一个区块的gas上限的1024分之一；也不能少于区块的gas最小上限5000</span></span><br><span class="line"><span class="comment">// 转账最少都需要21000的gas费，gas费怎么会少于5000呢？</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">uint64</span>(diff) &gt;= limit || header.GasLimit &lt; params.MinGasLimit &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">&quot;invalid gas limit: have %d, want %d += %d&quot;</span>, header.GasLimit, parent.GasLimit, limit)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Verify that the block number is parent&#x27;s +1</span></span><br><span class="line"><span class="comment">// 这个校验没有用吧，因为上面的父区块的获取方式是在当前区块高度的基础上-1；所以只要能获取到父区块父区块的高度肯定比当前区块少1</span></span><br><span class="line"><span class="comment">// 因为这个方法中的父区块是传入的，而不是在当前方法查询的，所以有这个判断是没问题的，但是可以把这个放在gasLimit的前面，如果这个父区块不是当前区块的父区块就没有必要验证gasLimit了</span></span><br><span class="line"><span class="keyword">if</span> diff := <span class="built_in">new</span>(big.Int).Sub(header.Number, parent.Number); diff.Cmp(big.NewInt(<span class="number">1</span>)) != <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> consensus.ErrInvalidNumber</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Verify the engine specific seal securing the block</span></span><br><span class="line"><span class="keyword">if</span> seal &#123;</span><br><span class="line"><span class="comment">// 验证nonce是否符合难度</span></span><br><span class="line"><span class="keyword">if</span> err := ethash.verifySeal(chain, header, <span class="literal">false</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// If all checks passed, validate any special fields for hard forks</span></span><br><span class="line"><span class="keyword">if</span> err := misc.VerifyDAOHeaderExtraData(chain.Config(), header); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := misc.VerifyForkHashes(chain.Config(), header, uncle); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="难度计算">难度计算</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// calcDifficultyByzantium is the difficulty adjustment algorithm. It returns</span></span><br><span class="line"><span class="comment">// the difficulty that a new block should have when created at time given the</span></span><br><span class="line"><span class="comment">// parent block&#x27;s time and difficulty. The calculation uses the Byzantium rules.</span></span><br><span class="line"><span class="comment">// Specification EIP-649: https://eips.ethereum.org/EIPS/eip-649</span></span><br><span class="line"><span class="comment">// 数字3000000是为了计算难度炸弹，目前的区块高度是12184295；2^(12184295-3000000)/100000 = 2^91 = 2.47588e+27！！！</span></span><br><span class="line">calcDifficultyByzantium = makeDifficultyCalculator(big.NewInt(<span class="number">3000000</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// makeDifficultyCalculator creates a difficultyCalculator with the given bomb-delay.</span></span><br><span class="line"><span class="comment">// the difficulty is calculated with Byzantium rules, which differs from Homestead in</span></span><br><span class="line"><span class="comment">// how uncles affect the calculation</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">makeDifficultyCalculator</span><span class="params">(bombDelay *big.Int)</span> <span class="title">func</span><span class="params">(time <span class="keyword">uint64</span>, parent *types.Header)</span> *<span class="title">big</span>.<span class="title">Int</span></span> &#123;</span><br><span class="line"><span class="comment">// Note, the calculations below looks at the parent number, which is 1 below</span></span><br><span class="line"><span class="comment">// the block number. Thus we remove one from the delay given</span></span><br><span class="line">bombDelayFromParent := <span class="built_in">new</span>(big.Int).Sub(bombDelay, big1)</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(time <span class="keyword">uint64</span>, parent *types.Header)</span> *<span class="title">big</span>.<span class="title">Int</span></span> &#123;</span><br><span class="line"><span class="comment">// https://github.com/ethereum/EIPs/issues/100.</span></span><br><span class="line"><span class="comment">// algorithm:</span></span><br><span class="line"><span class="comment">// diff = (parent_diff +</span></span><br><span class="line"><span class="comment">//         (parent_diff / 2048 * max((2 if len(parent.uncles) else 1) - ((timestamp - parent.timestamp) // 9), -99))</span></span><br><span class="line"><span class="comment">//        ) + 2^(periodCount - 2)</span></span><br><span class="line"></span><br><span class="line">bigTime := <span class="built_in">new</span>(big.Int).SetUint64(time)</span><br><span class="line">bigParentTime := <span class="built_in">new</span>(big.Int).SetUint64(parent.Time)</span><br><span class="line"></span><br><span class="line"><span class="comment">// holds intermediate values to make the algo easier to read &amp; audit</span></span><br><span class="line">x := <span class="built_in">new</span>(big.Int)</span><br><span class="line">y := <span class="built_in">new</span>(big.Int)</span><br><span class="line"></span><br><span class="line"><span class="comment">// (2 if len(parent_uncles) else 1) - (block_timestamp - parent_timestamp) // 9</span></span><br><span class="line">x.Sub(bigTime, bigParentTime)</span><br><span class="line">x.Div(x, big9)</span><br><span class="line"><span class="keyword">if</span> parent.UncleHash == types.EmptyUncleHash &#123;</span><br><span class="line">x.Sub(big1, x)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">x.Sub(big2, x)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// max((2 if len(parent_uncles) else 1) - (block_timestamp - parent_timestamp) // 9, -99)</span></span><br><span class="line"><span class="comment">// 最多减少的难度不能超过99个单元，一个单元 = parent_diff / 2048；即最多减少的难度不能大于99*parent_diff / 2048</span></span><br><span class="line"><span class="keyword">if</span> x.Cmp(bigMinus99) &lt; <span class="number">0</span> &#123;</span><br><span class="line">x.Set(bigMinus99)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// parent_diff + (parent_diff / 2048 * max((2 if len(parent.uncles) else 1) - ((timestamp - parent.timestamp) // 9), -99))</span></span><br><span class="line">y.Div(parent.Difficulty, params.DifficultyBoundDivisor)</span><br><span class="line">x.Mul(y, x)</span><br><span class="line">x.Add(parent.Difficulty, x)</span><br><span class="line"></span><br><span class="line"><span class="comment">// minimum difficulty can ever be (before exponential factor)</span></span><br><span class="line"><span class="comment">// 最小难度不能少于131072，即100000000000000000</span></span><br><span class="line"><span class="keyword">if</span> x.Cmp(params.MinimumDifficulty) &lt; <span class="number">0</span> &#123;</span><br><span class="line">x.Set(params.MinimumDifficulty)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// calculate a fake block number for the ice-age delay</span></span><br><span class="line"><span class="comment">// Specification: https://eips.ethereum.org/EIPS/eip-1234</span></span><br><span class="line"><span class="comment">// 如果已经过了bombDelayFromParent区块高度，则计算直到父区块为止过去了多少个区块了</span></span><br><span class="line">fakeBlockNumber := <span class="built_in">new</span>(big.Int)</span><br><span class="line"><span class="keyword">if</span> parent.Number.Cmp(bombDelayFromParent) &gt;= <span class="number">0</span> &#123;</span><br><span class="line">fakeBlockNumber = fakeBlockNumber.Sub(parent.Number, bombDelayFromParent)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// for the exponential factor</span></span><br><span class="line"><span class="comment">// 每隔100000（十万）个区块，periodCount增加1，即每隔十万个区块难度炸弹的难度翻一倍</span></span><br><span class="line">periodCount := fakeBlockNumber</span><br><span class="line">periodCount.Div(periodCount, expDiffPeriod)</span><br><span class="line"></span><br><span class="line"><span class="comment">// the exponential factor, commonly referred to as &quot;the bomb&quot;</span></span><br><span class="line"><span class="comment">// diff = diff + 2^(periodCount - 2)</span></span><br><span class="line"><span class="comment">// 难度再加上难度炸弹的难度</span></span><br><span class="line"><span class="keyword">if</span> periodCount.Cmp(big1) &gt; <span class="number">0</span> &#123;</span><br><span class="line">y.Sub(periodCount, big2)</span><br><span class="line">y.Exp(big2, y, <span class="literal">nil</span>)</span><br><span class="line">x.Add(x, y)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;计算挖矿奖励&quot;&gt;计算挖矿奖励&lt;/h3&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line</summary>
      
    
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/ethereum/"/>
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/tags/ethereum/"/>
    
    <category term="swarm" scheme="https://guozhe001.github.io/tags/swarm/"/>
    
  </entry>
  
  <entry>
    <title>Geth源码学习之Transaction</title>
    <link href="https://guozhe001.github.io/2021/04/09/blockchain/eth/Geth%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E4%B9%8BTransaction/"/>
    <id>https://guozhe001.github.io/2021/04/09/blockchain/eth/Geth%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E4%B9%8BTransaction/</id>
    <published>2021-04-09T03:48:18.162Z</published>
    <updated>2021-04-09T03:48:41.605Z</updated>
    
    <content type="html"><![CDATA[<p>学习<code>github.com/ethereum/go-ethereum/core/types.transaction.go</code>源码<code>Version: 1.10.2-unstable</code>:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Copyright 2014 The go-ethereum Authors</span></span><br><span class="line"><span class="comment">// This file is part of the go-ethereum library.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// The go-ethereum library is free software: you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment">// it under the terms of the GNU Lesser General Public License as published by</span></span><br><span class="line"><span class="comment">// the Free Software Foundation, either version 3 of the License, or</span></span><br><span class="line"><span class="comment">// (at your option) any later version.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// The go-ethereum library is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span></span><br><span class="line"><span class="comment">// GNU Lesser General Public License for more details.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// You should have received a copy of the GNU Lesser General Public License</span></span><br><span class="line"><span class="comment">// along with the go-ethereum library. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> types</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;bytes&quot;</span></span><br><span class="line"><span class="string">&quot;container/heap&quot;</span></span><br><span class="line"><span class="string">&quot;errors&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;math/big&quot;</span></span><br><span class="line"><span class="string">&quot;sync/atomic&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/ethereum/go-ethereum/common&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/ethereum/go-ethereum/crypto&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/ethereum/go-ethereum/rlp&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">ErrInvalidSig           = errors.New(<span class="string">&quot;invalid transaction v, r, s values&quot;</span>)</span><br><span class="line">ErrUnexpectedProtection = errors.New(<span class="string">&quot;transaction type does not supported EIP-155 protected signatures&quot;</span>)</span><br><span class="line">ErrInvalidTxType        = errors.New(<span class="string">&quot;transaction type not valid in this context&quot;</span>)</span><br><span class="line">ErrTxTypeNotSupported   = errors.New(<span class="string">&quot;transaction type not supported&quot;</span>)</span><br><span class="line">errEmptyTypedTx         = errors.New(<span class="string">&quot;empty typed transaction bytes&quot;</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Transaction types.</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">LegacyTxType = <span class="literal">iota</span></span><br><span class="line">AccessListTxType</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Transaction is an Ethereum transaction.</span></span><br><span class="line"><span class="keyword">type</span> Transaction <span class="keyword">struct</span> &#123;</span><br><span class="line">inner TxData    <span class="comment">// Consensus contents of a transaction 交易中需要共识的内容</span></span><br><span class="line">time  time.Time <span class="comment">// Time first seen locally (spam avoidance)  第一次收到交易的时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// caches</span></span><br><span class="line">hash atomic.Value <span class="comment">// 交易的hash</span></span><br><span class="line">size atomic.Value <span class="comment">// 交易的大小</span></span><br><span class="line">from atomic.Value <span class="comment">// 交易的发起者</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewTx creates a new transaction.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewTx</span><span class="params">(inner TxData)</span> *<span class="title">Transaction</span></span> &#123;</span><br><span class="line">tx := <span class="built_in">new</span>(Transaction)</span><br><span class="line">tx.setDecoded(inner.<span class="built_in">copy</span>(), <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> tx</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TxData is the underlying data of a transaction.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// This is implemented by LegacyTx and AccessListTx.</span></span><br><span class="line"><span class="keyword">type</span> TxData <span class="keyword">interface</span> &#123;</span><br><span class="line">txType() <span class="keyword">byte</span> <span class="comment">// returns the type ID</span></span><br><span class="line"><span class="built_in">copy</span>() TxData <span class="comment">// creates a deep copy and initializes all fields</span></span><br><span class="line"></span><br><span class="line">chainID() *big.Int <span class="comment">//链ID</span></span><br><span class="line">accessList() AccessList</span><br><span class="line">data() []<span class="keyword">byte</span> <span class="comment">// 交易中的数据</span></span><br><span class="line">gas() <span class="keyword">uint64</span> <span class="comment">// 交易的消耗了多少gas</span></span><br><span class="line">gasPrice() *big.Int <span class="comment">//交易的gas价格</span></span><br><span class="line">value() *big.Int <span class="comment">// 交易中带的以太币的数量</span></span><br><span class="line">nonce() <span class="keyword">uint64</span> <span class="comment">// 对于发送交易的人来说，这是第几笔交易</span></span><br><span class="line">to() *common.Address <span class="comment">// 交易发送给谁</span></span><br><span class="line"></span><br><span class="line">rawSignatureValues() (v, r, s *big.Int) <span class="comment">// 获取签名相关信息</span></span><br><span class="line">setSignatureValues(chainID, v, r, s *big.Int) <span class="comment">// 设置签名相关信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// EncodeRLP implements rlp.Encoder</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">EncodeRLP</span><span class="params">(w io.Writer)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> tx.Type() == LegacyTxType &#123;</span><br><span class="line"><span class="keyword">return</span> rlp.Encode(w, tx.inner)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// It&#x27;s an EIP-2718 typed TX envelope.</span></span><br><span class="line">buf := encodeBufferPool.Get().(*bytes.Buffer)</span><br><span class="line"><span class="keyword">defer</span> encodeBufferPool.Put(buf)</span><br><span class="line">buf.Reset()</span><br><span class="line"><span class="keyword">if</span> err := tx.encodeTyped(buf); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> rlp.Encode(w, buf.Bytes())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// encodeTyped writes the canonical encoding of a typed transaction to w.</span></span><br><span class="line"><span class="comment">// 将交易中的inner数据写入到入参w</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">encodeTyped</span><span class="params">(w *bytes.Buffer)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">w.WriteByte(tx.Type())</span><br><span class="line"><span class="keyword">return</span> rlp.Encode(w, tx.inner)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MarshalBinary returns the canonical encoding of the transaction.</span></span><br><span class="line"><span class="comment">// For legacy transactions, it returns the RLP encoding. For EIP-2718 typed</span></span><br><span class="line"><span class="comment">// transactions, it returns the type and payload.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">MarshalBinary</span><span class="params">()</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> tx.Type() == LegacyTxType &#123;</span><br><span class="line"><span class="keyword">return</span> rlp.EncodeToBytes(tx.inner)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> buf bytes.Buffer</span><br><span class="line">err := tx.encodeTyped(&amp;buf)</span><br><span class="line"><span class="keyword">return</span> buf.Bytes(), err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DecodeRLP implements rlp.Decoder</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">DecodeRLP</span><span class="params">(s *rlp.Stream)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">kind, size, err := s.Kind()</span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> err != <span class="literal">nil</span>:</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line"><span class="keyword">case</span> kind == rlp.List:</span><br><span class="line"><span class="comment">// It&#x27;s a legacy transaction.</span></span><br><span class="line"><span class="keyword">var</span> inner LegacyTx</span><br><span class="line">err := s.Decode(&amp;inner)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">tx.setDecoded(&amp;inner, <span class="keyword">int</span>(rlp.ListSize(size)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line"><span class="keyword">case</span> kind == rlp.String:</span><br><span class="line"><span class="comment">// It&#x27;s an EIP-2718 typed TX envelope.</span></span><br><span class="line"><span class="keyword">var</span> b []<span class="keyword">byte</span></span><br><span class="line"><span class="keyword">if</span> b, err = s.Bytes(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">inner, err := tx.decodeTyped(b)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">tx.setDecoded(inner, <span class="built_in">len</span>(b))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> rlp.ErrExpectedList</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UnmarshalBinary decodes the canonical encoding of transactions.</span></span><br><span class="line"><span class="comment">// It supports legacy RLP transactions and EIP2718 typed transactions.</span></span><br><span class="line"><span class="comment">// 将字节数组b解码设置到交易的inner字段</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">UnmarshalBinary</span><span class="params">(b []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(b) &gt; <span class="number">0</span> &amp;&amp; b[<span class="number">0</span>] &gt; <span class="number">0x7f</span> &#123;</span><br><span class="line"><span class="comment">// It&#x27;s a legacy transaction.</span></span><br><span class="line"><span class="keyword">var</span> data LegacyTx</span><br><span class="line">err := rlp.DecodeBytes(b, &amp;data)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">tx.setDecoded(&amp;data, <span class="built_in">len</span>(b))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// It&#x27;s an EIP2718 typed transaction envelope.</span></span><br><span class="line">inner, err := tx.decodeTyped(b)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">tx.setDecoded(inner, <span class="built_in">len</span>(b))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// decodeTyped decodes a typed transaction from the canonical format.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">decodeTyped</span><span class="params">(b []<span class="keyword">byte</span>)</span> <span class="params">(TxData, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(b) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errEmptyTypedTx</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> b[<span class="number">0</span>] &#123;</span><br><span class="line"><span class="keyword">case</span> AccessListTxType:</span><br><span class="line"><span class="keyword">var</span> inner AccessListTx</span><br><span class="line">err := rlp.DecodeBytes(b[<span class="number">1</span>:], &amp;inner)</span><br><span class="line"><span class="keyword">return</span> &amp;inner, err</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, ErrTxTypeNotSupported</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// setDecoded sets the inner transaction and size after decoding.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">setDecoded</span><span class="params">(inner TxData, size <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">tx.inner = inner</span><br><span class="line">tx.time = time.Now()</span><br><span class="line"><span class="keyword">if</span> size &gt; <span class="number">0</span> &#123;</span><br><span class="line">tx.size.Store(common.StorageSize(size))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sanityCheckSignature</span><span class="params">(v *big.Int, r *big.Int, s *big.Int, maybeProtected <span class="keyword">bool</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> isProtectedV(v) &amp;&amp; !maybeProtected &#123;</span><br><span class="line"><span class="keyword">return</span> ErrUnexpectedProtection</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> plainV <span class="keyword">byte</span></span><br><span class="line"><span class="keyword">if</span> isProtectedV(v) &#123;</span><br><span class="line">chainID := deriveChainId(v).Uint64()</span><br><span class="line">plainV = <span class="keyword">byte</span>(v.Uint64() - <span class="number">35</span> - <span class="number">2</span>*chainID)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> maybeProtected &#123;</span><br><span class="line"><span class="comment">// Only EIP-155 signatures can be optionally protected. Since</span></span><br><span class="line"><span class="comment">// we determined this v value is not protected, it must be a</span></span><br><span class="line"><span class="comment">// raw 27 or 28.</span></span><br><span class="line">plainV = <span class="keyword">byte</span>(v.Uint64() - <span class="number">27</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// If the signature is not optionally protected, we assume it</span></span><br><span class="line"><span class="comment">// must already be equal to the recovery id.</span></span><br><span class="line">plainV = <span class="keyword">byte</span>(v.Uint64())</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !crypto.ValidateSignatureValues(plainV, r, s, <span class="literal">false</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> ErrInvalidSig</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isProtectedV</span><span class="params">(V *big.Int)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> V.BitLen() &lt;= <span class="number">8</span> &#123;</span><br><span class="line">v := V.Uint64()</span><br><span class="line"><span class="keyword">return</span> v != <span class="number">27</span> &amp;&amp; v != <span class="number">28</span> &amp;&amp; v != <span class="number">1</span> &amp;&amp; v != <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// anything not 27 or 28 is considered protected</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Protected says whether the transaction is replay-protected.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">Protected</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">switch</span> tx := tx.inner.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> *LegacyTx:</span><br><span class="line"><span class="keyword">return</span> tx.V != <span class="literal">nil</span> &amp;&amp; isProtectedV(tx.V)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Type returns the transaction type.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">Type</span><span class="params">()</span> <span class="title">uint8</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> tx.inner.txType()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ChainId returns the EIP155 chain ID of the transaction. The return value will always be</span></span><br><span class="line"><span class="comment">// non-nil. For legacy transactions which are not replay-protected, the return value is</span></span><br><span class="line"><span class="comment">// zero.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">ChainId</span><span class="params">()</span> *<span class="title">big</span>.<span class="title">Int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> tx.inner.chainID()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Data returns the input data of the transaction.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">Data</span><span class="params">()</span> []<span class="title">byte</span></span> &#123; <span class="keyword">return</span> tx.inner.data() &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// AccessList returns the access list of the transaction.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">AccessList</span><span class="params">()</span> <span class="title">AccessList</span></span> &#123; <span class="keyword">return</span> tx.inner.accessList() &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Gas returns the gas limit of the transaction.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">Gas</span><span class="params">()</span> <span class="title">uint64</span></span> &#123; <span class="keyword">return</span> tx.inner.gas() &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GasPrice returns the gas price of the transaction.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">GasPrice</span><span class="params">()</span> *<span class="title">big</span>.<span class="title">Int</span></span> &#123; <span class="keyword">return</span> <span class="built_in">new</span>(big.Int).Set(tx.inner.gasPrice()) &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Value returns the ether amount of the transaction.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">Value</span><span class="params">()</span> *<span class="title">big</span>.<span class="title">Int</span></span> &#123; <span class="keyword">return</span> <span class="built_in">new</span>(big.Int).Set(tx.inner.value()) &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Nonce returns the sender account nonce of the transaction.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">Nonce</span><span class="params">()</span> <span class="title">uint64</span></span> &#123; <span class="keyword">return</span> tx.inner.nonce() &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// To returns the recipient address of the transaction.</span></span><br><span class="line"><span class="comment">// For contract-creation transactions, To returns nil.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">To</span><span class="params">()</span> *<span class="title">common</span>.<span class="title">Address</span></span> &#123;</span><br><span class="line"><span class="comment">// Copy the pointed-to address.</span></span><br><span class="line">ito := tx.inner.to()</span><br><span class="line"><span class="keyword">if</span> ito == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">cpy := *ito</span><br><span class="line"><span class="keyword">return</span> &amp;cpy</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Cost returns gas * gasPrice + value.</span></span><br><span class="line"><span class="comment">// 这个交易的发起者总共需要支付多少以太币</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">Cost</span><span class="params">()</span> *<span class="title">big</span>.<span class="title">Int</span></span> &#123;</span><br><span class="line">total := <span class="built_in">new</span>(big.Int).Mul(tx.GasPrice(), <span class="built_in">new</span>(big.Int).SetUint64(tx.Gas()))</span><br><span class="line">total.Add(total, tx.Value())</span><br><span class="line"><span class="keyword">return</span> total</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// RawSignatureValues returns the V, R, S signature values of the transaction.</span></span><br><span class="line"><span class="comment">// The return values should not be modified by the caller.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">RawSignatureValues</span><span class="params">()</span> <span class="params">(v, r, s *big.Int)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> tx.inner.rawSignatureValues()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GasPriceCmp compares the gas prices of two transactions.</span></span><br><span class="line"><span class="comment">// 比较当前交易和其他交易的gas价格</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">GasPriceCmp</span><span class="params">(other *Transaction)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> tx.inner.gasPrice().Cmp(other.inner.gasPrice())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GasPriceIntCmp compares the gas price of the transaction against the given price.</span></span><br><span class="line"><span class="comment">// 比较当前交易和其他交易的gas价格</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">GasPriceIntCmp</span><span class="params">(other *big.Int)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> tx.inner.gasPrice().Cmp(other)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hash returns the transaction hash.</span></span><br><span class="line"><span class="comment">// 获取交易的hash，如果已经存在则直接返回，如果不存在则计算</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">Hash</span><span class="params">()</span> <span class="title">common</span>.<span class="title">Hash</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> hash := tx.hash.Load(); hash != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> hash.(common.Hash)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> h common.Hash</span><br><span class="line"><span class="keyword">if</span> tx.Type() == LegacyTxType &#123;</span><br><span class="line">h = rlpHash(tx.inner)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">h = prefixedRlpHash(tx.Type(), tx.inner)</span><br><span class="line">&#125;</span><br><span class="line">tx.hash.Store(h)</span><br><span class="line"><span class="keyword">return</span> h</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Size returns the true RLP encoded storage size of the transaction, either by</span></span><br><span class="line"><span class="comment">// encoding and returning it, or returning a previously cached value.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">Size</span><span class="params">()</span> <span class="title">common</span>.<span class="title">StorageSize</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> size := tx.size.Load(); size != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> size.(common.StorageSize)</span><br><span class="line">&#125;</span><br><span class="line">c := writeCounter(<span class="number">0</span>)</span><br><span class="line">rlp.Encode(&amp;c, &amp;tx.inner)</span><br><span class="line">tx.size.Store(common.StorageSize(c))</span><br><span class="line"><span class="keyword">return</span> common.StorageSize(c)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// WithSignature returns a new transaction with the given signature.</span></span><br><span class="line"><span class="comment">// This signature needs to be in the [R || S || V] format where V is 0 or 1.</span></span><br><span class="line"><span class="comment">// 对交易进行签名，并返回一个新的签名后的交易</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">WithSignature</span><span class="params">(signer Signer, sig []<span class="keyword">byte</span>)</span> <span class="params">(*Transaction, error)</span></span> &#123;</span><br><span class="line">r, s, v, err := signer.SignatureValues(tx, sig)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">cpy := tx.inner.<span class="built_in">copy</span>()</span><br><span class="line">cpy.setSignatureValues(signer.ChainID(), v, r, s)</span><br><span class="line"><span class="keyword">return</span> &amp;Transaction&#123;inner: cpy, time: tx.time&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Transactions implements DerivableList for transactions.</span></span><br><span class="line"><span class="keyword">type</span> Transactions []*Transaction</span><br><span class="line"></span><br><span class="line"><span class="comment">// Len returns the length of s.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s Transactions)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span> &#123; <span class="keyword">return</span> <span class="built_in">len</span>(s) &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// EncodeIndex encodes the i&#x27;th transaction to w. Note that this does not check for errors</span></span><br><span class="line"><span class="comment">// because we assume that *Transaction will only ever contain valid txs that were either</span></span><br><span class="line"><span class="comment">// constructed by decoding or via public API in this package.</span></span><br><span class="line"><span class="comment">// 将指定下标i的交易的inner数据解码写入w中</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s Transactions)</span> <span class="title">EncodeIndex</span><span class="params">(i <span class="keyword">int</span>, w *bytes.Buffer)</span></span> &#123;</span><br><span class="line">tx := s[i]</span><br><span class="line"><span class="keyword">if</span> tx.Type() == LegacyTxType &#123;</span><br><span class="line">rlp.Encode(w, tx.inner)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">tx.encodeTyped(w)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TxDifference returns a new set which is the difference between a and b.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TxDifference</span><span class="params">(a, b Transactions)</span> <span class="title">Transactions</span></span> &#123;</span><br><span class="line">keep := <span class="built_in">make</span>(Transactions, <span class="number">0</span>, <span class="built_in">len</span>(a))</span><br><span class="line"></span><br><span class="line">remove := <span class="built_in">make</span>(<span class="keyword">map</span>[common.Hash]<span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">for</span> _, tx := <span class="keyword">range</span> b &#123;</span><br><span class="line">remove[tx.Hash()] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, tx := <span class="keyword">range</span> a &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := remove[tx.Hash()]; !ok &#123;</span><br><span class="line">keep = <span class="built_in">append</span>(keep, tx)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> keep</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TxByNonce implements the sort interface to allow sorting a list of transactions</span></span><br><span class="line"><span class="comment">// by their nonces. This is usually only useful for sorting transactions from a</span></span><br><span class="line"><span class="comment">// single account, otherwise a nonce comparison doesn&#x27;t make much sense.</span></span><br><span class="line"><span class="comment">// 实现了排序的交易列表，排序的方式是nonce，只有同一个地址的nonce的比较才有意义，不同地址的nonce比较没有意义</span></span><br><span class="line"><span class="keyword">type</span> TxByNonce Transactions</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s TxByNonce)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span>           &#123; <span class="keyword">return</span> <span class="built_in">len</span>(s) &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s TxByNonce)</span> <span class="title">Less</span><span class="params">(i, j <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123; <span class="keyword">return</span> s[i].Nonce() &lt; s[j].Nonce() &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s TxByNonce)</span> <span class="title">Swap</span><span class="params">(i, j <span class="keyword">int</span>)</span></span>      &#123; s[i], s[j] = s[j], s[i] &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TxByPriceAndTime implements both the sort and the heap interface, making it useful</span></span><br><span class="line"><span class="comment">// for all at once sorting as well as individually adding and removing elements.</span></span><br><span class="line"><span class="keyword">type</span> TxByPriceAndTime Transactions</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s TxByPriceAndTime)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span> &#123; <span class="keyword">return</span> <span class="built_in">len</span>(s) &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s TxByPriceAndTime)</span> <span class="title">Less</span><span class="params">(i, j <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="comment">// If the prices are equal, use the time the transaction was first seen for</span></span><br><span class="line"><span class="comment">// deterministic sorting</span></span><br><span class="line"><span class="comment">// 先按照价格排序，如果价格相等再按照时间排序</span></span><br><span class="line">cmp := s[i].GasPrice().Cmp(s[j].GasPrice())</span><br><span class="line"><span class="keyword">if</span> cmp == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> s[i].time.Before(s[j].time)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cmp &gt; <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s TxByPriceAndTime)</span> <span class="title">Swap</span><span class="params">(i, j <span class="keyword">int</span>)</span></span> &#123; s[i], s[j] = s[j], s[i] &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *TxByPriceAndTime)</span> <span class="title">Push</span><span class="params">(x <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">*s = <span class="built_in">append</span>(*s, x.(*Transaction))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *TxByPriceAndTime)</span> <span class="title">Pop</span><span class="params">()</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line">old := *s</span><br><span class="line">n := <span class="built_in">len</span>(old)</span><br><span class="line">x := old[n<span class="number">-1</span>]</span><br><span class="line">*s = old[<span class="number">0</span> : n<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">return</span> x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// TransactionsByPriceAndNonce represents a set of transactions that can return</span></span><br><span class="line"><span class="comment">// transactions in a profit-maximizing sorted order, while supporting removing</span></span><br><span class="line"><span class="comment">// entire batches of transactions for non-executable accounts.</span></span><br><span class="line"><span class="keyword">type</span> TransactionsByPriceAndNonce <span class="keyword">struct</span> &#123;</span><br><span class="line">txs    <span class="keyword">map</span>[common.Address]Transactions <span class="comment">// Per account nonce-sorted list of transactions</span></span><br><span class="line">heads  TxByPriceAndTime                <span class="comment">// Next transaction for each unique account (price heap)</span></span><br><span class="line">signer Signer                          <span class="comment">// Signer for the set of transactions</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewTransactionsByPriceAndNonce creates a transaction set that can retrieve</span></span><br><span class="line"><span class="comment">// price sorted transactions in a nonce-honouring way.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Note, the input map is reowned so the caller should not interact any more with</span></span><br><span class="line"><span class="comment">// if after providing it to the constructor.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewTransactionsByPriceAndNonce</span><span class="params">(signer Signer, txs <span class="keyword">map</span>[common.Address]Transactions)</span> *<span class="title">TransactionsByPriceAndNonce</span></span> &#123;</span><br><span class="line"><span class="comment">// Initialize a price and received time based heap with the head transactions</span></span><br><span class="line">heads := <span class="built_in">make</span>(TxByPriceAndTime, <span class="number">0</span>, <span class="built_in">len</span>(txs))</span><br><span class="line"><span class="keyword">for</span> from, accTxs := <span class="keyword">range</span> txs &#123;</span><br><span class="line"><span class="comment">// Ensure the sender address is from the signer</span></span><br><span class="line"><span class="keyword">if</span> acc, _ := Sender(signer, accTxs[<span class="number">0</span>]); acc != from &#123;</span><br><span class="line"><span class="built_in">delete</span>(txs, from)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">heads = <span class="built_in">append</span>(heads, accTxs[<span class="number">0</span>])</span><br><span class="line">txs[from] = accTxs[<span class="number">1</span>:]</span><br><span class="line">&#125;</span><br><span class="line">heap.Init(&amp;heads)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Assemble and return the transaction set</span></span><br><span class="line"><span class="keyword">return</span> &amp;TransactionsByPriceAndNonce&#123;</span><br><span class="line">txs:    txs,</span><br><span class="line">heads:  heads,</span><br><span class="line">signer: signer,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Peek returns the next transaction by price.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *TransactionsByPriceAndNonce)</span> <span class="title">Peek</span><span class="params">()</span> *<span class="title">Transaction</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(t.heads) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> t.heads[<span class="number">0</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Shift replaces the current best head with the next one from the same account.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *TransactionsByPriceAndNonce)</span> <span class="title">Shift</span><span class="params">()</span></span> &#123;</span><br><span class="line">acc, _ := Sender(t.signer, t.heads[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> txs, ok := t.txs[acc]; ok &amp;&amp; <span class="built_in">len</span>(txs) &gt; <span class="number">0</span> &#123;</span><br><span class="line">t.heads[<span class="number">0</span>], t.txs[acc] = txs[<span class="number">0</span>], txs[<span class="number">1</span>:]</span><br><span class="line">heap.Fix(&amp;t.heads, <span class="number">0</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">heap.Pop(&amp;t.heads)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Pop removes the best transaction, *not* replacing it with the next one from</span></span><br><span class="line"><span class="comment">// the same account. This should be used when a transaction cannot be executed</span></span><br><span class="line"><span class="comment">// and hence all subsequent ones should be discarded from the same account.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *TransactionsByPriceAndNonce)</span> <span class="title">Pop</span><span class="params">()</span></span> &#123;</span><br><span class="line">heap.Pop(&amp;t.heads)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Message is a fully derived transaction and implements core.Message</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// <span class="doctag">NOTE:</span> In a future PR this will be removed.</span></span><br><span class="line"><span class="keyword">type</span> Message <span class="keyword">struct</span> &#123;</span><br><span class="line">to         *common.Address</span><br><span class="line">from       common.Address</span><br><span class="line">nonce      <span class="keyword">uint64</span></span><br><span class="line">amount     *big.Int</span><br><span class="line">gasLimit   <span class="keyword">uint64</span></span><br><span class="line">gasPrice   *big.Int</span><br><span class="line">data       []<span class="keyword">byte</span></span><br><span class="line">accessList AccessList</span><br><span class="line">checkNonce <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewMessage</span><span class="params">(from common.Address, to *common.Address, nonce <span class="keyword">uint64</span>, amount *big.Int, gasLimit <span class="keyword">uint64</span>, gasPrice *big.Int, data []<span class="keyword">byte</span>, accessList AccessList, checkNonce <span class="keyword">bool</span>)</span> <span class="title">Message</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> Message&#123;</span><br><span class="line">from:       from,</span><br><span class="line">to:         to,</span><br><span class="line">nonce:      nonce,</span><br><span class="line">amount:     amount,</span><br><span class="line">gasLimit:   gasLimit,</span><br><span class="line">gasPrice:   gasPrice,</span><br><span class="line">data:       data,</span><br><span class="line">accessList: accessList,</span><br><span class="line">checkNonce: checkNonce,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// AsMessage returns the transaction as a core.Message.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tx *Transaction)</span> <span class="title">AsMessage</span><span class="params">(s Signer)</span> <span class="params">(Message, error)</span></span> &#123;</span><br><span class="line">msg := Message&#123;</span><br><span class="line">nonce:      tx.Nonce(),</span><br><span class="line">gasLimit:   tx.Gas(),</span><br><span class="line">gasPrice:   <span class="built_in">new</span>(big.Int).Set(tx.GasPrice()),</span><br><span class="line">to:         tx.To(),</span><br><span class="line">amount:     tx.Value(),</span><br><span class="line">data:       tx.Data(),</span><br><span class="line">accessList: tx.AccessList(),</span><br><span class="line">checkNonce: <span class="literal">true</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line">msg.from, err = Sender(s, tx)</span><br><span class="line"><span class="keyword">return</span> msg, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Message)</span> <span class="title">From</span><span class="params">()</span> <span class="title">common</span>.<span class="title">Address</span></span>   &#123; <span class="keyword">return</span> m.from &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Message)</span> <span class="title">To</span><span class="params">()</span> *<span class="title">common</span>.<span class="title">Address</span></span>    &#123; <span class="keyword">return</span> m.to &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Message)</span> <span class="title">GasPrice</span><span class="params">()</span> *<span class="title">big</span>.<span class="title">Int</span></span>     &#123; <span class="keyword">return</span> m.gasPrice &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Message)</span> <span class="title">Value</span><span class="params">()</span> *<span class="title">big</span>.<span class="title">Int</span></span>        &#123; <span class="keyword">return</span> m.amount &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Message)</span> <span class="title">Gas</span><span class="params">()</span> <span class="title">uint64</span></span>            &#123; <span class="keyword">return</span> m.gasLimit &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Message)</span> <span class="title">Nonce</span><span class="params">()</span> <span class="title">uint64</span></span>          &#123; <span class="keyword">return</span> m.nonce &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Message)</span> <span class="title">Data</span><span class="params">()</span> []<span class="title">byte</span></span>           &#123; <span class="keyword">return</span> m.data &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Message)</span> <span class="title">AccessList</span><span class="params">()</span> <span class="title">AccessList</span></span> &#123; <span class="keyword">return</span> m.accessList &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m Message)</span> <span class="title">CheckNonce</span><span class="params">()</span> <span class="title">bool</span></span>       &#123; <span class="keyword">return</span> m.checkNonce &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="对比etherscan-io的显示的Transaction字段：">对比etherscan.io的显示的Transaction字段：</h3><p><img src="https://gitee.com/guozhe001/images/raw/master/etherscan_transaction.png" alt="etherscan_transaction"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;学习&lt;code&gt;github.com/ethereum/go-ethereum/core/types.transaction.go&lt;/code&gt;源码&lt;code&gt;Version: 1.10.2-unstable&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highl</summary>
      
    
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/ethereum/"/>
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/tags/ethereum/"/>
    
    <category term="swarm" scheme="https://guozhe001.github.io/tags/swarm/"/>
    
  </entry>
  
  <entry>
    <title>Geth源码学习之block</title>
    <link href="https://guozhe001.github.io/2021/04/08/blockchain/eth/Geth%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E4%B9%8Bblock/"/>
    <id>https://guozhe001.github.io/2021/04/08/blockchain/eth/Geth%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E4%B9%8Bblock/</id>
    <published>2021-04-08T11:19:30.904Z</published>
    <updated>2021-04-12T03:01:25.645Z</updated>
    
    <content type="html"><![CDATA[<h3 id="学习github-com-ethereum-go-ethereum-core-types-block-go源码Version-1-10-2-unstable">学习<code>github.com/ethereum/go-ethereum/core/types.block.go</code>源码<code>Version: 1.10.2-unstable</code>:</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Copyright 2014 The go-ethereum Authors</span></span><br><span class="line"><span class="comment">// This file is part of the go-ethereum library.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// The go-ethereum library is free software: you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment">// it under the terms of the GNU Lesser General Public License as published by</span></span><br><span class="line"><span class="comment">// the Free Software Foundation, either version 3 of the License, or</span></span><br><span class="line"><span class="comment">// (at your option) any later version.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// The go-ethereum library is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span></span><br><span class="line"><span class="comment">// GNU Lesser General Public License for more details.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// You should have received a copy of the GNU Lesser General Public License</span></span><br><span class="line"><span class="comment">// along with the go-ethereum library. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Package types contains data types related to Ethereum consensus.</span></span><br><span class="line"><span class="keyword">package</span> types</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;encoding/binary&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;math/big&quot;</span></span><br><span class="line"><span class="string">&quot;reflect&quot;</span></span><br><span class="line"><span class="string">&quot;sync/atomic&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/ethereum/go-ethereum/common&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/ethereum/go-ethereum/common/hexutil&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/ethereum/go-ethereum/rlp&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">EmptyRootHash  = common.HexToHash(<span class="string">&quot;56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421&quot;</span>)</span><br><span class="line">EmptyUncleHash = rlpHash([]*Header(<span class="literal">nil</span>))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// A BlockNonce is a 64-bit hash which proves (combined with the</span></span><br><span class="line"><span class="comment">// mix-hash) that a sufficient amount of computation has been carried</span></span><br><span class="line"><span class="comment">// out on a block.</span></span><br><span class="line"><span class="keyword">type</span> BlockNonce [<span class="number">8</span>]<span class="keyword">byte</span>  <span class="comment">// 挖矿就是找这个nonce，nonce是一个64位的数字</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// EncodeNonce converts the given integer to a block nonce.</span></span><br><span class="line"><span class="comment">// 把十进制的数字i转换成BlockNonce</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">EncodeNonce</span><span class="params">(i <span class="keyword">uint64</span>)</span> <span class="title">BlockNonce</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> n BlockNonce</span><br><span class="line">binary.BigEndian.PutUint64(n[:], i)</span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Uint64 returns the integer value of a block nonce.</span></span><br><span class="line"><span class="comment">// 与EncodeNonce相反，把BlockNonce转换成十进制数字</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n BlockNonce)</span> <span class="title">Uint64</span><span class="params">()</span> <span class="title">uint64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> binary.BigEndian.Uint64(n[:])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MarshalText encodes n as a hex string with 0x prefix.</span></span><br><span class="line"><span class="comment">// 返回一个带有0x前缀的十六进制的字符串</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n BlockNonce)</span> <span class="title">MarshalText</span><span class="params">()</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> hexutil.Bytes(n[:]).MarshalText()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UnmarshalText implements encoding.TextUnmarshaler.</span></span><br><span class="line"><span class="comment">// 把一个带有0x前缀的十六进制字符串赋值给n</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *BlockNonce)</span> <span class="title">UnmarshalText</span><span class="params">(input []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> hexutil.UnmarshalFixedText(<span class="string">&quot;BlockNonce&quot;</span>, input, n[:])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//go:generate gencodec -type Header -field-override headerMarshaling -out gen_header_json.go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Header represents a block header in the Ethereum blockchain.</span></span><br><span class="line"><span class="comment">// 区块的头</span></span><br><span class="line"><span class="keyword">type</span> Header <span class="keyword">struct</span> &#123;</span><br><span class="line">ParentHash  common.Hash    <span class="string">`json:&quot;parentHash&quot;       gencodec:&quot;required&quot;`</span> <span class="comment">// 父区块的hash</span></span><br><span class="line">UncleHash   common.Hash    <span class="string">`json:&quot;sha3Uncles&quot;       gencodec:&quot;required&quot;`</span> <span class="comment">// 叔区块数组的hash</span></span><br><span class="line">Coinbase    common.Address <span class="string">`json:&quot;miner&quot;            gencodec:&quot;required&quot;`</span> <span class="comment">// 谁挖出的此块</span></span><br><span class="line">Root        common.Hash    <span class="string">`json:&quot;stateRoot&quot;        gencodec:&quot;required&quot;`</span> <span class="comment">//</span></span><br><span class="line">TxHash      common.Hash    <span class="string">`json:&quot;transactionsRoot&quot; gencodec:&quot;required&quot;`</span> <span class="comment">// 交易的hash，使用mpt结构的交易的根hash</span></span><br><span class="line">ReceiptHash common.Hash    <span class="string">`json:&quot;receiptsRoot&quot;     gencodec:&quot;required&quot;`</span> <span class="comment">// 回执（交易响应）的hash，使用mpt结构的回执的根hash</span></span><br><span class="line">Bloom       Bloom          <span class="string">`json:&quot;logsBloom&quot;        gencodec:&quot;required&quot;`</span> <span class="comment">// 使用交易回执算出的Bloom过滤器</span></span><br><span class="line">Difficulty  *big.Int       <span class="string">`json:&quot;difficulty&quot;       gencodec:&quot;required&quot;`</span> <span class="comment">// 当前区块的难度</span></span><br><span class="line">Number      *big.Int       <span class="string">`json:&quot;number&quot;           gencodec:&quot;required&quot;`</span> <span class="comment">// 当前区块的高度</span></span><br><span class="line">GasLimit    <span class="keyword">uint64</span>         <span class="string">`json:&quot;gasLimit&quot;         gencodec:&quot;required&quot;`</span> <span class="comment">// 当前区块的总的gas上限</span></span><br><span class="line">GasUsed     <span class="keyword">uint64</span>         <span class="string">`json:&quot;gasUsed&quot;          gencodec:&quot;required&quot;`</span> <span class="comment">// 当前区块的总共使用的gas</span></span><br><span class="line">Time        <span class="keyword">uint64</span>         <span class="string">`json:&quot;timestamp&quot;        gencodec:&quot;required&quot;`</span> <span class="comment">// 当前区块的生成时间</span></span><br><span class="line">Extra       []<span class="keyword">byte</span>         <span class="string">`json:&quot;extraData&quot;        gencodec:&quot;required&quot;`</span> <span class="comment">// 额外的数据</span></span><br><span class="line">MixDigest   common.Hash    <span class="string">`json:&quot;mixHash&quot;`</span> <span class="comment">// 使用header中的上面的字段算出来的ethash和nonce算出来的hash值</span></span><br><span class="line">Nonce       BlockNonce     <span class="string">`json:&quot;nonce&quot;`</span> <span class="comment">// 当前区块的nonce</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// field type overrides for gencodec</span></span><br><span class="line"><span class="keyword">type</span> headerMarshaling <span class="keyword">struct</span> &#123;</span><br><span class="line">Difficulty *hexutil.Big</span><br><span class="line">Number     *hexutil.Big</span><br><span class="line">GasLimit   hexutil.Uint64</span><br><span class="line">GasUsed    hexutil.Uint64</span><br><span class="line">Time       hexutil.Uint64</span><br><span class="line">Extra      hexutil.Bytes</span><br><span class="line">Hash       common.Hash <span class="string">`json:&quot;hash&quot;`</span> <span class="comment">// adds call to Hash() in MarshalJSON</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hash returns the block hash of the header, which is simply the keccak256 hash of its</span></span><br><span class="line"><span class="comment">// RLP encoding.</span></span><br><span class="line"><span class="comment">// 计算区块头h的hash，使用keccak256hash算法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *Header)</span> <span class="title">Hash</span><span class="params">()</span> <span class="title">common</span>.<span class="title">Hash</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> rlpHash(h)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> headerSize = common.StorageSize(reflect.TypeOf(Header&#123;&#125;).Size())</span><br><span class="line"></span><br><span class="line"><span class="comment">// Size returns the approximate memory used by all internal contents. It is used</span></span><br><span class="line"><span class="comment">// to approximate and limit the memory consumption of various caches.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *Header)</span> <span class="title">Size</span><span class="params">()</span> <span class="title">common</span>.<span class="title">StorageSize</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> headerSize + common.StorageSize(<span class="built_in">len</span>(h.Extra)+(h.Difficulty.BitLen()+h.Number.BitLen())/<span class="number">8</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// SanityCheck checks a few basic things -- these checks are way beyond what</span></span><br><span class="line"><span class="comment">// any &#x27;sane&#x27; production values should hold, and can mainly be used to prevent</span></span><br><span class="line"><span class="comment">// that the unbounded fields are stuffed with junk data to add processing</span></span><br><span class="line"><span class="comment">// overhead</span></span><br><span class="line"><span class="comment">// 检查区块头的字段</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *Header)</span> <span class="title">SanityCheck</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> h.Number != <span class="literal">nil</span> &amp;&amp; !h.Number.IsUint64() &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">&quot;too large block number: bitlen %d&quot;</span>, h.Number.BitLen())</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> h.Difficulty != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> diffLen := h.Difficulty.BitLen(); diffLen &gt; <span class="number">80</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">&quot;too large block difficulty: bitlen %d&quot;</span>, diffLen)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> eLen := <span class="built_in">len</span>(h.Extra); eLen &gt; <span class="number">100</span>*<span class="number">1024</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">&quot;too large block extradata: size %d&quot;</span>, eLen)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// EmptyBody returns true if there is no additional &#x27;body&#x27; to complete the header</span></span><br><span class="line"><span class="comment">// that is: no transactions and no uncles.</span></span><br><span class="line"><span class="comment">// 检查是否有额外的body数据，没有交易并且没有数块即代表为没有body</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *Header)</span> <span class="title">EmptyBody</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> h.TxHash == EmptyRootHash &amp;&amp; h.UncleHash == EmptyUncleHash</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// EmptyReceipts returns true if there are no receipts for this header/block.</span></span><br><span class="line"><span class="comment">// 检查回执是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *Header)</span> <span class="title">EmptyReceipts</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> h.ReceiptHash == EmptyRootHash</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Body is a simple (mutable, non-safe) data container for storing and moving</span></span><br><span class="line"><span class="comment">// a block&#x27;s data contents (transactions and uncles) together.</span></span><br><span class="line"><span class="comment">// 区块中的body信息，包括交易列表和叔块header列表</span></span><br><span class="line"><span class="keyword">type</span> Body <span class="keyword">struct</span> &#123;</span><br><span class="line">Transactions []*Transaction</span><br><span class="line">Uncles       []*Header</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Block represents an entire block in the Ethereum blockchain.</span></span><br><span class="line"><span class="comment">// 区块</span></span><br><span class="line"><span class="keyword">type</span> Block <span class="keyword">struct</span> &#123;</span><br><span class="line">header       *Header <span class="comment">// 块头</span></span><br><span class="line">uncles       []*Header <span class="comment">// 数块头</span></span><br><span class="line">transactions Transactions <span class="comment">// 交易列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// caches</span></span><br><span class="line">hash atomic.Value <span class="comment">// 区块hash</span></span><br><span class="line">size atomic.Value <span class="comment">// 区块大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Td is used by package core to store the total difficulty</span></span><br><span class="line"><span class="comment">// of the chain up to and including the block.</span></span><br><span class="line">td *big.Int <span class="comment">// total difficulty 当前网络的总难度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// These fields are used by package eth to track</span></span><br><span class="line"><span class="comment">// inter-peer block relay.</span></span><br><span class="line">ReceivedAt   time.Time <span class="comment">// 接收到的时间</span></span><br><span class="line">ReceivedFrom <span class="keyword">interface</span>&#123;&#125; <span class="comment">// 提交区块的Peer</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DeprecatedTd is an old relic for extracting the TD of a block. It is in the</span></span><br><span class="line"><span class="comment">// code solely to facilitate upgrading the database from the old format to the</span></span><br><span class="line"><span class="comment">// new, after which it should be deleted. Do not use!</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">DeprecatedTd</span><span class="params">()</span> *<span class="title">big</span>.<span class="title">Int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> b.td</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [deprecated by eth/63]</span></span><br><span class="line"><span class="comment">// StorageBlock defines the RLP encoding of a Block stored in the</span></span><br><span class="line"><span class="comment">// state database. The StorageBlock encoding contains fields that</span></span><br><span class="line"><span class="comment">// would otherwise need to be recomputed.</span></span><br><span class="line"><span class="keyword">type</span> StorageBlock Block</span><br><span class="line"></span><br><span class="line"><span class="comment">// &quot;external&quot; block encoding. used for eth protocol, etc.</span></span><br><span class="line"><span class="keyword">type</span> extblock <span class="keyword">struct</span> &#123;</span><br><span class="line">Header *Header</span><br><span class="line">Txs    []*Transaction</span><br><span class="line">Uncles []*Header</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [deprecated by eth/63]</span></span><br><span class="line"><span class="comment">// &quot;storage&quot; block encoding. used for database.</span></span><br><span class="line"><span class="keyword">type</span> storageblock <span class="keyword">struct</span> &#123;</span><br><span class="line">Header *Header</span><br><span class="line">Txs    []*Transaction</span><br><span class="line">Uncles []*Header</span><br><span class="line">TD     *big.Int</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewBlock creates a new block. The input data is copied,</span></span><br><span class="line"><span class="comment">// changes to header and to the field values will not affect the</span></span><br><span class="line"><span class="comment">// block.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// The values of TxHash, UncleHash, ReceiptHash and Bloom in header</span></span><br><span class="line"><span class="comment">// are ignored and set to values derived from the given txs, uncles</span></span><br><span class="line"><span class="comment">// and receipts.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewBlock</span><span class="params">(header *Header, txs []*Transaction, uncles []*Header, receipts []*Receipt, hasher TrieHasher)</span> *<span class="title">Block</span></span> &#123;</span><br><span class="line">b := &amp;Block&#123;header: CopyHeader(header), td: <span class="built_in">new</span>(big.Int)&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> panic if len(txs) != len(receipts)</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(txs) == <span class="number">0</span> &#123;</span><br><span class="line">b.header.TxHash = EmptyRootHash</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">b.header.TxHash = DeriveSha(Transactions(txs), hasher)</span><br><span class="line">b.transactions = <span class="built_in">make</span>(Transactions, <span class="built_in">len</span>(txs))</span><br><span class="line"><span class="built_in">copy</span>(b.transactions, txs)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(receipts) == <span class="number">0</span> &#123;</span><br><span class="line">b.header.ReceiptHash = EmptyRootHash</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">b.header.ReceiptHash = DeriveSha(Receipts(receipts), hasher)</span><br><span class="line">b.header.Bloom = CreateBloom(receipts)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(uncles) == <span class="number">0</span> &#123;</span><br><span class="line">b.header.UncleHash = EmptyUncleHash</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">b.header.UncleHash = CalcUncleHash(uncles)</span><br><span class="line">b.uncles = <span class="built_in">make</span>([]*Header, <span class="built_in">len</span>(uncles))</span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> uncles &#123;</span><br><span class="line">b.uncles[i] = CopyHeader(uncles[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewBlockWithHeader creates a block with the given header data. The</span></span><br><span class="line"><span class="comment">// header data is copied, changes to header and to the field values</span></span><br><span class="line"><span class="comment">// will not affect the block.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewBlockWithHeader</span><span class="params">(header *Header)</span> *<span class="title">Block</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;Block&#123;header: CopyHeader(header)&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// CopyHeader creates a deep copy of a block header to prevent side effects from</span></span><br><span class="line"><span class="comment">// modifying a header variable.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CopyHeader</span><span class="params">(h *Header)</span> *<span class="title">Header</span></span> &#123;</span><br><span class="line">cpy := *h</span><br><span class="line"><span class="keyword">if</span> cpy.Difficulty = <span class="built_in">new</span>(big.Int); h.Difficulty != <span class="literal">nil</span> &#123;</span><br><span class="line">cpy.Difficulty.Set(h.Difficulty)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> cpy.Number = <span class="built_in">new</span>(big.Int); h.Number != <span class="literal">nil</span> &#123;</span><br><span class="line">cpy.Number.Set(h.Number)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(h.Extra) &gt; <span class="number">0</span> &#123;</span><br><span class="line">cpy.Extra = <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="built_in">len</span>(h.Extra))</span><br><span class="line"><span class="built_in">copy</span>(cpy.Extra, h.Extra)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> &amp;cpy</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DecodeRLP decodes the Ethereum</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">DecodeRLP</span><span class="params">(s *rlp.Stream)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> eb extblock</span><br><span class="line">_, size, _ := s.Kind()</span><br><span class="line"><span class="keyword">if</span> err := s.Decode(&amp;eb); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">b.header, b.uncles, b.transactions = eb.Header, eb.Uncles, eb.Txs</span><br><span class="line">b.size.Store(common.StorageSize(rlp.ListSize(size)))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// EncodeRLP serializes b into the Ethereum RLP block format.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">EncodeRLP</span><span class="params">(w io.Writer)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> rlp.Encode(w, extblock&#123;</span><br><span class="line">Header: b.header,</span><br><span class="line">Txs:    b.transactions,</span><br><span class="line">Uncles: b.uncles,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [deprecated by eth/63]</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *StorageBlock)</span> <span class="title">DecodeRLP</span><span class="params">(s *rlp.Stream)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> sb storageblock</span><br><span class="line"><span class="keyword">if</span> err := s.Decode(&amp;sb); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">b.header, b.uncles, b.transactions, b.td = sb.Header, sb.Uncles, sb.Txs, sb.TD</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> copies</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Uncles</span><span class="params">()</span> []*<span class="title">Header</span></span>          &#123; <span class="keyword">return</span> b.uncles &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Transactions</span><span class="params">()</span> <span class="title">Transactions</span></span> &#123; <span class="keyword">return</span> b.transactions &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Transaction</span><span class="params">(hash common.Hash)</span> *<span class="title">Transaction</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, transaction := <span class="keyword">range</span> b.transactions &#123;</span><br><span class="line"><span class="keyword">if</span> transaction.Hash() == hash &#123;</span><br><span class="line"><span class="keyword">return</span> transaction</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Number</span><span class="params">()</span> *<span class="title">big</span>.<span class="title">Int</span></span>     &#123; <span class="keyword">return</span> <span class="built_in">new</span>(big.Int).Set(b.header.Number) &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">GasLimit</span><span class="params">()</span> <span class="title">uint64</span></span>     &#123; <span class="keyword">return</span> b.header.GasLimit &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">GasUsed</span><span class="params">()</span> <span class="title">uint64</span></span>      &#123; <span class="keyword">return</span> b.header.GasUsed &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Difficulty</span><span class="params">()</span> *<span class="title">big</span>.<span class="title">Int</span></span> &#123; <span class="keyword">return</span> <span class="built_in">new</span>(big.Int).Set(b.header.Difficulty) &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Time</span><span class="params">()</span> <span class="title">uint64</span></span>         &#123; <span class="keyword">return</span> b.header.Time &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">NumberU64</span><span class="params">()</span> <span class="title">uint64</span></span>        &#123; <span class="keyword">return</span> b.header.Number.Uint64() &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">MixDigest</span><span class="params">()</span> <span class="title">common</span>.<span class="title">Hash</span></span>   &#123; <span class="keyword">return</span> b.header.MixDigest &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Nonce</span><span class="params">()</span> <span class="title">uint64</span></span>            &#123; <span class="keyword">return</span> binary.BigEndian.Uint64(b.header.Nonce[:]) &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Bloom</span><span class="params">()</span> <span class="title">Bloom</span></span>             &#123; <span class="keyword">return</span> b.header.Bloom &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Coinbase</span><span class="params">()</span> <span class="title">common</span>.<span class="title">Address</span></span> &#123; <span class="keyword">return</span> b.header.Coinbase &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Root</span><span class="params">()</span> <span class="title">common</span>.<span class="title">Hash</span></span>        &#123; <span class="keyword">return</span> b.header.Root &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">ParentHash</span><span class="params">()</span> <span class="title">common</span>.<span class="title">Hash</span></span>  &#123; <span class="keyword">return</span> b.header.ParentHash &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">TxHash</span><span class="params">()</span> <span class="title">common</span>.<span class="title">Hash</span></span>      &#123; <span class="keyword">return</span> b.header.TxHash &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">ReceiptHash</span><span class="params">()</span> <span class="title">common</span>.<span class="title">Hash</span></span> &#123; <span class="keyword">return</span> b.header.ReceiptHash &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">UncleHash</span><span class="params">()</span> <span class="title">common</span>.<span class="title">Hash</span></span>   &#123; <span class="keyword">return</span> b.header.UncleHash &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Extra</span><span class="params">()</span> []<span class="title">byte</span></span>            &#123; <span class="keyword">return</span> common.CopyBytes(b.header.Extra) &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Header</span><span class="params">()</span> *<span class="title">Header</span></span> &#123; <span class="keyword">return</span> CopyHeader(b.header) &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Body returns the non-header content of the block.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Body</span><span class="params">()</span> *<span class="title">Body</span></span> &#123; <span class="keyword">return</span> &amp;Body&#123;b.transactions, b.uncles&#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Size returns the true RLP encoded storage size of the block, either by encoding</span></span><br><span class="line"><span class="comment">// and returning it, or returning a previsouly cached value.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Size</span><span class="params">()</span> <span class="title">common</span>.<span class="title">StorageSize</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> size := b.size.Load(); size != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> size.(common.StorageSize)</span><br><span class="line">&#125;</span><br><span class="line">c := writeCounter(<span class="number">0</span>)</span><br><span class="line">rlp.Encode(&amp;c, b)</span><br><span class="line">b.size.Store(common.StorageSize(c))</span><br><span class="line"><span class="keyword">return</span> common.StorageSize(c)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// SanityCheck can be used to prevent that unbounded fields are</span></span><br><span class="line"><span class="comment">// stuffed with junk data to add processing overhead</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">SanityCheck</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> b.header.SanityCheck()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> writeCounter common.StorageSize</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *writeCounter)</span> <span class="title">Write</span><span class="params">(b []<span class="keyword">byte</span>)</span> <span class="params">(<span class="keyword">int</span>, error)</span></span> &#123;</span><br><span class="line">*c += writeCounter(<span class="built_in">len</span>(b))</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(b), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CalcUncleHash</span><span class="params">(uncles []*Header)</span> <span class="title">common</span>.<span class="title">Hash</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(uncles) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> EmptyUncleHash</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> rlpHash(uncles)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// WithSeal returns a new block with the data from b but the header replaced with</span></span><br><span class="line"><span class="comment">// the sealed one.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">WithSeal</span><span class="params">(header *Header)</span> *<span class="title">Block</span></span> &#123;</span><br><span class="line">cpy := *header</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &amp;Block&#123;</span><br><span class="line">header:       &amp;cpy,</span><br><span class="line">transactions: b.transactions,</span><br><span class="line">uncles:       b.uncles,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// WithBody returns a new block with the given transaction and uncle contents.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">WithBody</span><span class="params">(transactions []*Transaction, uncles []*Header)</span> *<span class="title">Block</span></span> &#123;</span><br><span class="line">block := &amp;Block&#123;</span><br><span class="line">header:       CopyHeader(b.header),</span><br><span class="line">transactions: <span class="built_in">make</span>([]*Transaction, <span class="built_in">len</span>(transactions)),</span><br><span class="line">uncles:       <span class="built_in">make</span>([]*Header, <span class="built_in">len</span>(uncles)),</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">copy</span>(block.transactions, transactions)</span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> uncles &#123;</span><br><span class="line">block.uncles[i] = CopyHeader(uncles[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> block</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hash returns the keccak256 hash of b&#x27;s header.</span></span><br><span class="line"><span class="comment">// The hash is computed on the first call and cached thereafter.</span></span><br><span class="line"><span class="comment">// 获取当前区块的hash，如果已经有了直接返回，否则计算当前区块的hash再返回</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *Block)</span> <span class="title">Hash</span><span class="params">()</span> <span class="title">common</span>.<span class="title">Hash</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> hash := b.hash.Load(); hash != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> hash.(common.Hash)</span><br><span class="line">&#125;</span><br><span class="line">v := b.header.Hash()</span><br><span class="line">b.hash.Store(v)</span><br><span class="line"><span class="keyword">return</span> v</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Blocks []*Block</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="对比etherscan-io的显示的Block字段：">对比etherscan.io的显示的Block字段：</h3><p><img src="https://gitee.com/guozhe001/images/raw/master/etherscan_block.png" alt="etherscan_block"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;学习github-com-ethereum-go-ethereum-core-types-block-go源码Version-1-10-2-unstable&quot;&gt;学习&lt;code&gt;github.com/ethereum/go-ethereum/core/types.b</summary>
      
    
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/ethereum/"/>
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/tags/ethereum/"/>
    
    <category term="swarm" scheme="https://guozhe001.github.io/tags/swarm/"/>
    
  </entry>
  
  <entry>
    <title>Oracle-预言机</title>
    <link href="https://guozhe001.github.io/2021/04/06/blockchain/eth/Oracle-%E9%A2%84%E8%A8%80%E6%9C%BA/"/>
    <id>https://guozhe001.github.io/2021/04/06/blockchain/eth/Oracle-%E9%A2%84%E8%A8%80%E6%9C%BA/</id>
    <published>2021-04-06T10:08:13.891Z</published>
    <updated>2021-04-07T08:13:16.202Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么需要预言机？">为什么需要预言机？</h2><ol><li>EVM和智能合约没有内在的随机性来源</li><li>外部数据只能作为交易的数据载荷引入（而不能通过智能合约去查询）</li></ol><h3 id="为什么EVM和智能合约没有内在的随机性来源？">为什么EVM和智能合约没有内在的随机性来源？</h3><p>因为Pow共识，如果一个在EVM和智能合约内部真的有随机性的数据，并且智能合约使用了这些数据。那么极有可能无法达成共识，因为挖矿的矿工获得的随机数和其他验证者获得的随机数会不一样。</p><h3 id="为什么外部数据只能作为交易的数据载荷引入？">为什么外部数据只能作为交易的数据载荷引入？</h3><p>如果在合约内部使用随机数，比如区块的高度，hash函数等伪随机数，那么矿工只打包有利于自己的随机结果即可。而从外部传入随机数据矿工就无法控制了。</p><h2 id="预言机的应用场景和示例">预言机的应用场景和示例</h2><p>理想情况下，预言机提供了一种无信任（即无需信任提供的数据的人或组织）的方式来获取链外信息。</p><h3 id="应用场景">应用场景</h3><p>有些预言机是提供特定的私有数据源的数据，例如：</p><ul><li><p>大学毕业证书</p></li><li><p>政府ID</p></li><li><p>护照</p></li><li><p>征信报告</p></li></ul><p>以上这些这些数据是掌握在大学、政府部门等，你只能信任他们。（不信任也没办法，你无法证明他们提供的数据不正确）</p><p>其他可能由预言机提供的数据示例包括：</p><ul><li>物理随机数源或熵源：如在彩票智能合约中公平地选出获胜者</li><li>与自然灾害相关的参数触发器：触发大型自然灾害债券智能合约</li><li>汇率数据：例如让加密货币与法币精确挂钩</li><li>资本市场数据：例如为一揽子代币化资产或证券定价（数字货币基金）</li><li>指标引用数据：例如将利率纳入智能金融衍生品合约</li><li>统计与准统计数据：安全标识、国家代码、货币代号等</li><li>时间和间隔数据：基于精准的SI（国际单位制）时间度量的事件触发器</li><li>天气数据：例如给予天气预报的保险费计算器</li><li>政治事件：预测市场走势</li><li>运动事件：预测市场走势以及体育博彩相关的合约</li><li>地理定位数据：例如供应链跟踪</li><li>损坏程度核验：保险合约</li><li>其他区块链上发生的事件：可互操作函数</li><li>以太币市场价格：例如gas价格预言机</li><li>航班统计数据：例如用于团体和俱乐部的机票合同</li></ul><h2 id="预言机的设计模式">预言机的设计模式</h2><h3 id="预言机的关键功能">预言机的关键功能</h3><p>根据定义，所有预言机都提供了一些关键功能。这些能力包括：</p><ul><li>从链外的数据源收集数据</li><li>使用签名消息在链上传输数据</li><li>将数据放入智能合约的存储空间，使数据可用</li></ul><h3 id="实现预言机的三种主要方式">实现预言机的三种主要方式</h3><p>设置预言机的三种主要方式可以分为请求/响应、发布于订阅和立即读取。</p><h4 id="立即读取">立即读取</h4><ul><li><p>这种预言机提供及时决策所需的数据</p></li><li><p>这种预言机的例子包括那些持有组织数据或有组织发布数据（例如学术证书、拨号代码、机构会员资格、机场标识符、自主ID等）的预言机</p></li><li><p>这种预言机存储中的数据也可以通过区块链启用应用程序（Geth）直接在本地查找，不需要消耗gas</p></li><li><p>这种预言机存储的数据和实际组织提供的数据可能不一样。（为了保密只需要在合约存储hash即可）</p></li></ul><h4 id="发布与订阅">发布与订阅</h4><ul><li>在这种预言机中，要对预期改变的数据提供有效的广播服务，预言机要么由链上的智能合约轮询，要么由链外的守护进程监视和更新</li><li>这种预言机的示例包括价格推送、天气预报、经济或社会统计、交通数据等</li><li>以太坊时间日志应用程序特别容易注意预言机更新</li><li>但是如果使用智能合约去轮询可能会产生大量的gas支出</li></ul><h4 id="请求与响应">请求与响应</h4><p>这是数据空间太大而无法存储在智能合约中的情况，并且用户每次只需要整个数据集的一小部分。它也是数据提供商业务的适用模型</p><p>请求与响应预言机的步骤可以总结如下：</p><ol><li>接收来自DApp的查询</li><li>解析查询</li><li>检查是否提供了付款和数据访问权限</li><li>从链外数据源检索相关数据（并在必要时加密）</li><li>使用包含的数据对交易进行签名</li><li>将交易广播到网络</li><li>安排任何进一步必要的交易，例如通知等</li></ol><h2 id="数据认证">数据认证</h2><p>两种常见的数据认证方法：</p><ul><li>真实性证明（authenticity proof）</li><li>可信执行环境（Trusted Execution Environment，TEE）</li></ul><h3 id="真实性证明">真实性证明</h3><p>真实性证明是用密码学证据证明数据没有被篡改过。</p><p>TLSNotary：</p><p><img src="https://gitee.com/guozhe001/images/raw/master/walkthrough_diagram_simplified.svg" alt="img"></p><h3 id="可信执行环境">可信执行环境</h3><p>使用Intel SGX来保证对HTTPS查询的响应可以被验证为可信的。</p><ul><li>SGK提供了完整性保证：使得在安全区中运行的应用程序收到CPU保护。不被其他进程篡改</li><li>SGK提供了机密性：保证应用程序在安全区中运行时，其状态对其他进程来说是不可知的</li><li>SGK通过生成应用程序确定在安全区中运行的数字签名，让证明成为可能，只要验证这个签名就能够确认程序在SGK安全区内安全地运行</li></ul><h2 id="计算性的预言机">计算性的预言机</h2><p>智能合约因为有gas费限制的原因，并不适合做非常复杂的计算。部分提供计算性预言机如下：</p><ul><li><a href="https://provable.xyz/">Provable</a></li><li><a href="https://www.infoq.cn/article/2016/10/azure-bletchley-first-release/">Cryptlet</a></li><li><a href="https://truebit.io/">truebit</a></li></ul><h2 id="去中心化预言机">去中心化预言机</h2><ul><li><a href="https://zh.chain.link/">ChainLink</a></li><li><a href="https://nestprotocol.org/">NEST Protocol</a></li></ul><h2 id="Solidity中的预言机客户端接口">Solidity中的预言机客户端接口</h2><h3 id="轮询ETH-USD价格">轮询ETH/USD价格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^0.4.22;</span><br><span class="line">import &quot;github.com&#x2F;provable-things&#x2F;ethereum-api&#x2F;provableAPI_0.4.25.sol&quot;;</span><br><span class="line"></span><br><span class="line">contract ExampleContract is usingProvable &#123;</span><br><span class="line"></span><br><span class="line">    string public ETHUSD;</span><br><span class="line">    event LogConstructorInitiated(string nextStep);</span><br><span class="line">    event LogPriceUpdated(string price);</span><br><span class="line">    event LogNewProvableQuery(string description);</span><br><span class="line"></span><br><span class="line">    function ExampleContract() payable &#123;</span><br><span class="line">        LogConstructorInitiated(&quot;Constructor was initiated. Call &#39;updatePrice()&#39; to send the Provable Query.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __callback(bytes32 myid, string result) &#123;</span><br><span class="line">        if (msg.sender !&#x3D; provable_cbAddress()) revert();</span><br><span class="line">        ETHUSD &#x3D; result;</span><br><span class="line">        LogPriceUpdated(result);</span><br><span class="line">        updatePrice();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function updatePrice() payable &#123;</span><br><span class="line">        if (provable_getPrice(&quot;URL&quot;) &gt; this.balance) &#123;</span><br><span class="line">            LogNewProvableQuery(&quot;Provable query was NOT sent, please add some ETH to cover for the query fee&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            LogNewProvableQuery(&quot;Provable query was sent, standing by for the answer..&quot;);</span><br><span class="line">            provable_query(60, &quot;URL&quot;, &quot;json(https:&#x2F;&#x2F;api.pro.coinbase.com&#x2F;products&#x2F;ETH-USD&#x2F;ticker).price&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为什么需要预言机？&quot;&gt;为什么需要预言机？&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;EVM和智能合约没有内在的随机性来源&lt;/li&gt;
&lt;li&gt;外部数据只能作为交易的数据载荷引入（而不能通过智能合约去查询）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;为什么EVM和智能合约没有内在的随机</summary>
      
    
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/ethereum/"/>
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/tags/ethereum/"/>
    
    <category term="Oracle" scheme="https://guozhe001.github.io/tags/Oracle/"/>
    
    <category term="智能合约" scheme="https://guozhe001.github.io/tags/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装多版本golang</title>
    <link href="https://guozhe001.github.io/2021/04/02/others/Mac%E5%AE%89%E8%A3%85%E5%A4%9A%E7%89%88%E6%9C%ACgolang/"/>
    <id>https://guozhe001.github.io/2021/04/02/others/Mac%E5%AE%89%E8%A3%85%E5%A4%9A%E7%89%88%E6%9C%ACgolang/</id>
    <published>2021-04-02T08:04:10.195Z</published>
    <updated>2021-04-06T10:07:31.293Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因">起因</h2><p>最近在运行一些源软件时，因为golang的版本问题而报错：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">compile: version &quot;go1.15.7&quot; does not match go tool version &quot;go1.16&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> golang.org/x/net/html/atom</span></span><br><span class="line">compile: version &quot;go1.15.7&quot; does not match go tool version &quot;go1.16&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> golang.org/x/text/internal/utf8internal</span></span><br><span class="line">compile: version &quot;go1.15.7&quot; does not match go tool version &quot;go1.16&quot;</span><br></pre></td></tr></table></figure><h2 id="安装不同版本的golang">安装不同版本的golang</h2><h3 id="首先安装gvm">首先安装gvm</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt; &lt;(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)</span><br></pre></td></tr></table></figure><p>安装完成之后重启终端。</p><h3 id="查看当前已经安装了哪些版本的go">查看当前已经安装了哪些版本的go</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install go@1.15</span><br></pre></td></tr></table></figure><p><em>注意：指定版本时可以先运行<code>brew search go</code>来查看有哪些版本，如果直接指定go1.15.7小版本可能报错。</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;起因&quot;&gt;起因&lt;/h2&gt;
&lt;p&gt;最近在运行一些源软件时，因为golang的版本问题而报错：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;lin</summary>
      
    
    
    
    <category term="Mac" scheme="https://guozhe001.github.io/categories/Mac/"/>
    
    
    <category term="Mac" scheme="https://guozhe001.github.io/tags/Mac/"/>
    
    <category term="golang" scheme="https://guozhe001.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>与swarm-bee交互</title>
    <link href="https://guozhe001.github.io/2021/04/02/blockchain/eth/%E4%B8%8Eswarm-bee%E4%BA%A4%E4%BA%92/"/>
    <id>https://guozhe001.github.io/2021/04/02/blockchain/eth/%E4%B8%8Eswarm-bee%E4%BA%A4%E4%BA%92/</id>
    <published>2021-04-02T03:21:21.162Z</published>
    <updated>2021-04-09T03:48:47.245Z</updated>
    
    <content type="html"><![CDATA[<h2 id="状态检查">状态检查</h2><h3 id="主页">主页</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl localhost:1633</span><br></pre></td></tr></table></figure><h3 id="检查运行是否正常">检查运行是否正常</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s http://localhost:1635/health</span><br></pre></td></tr></table></figure><h3 id="查看当前bee节点的地址">查看当前bee节点的地址</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bee-get-addr</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s localhost:1635/addresses | jq .ethereum</span><br></pre></td></tr></table></figure><h3 id="查看链接了多少个peer">查看链接了多少个peer</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s http://localhost:1635/peers | jq &#x27;.peers | length&#x27;</span><br></pre></td></tr></table></figure><h3 id="查看网络拓扑">查看网络拓扑</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET http://localhost:1635/topology | jq</span><br></pre></td></tr></table></figure><h2 id="上传文件">上传文件</h2><h3 id="上传文件，返回的是一个hash值">上传文件，返回的是一个hash值</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -F file=@bee.jpg http://localhost:1633/files</span><br><span class="line">&#123;&quot;reference&quot;:&quot;02a03340405f30c1027b885ee39903fb394ba8909e98029dd6c14371437edafc&quot;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --data-binary @bee.jpg  -H &quot;Content-Type: video/jpg&quot; &quot;http://localhost:1633/files?name=bee.jpg&quot;</span><br></pre></td></tr></table></figure><h3 id="下载文件">下载文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -OJ http://localhost:1633/files/042d4fe94b946e2cb51196a8c136b8cc335156525bf1ad7e86356c2402291dd4</span><br><span class="line">https://gateway.ethswarm.org/files/042d4fe94b946e2cb51196a8c136b8cc335156525bf1ad7e86356c2402291dd4</span><br></pre></td></tr></table></figure><p><em><strong>特别注意：不要传一些重要数据到swarm除非已经加密，因为上传上去之后的所有文件都是公开的，只要知道hash就能下载。</strong></em></p><h2 id="上传文件夹">上传文件夹</h2><p>比如有一个<a href="https://github.com/guozhe001/hello-swarm.git">前端vue项目</a>，需要上传到swarm</p><ol><li>需要把项目构建一下<code>npm run build</code></li><li>把需要上传的文件夹<code>dist</code>打包</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl \</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     -X POST \</span></span><br><span class="line"><span class="bash">&gt;     -H <span class="string">&quot;Content-Type: application/x-tar&quot;</span> \</span></span><br><span class="line"><span class="bash">&gt;     -H <span class="string">&quot;Swarm-Index-Document: index.html&quot;</span> \</span></span><br><span class="line"><span class="bash">&gt;     --data-binary @hello-swarm.tar http://localhost:1633/<span class="built_in">dirs</span></span></span><br><span class="line">&#123;&quot;reference&quot;:&quot;33c91d3cc21b4c56c9963f7918be1342adcc2b83c53bcc2ae90f181d5b36c624&quot;&#125;</span><br></pre></td></tr></table></figure><h2 id="支票信息API">支票信息API</h2><h3 id="查询当前bee节点的余额">查询当前bee节点的余额</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl localhost:1635/chequebook/balance | jq</span><br></pre></td></tr></table></figure><h3 id="查看每个节点（当前bee节点连接的）的余额">查看每个节点（当前bee节点连接的）的余额</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl localhost:1635/balances | jq</span><br></pre></td></tr></table></figure><h3 id="查看结算信息">查看结算信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl localhost:1635/settlements | jq</span><br></pre></td></tr></table></figure><h3 id="查看支票信息">查看支票信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl localhost:1635/chequebook/cheque | jq</span><br></pre></td></tr></table></figure><h3 id="支票兑换-地址是上一个命令中显示的地址">支票兑换(地址是上一个命令中显示的地址)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST http://localhost:1635/chequebook/cashout/d7881307e793e389642ea733451db368c4c9b9e23f188cca659c8674d183a56b</span><br></pre></td></tr></table></figure><h3 id="查看支票的兑换状态">查看支票的兑换状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:1635/chequebook/cashout/d7881307e793e389642ea733451db368c4c9b9e23f188cca659c8674d183a56b | jq</span><br></pre></td></tr></table></figure><h3 id="gBZZ提现">gBZZ提现</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST http://localhost:1635/chequebook/withdraw\?amount\=1000 | jq</span><br></pre></td></tr></table></figure><h2 id="管理支票脚本">管理支票脚本</h2><h3 id="下载官方的脚本">下载官方的脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O cashout.sh https://gist.githubusercontent.com/ralph-pichler/3b5ccd7a5c5cd0500e6428752b37e975/raw/7ba05095e0836735f4a648aefe52c584e18e065f/cashout.sh</span><br></pre></td></tr></table></figure><h3 id="添加可执行权限">添加可执行权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x cashout.sh</span><br></pre></td></tr></table></figure><h3 id="列出所有的没有兑换的支票信息">列出所有的没有兑换的支票信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cashout.sh</span><br></pre></td></tr></table></figure><h3 id="当超过5BZZ时兑换所有支票：">当超过5BZZ时兑换所有支票：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cashout.sh cashout-all 5</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;状态检查&quot;&gt;状态检查&lt;/h2&gt;
&lt;h3 id=&quot;主页&quot;&gt;主页&lt;/h3&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b</summary>
      
    
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/ethereum/"/>
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/tags/ethereum/"/>
    
    <category term="swarm" scheme="https://guozhe001.github.io/tags/swarm/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装swarm-bee</title>
    <link href="https://guozhe001.github.io/2021/04/02/blockchain/eth/Mac%E5%AE%89%E8%A3%85swarm-bee/"/>
    <id>https://guozhe001.github.io/2021/04/02/blockchain/eth/Mac%E5%AE%89%E8%A3%85swarm-bee/</id>
    <published>2021-04-02T02:39:45.975Z</published>
    <updated>2021-04-02T08:03:31.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装swarm-clef">安装swarm-clef</h2><h3 id="安装">安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew tap ethersphere/tap</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install swarm-clef</span><br></pre></td></tr></table></figure><h3 id="启动">启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services start swarm-clef</span><br></pre></td></tr></table></figure><h2 id="安装swarm-bee">安装swarm-bee</h2><h3 id="安装-v2">安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install swarm-bee</span><br></pre></td></tr></table></figure><h3 id="启动-v2">启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services start swarm-bee</span><br></pre></td></tr></table></figure><h3 id="查看日志验证启动情况">查看日志验证启动情况</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f /usr/local/var/log/swarm-bee/bee.log</span><br></pre></td></tr></table></figure><h2 id="常用命令记录">常用命令记录</h2><h3 id="启动和停止">启动和停止</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">brew services start swarm-bee</span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止</span></span><br><span class="line">brew services stop swarm-bee</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启</span></span><br><span class="line">brew services restart swarm-bee</span><br></pre></td></tr></table></figure><h3 id="文件路径">文件路径</h3><h4 id="日志文件：">日志文件：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f /usr/local/var/log/swarm-bee/bee.log</span><br></pre></td></tr></table></figure><h4 id="配置文件：">配置文件：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/etc/swarm-bee/bee.yaml</span><br></pre></td></tr></table></figure><h3 id="密钥文件">密钥文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll ~/.bee/keys</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装swarm-clef&quot;&gt;安装swarm-clef&lt;/h2&gt;
&lt;h3 id=&quot;安装&quot;&gt;安装&lt;/h3&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/ethereum/"/>
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/tags/ethereum/"/>
    
    <category term="swarm" scheme="https://guozhe001.github.io/tags/swarm/"/>
    
  </entry>
  
  <entry>
    <title>ubantu如何挂载硬盘</title>
    <link href="https://guozhe001.github.io/2021/04/02/others/ubantu%E5%A6%82%E4%BD%95%E6%8C%82%E8%BD%BD%E7%A1%AC%E7%9B%98/"/>
    <id>https://guozhe001.github.io/2021/04/02/others/ubantu%E5%A6%82%E4%BD%95%E6%8C%82%E8%BD%BD%E7%A1%AC%E7%9B%98/</id>
    <published>2021-04-02T02:39:45.971Z</published>
    <updated>2021-04-02T03:49:17.088Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看已经挂载了哪些">查看已经挂载了哪些</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> df -l</span></span><br><span class="line">文件系统           1K-块     已用      可用 已用% 挂载点</span><br><span class="line">udev            16362980        0  16362980    0% /dev</span><br><span class="line">tmpfs            3285100     2364   3282736    1% /run</span><br><span class="line">/dev/nvme0n1p7 200537360 18016188 172264740   10% /</span><br><span class="line">tmpfs           16425488   408624  16016864    3% /dev/shm</span><br><span class="line">tmpfs               5120        4      5116    1% /run/lock</span><br><span class="line">tmpfs           16425488        0  16425488    0% /sys/fs/cgroup</span><br><span class="line">/dev/loop0         56832    56832         0  100% /snap/core18/1988</span><br><span class="line">/dev/loop1         66432    66432         0  100% /snap/gtk-common-themes/1514</span><br><span class="line">/dev/loop2         33152    33152         0  100% /snap/snapd/11402</span><br><span class="line">/dev/loop3         52352    52352         0  100% /snap/snap-store/518</span><br><span class="line">/dev/loop4         31872    31872         0  100% /snap/snapd/11036</span><br><span class="line">/dev/loop5        224256   224256         0  100% /snap/gnome-3-34-1804/66</span><br><span class="line">/dev/nvme0n1p1     98304    33555     64749   35% /boot/efi</span><br><span class="line">tmpfs            3285096       20   3285076    1% /run/user/125</span><br><span class="line">tmpfs            3285096       92   3285004    1% /run/user/1000</span><br><span class="line">/dev/loop6        101632   101632         0  100% /snap/core/10908</span><br><span class="line">/dev/loop7        435968   435968         0  100% /snap/pycharm-community/233</span><br><span class="line">/dev/loop8        680192   680192         0  100% /snap/intellij-idea-community/289</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查看有哪些">查看有哪些</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo fdisk -l</span></span><br><span class="line">Disk /dev/loop0：55.48 MiB，58159104 字节，113592 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/loop1：64.79 MiB，67915776 字节，132648 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/loop2：32.28 MiB，33841152 字节，66096 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/loop3：51.4 MiB，53522432 字节，104536 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/loop4：31.9 MiB，32595968 字节，63664 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/loop5：218.102 MiB，229629952 字节，448496 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/loop6：99.22 MiB，104030208 字节，203184 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/loop7：425.67 MiB，446328832 字节，871736 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/nvme0n1：931.53 GiB，1000204886016 字节，1953525168 个扇区</span><br><span class="line">Disk model: WDC WDS100T2B0C-00PXH0                  </span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：gpt</span><br><span class="line">磁盘标识符：C12B6754-9D12-4F54-92FA-086CE249C548</span><br><span class="line"></span><br><span class="line">设备                 起点       末尾      扇区   大小 类型</span><br><span class="line">/dev/nvme0n1p1       2048     206847    204800   100M EFI 系统</span><br><span class="line">/dev/nvme0n1p2     206848     239615     32768    16M Microsoft 保留</span><br><span class="line">/dev/nvme0n1p3     239616  408449302 408209687 194.7G Microsoft 基本数据</span><br><span class="line">/dev/nvme0n1p4  408451072  409597951   1146880   560M Windows 恢复环境</span><br><span class="line">/dev/nvme0n1p5  409597952 1134321663 724723712 345.6G Microsoft 基本数据</span><br><span class="line">/dev/nvme0n1p6 1134321664 1543921663 409600000 195.3G Microsoft 基本数据</span><br><span class="line">/dev/nvme0n1p7 1543921664 1953523711 409602048 195.3G Linux 文件系统</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/sda：7.28 TiB，8001563222016 字节，15628053168 个扇区</span><br><span class="line">Disk model: HGST HUS728T8TAL</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 4096 字节</span><br><span class="line">I/O 大小(最小/最佳)：4096 字节 / 4096 字节</span><br><span class="line">磁盘标签类型：gpt</span><br><span class="line">磁盘标识符：F654D976-A27E-49D1-B0FD-5DCB3914D51D</span><br><span class="line"></span><br><span class="line">设备             起点        末尾       扇区  大小 类型</span><br><span class="line">/dev/sda1          34       32767      32734   16M Microsoft 保留</span><br><span class="line">/dev/sda2       32768  4096032767 4096000000  1.9T Microsoft 基本数据</span><br><span class="line">/dev/sda3  4096032768  8192032767 4096000000  1.9T Microsoft 基本数据</span><br><span class="line">/dev/sda4  8192032768 15628050431 7436017664  3.5T Microsoft 基本数据</span><br><span class="line"></span><br><span class="line">分区 1 未起始于物理扇区边界。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/loop8：664.17 MiB，696426496 字节，1360208 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查看想要挂载的硬盘的uuid">查看想要挂载的硬盘的uuid</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> lsblk -f</span></span><br><span class="line">NAME        FSTYPE   LABEL    UUID                                 FSAVAIL FSUSE% MOUNTPOINT</span><br><span class="line">loop0       squashfs                                                     0   100% /snap/core18/1988</span><br><span class="line">loop1       squashfs                                                     0   100% /snap/gtk-common-themes/1514</span><br><span class="line">loop2       squashfs                                                     0   100% /snap/snapd/11402</span><br><span class="line">loop3       squashfs                                                     0   100% /snap/snap-store/518</span><br><span class="line">loop4       squashfs                                                     0   100% /snap/snapd/11036</span><br><span class="line">loop5       squashfs                                                     0   100% /snap/gnome-3-34-1804/66</span><br><span class="line">loop6       squashfs                                                     0   100% /snap/core/10908</span><br><span class="line">loop7       squashfs                                                     0   100% /snap/pycharm-community/233</span><br><span class="line">loop8       squashfs                                                     0   100% /snap/intellij-idea-community/289</span><br><span class="line">sda                                                                               </span><br><span class="line">├─sda1                                                                            </span><br><span class="line">├─sda2      ntfs     数据     38C09128C090ECFE                                    </span><br><span class="line">├─sda3      ntfs     新加卷   2A9E99709E993573                                    </span><br><span class="line">└─sda4      ntfs     新加卷   C25E9EB25E9E9F2B                                    </span><br><span class="line">nvme0n1                                                                           </span><br><span class="line">├─nvme0n1p1 vfat              2E15-C03F                              63.2M    34% /boot/efi</span><br><span class="line">├─nvme0n1p2                                                                       </span><br><span class="line">├─nvme0n1p3 ntfs              A4AA2056AA2026F0                                    </span><br><span class="line">├─nvme0n1p4 ntfs              FE347AD2347A8D81                                    </span><br><span class="line">├─nvme0n1p5 ntfs     娱乐     E848526348523114                                    </span><br><span class="line">├─nvme0n1p6 ntfs     学习工作 EA1E592A1E58F155                                    </span><br><span class="line">└─nvme0n1p7 ext4              12354a11-9bf9-4882-a202-3e3e675b3158  164.3G     9% /</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>比如我想要挂载<code>/dev/sda4</code>的uuid为<code>C25E9EB25E9E9F2B</code></p><h2 id="修改-etc-fstab进行挂载">修改<code>/etc/fstab</code>进行挂载</h2><p>参考：<a href="https://blog.51cto.com/13570193/2070157">https://blog.51cto.com/13570193/2070157</a></p><p>比如我的添加了一行：<code>UUID=C25E9EB25E9E9F2B /data ntfs defaults 0 0</code></p><h2 id="重启">重启</h2><h2 id="验证">验证</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> df -h</span></span><br><span class="line">文件系统        容量  已用  可用 已用% 挂载点</span><br><span class="line">udev             16G     0   16G    0% /dev</span><br><span class="line">tmpfs           3.2G  2.3M  3.2G    1% /run</span><br><span class="line">/dev/nvme0n1p7  192G   18G  165G   10% /</span><br><span class="line">tmpfs            16G     0   16G    0% /dev/shm</span><br><span class="line">tmpfs           5.0M  4.0K  5.0M    1% /run/lock</span><br><span class="line">tmpfs            16G     0   16G    0% /sys/fs/cgroup</span><br><span class="line">/dev/loop0       56M   56M     0  100% /snap/core18/1988</span><br><span class="line">/dev/loop1      100M  100M     0  100% /snap/core/10908</span><br><span class="line">/dev/loop2       33M   33M     0  100% /snap/snapd/11402</span><br><span class="line">/dev/loop4       52M   52M     0  100% /snap/snap-store/518</span><br><span class="line">/dev/loop3      426M  426M     0  100% /snap/pycharm-community/233</span><br><span class="line">/dev/loop5       32M   32M     0  100% /snap/snapd/11036</span><br><span class="line">/dev/loop6       65M   65M     0  100% /snap/gtk-common-themes/1514</span><br><span class="line">/dev/loop7      219M  219M     0  100% /snap/gnome-3-34-1804/66</span><br><span class="line">/dev/loop8      665M  665M     0  100% /snap/intellij-idea-community/289</span><br><span class="line">/dev/nvme0n1p1   96M   33M   64M   35% /boot/efi</span><br><span class="line">/dev/sda4       3.5T  211M  3.5T    1% /data</span><br><span class="line">tmpfs           3.2G   16K  3.2G    1% /run/user/125</span><br><span class="line">tmpfs           3.2G   24K  3.2G    1% /run/user/1000</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;查看已经挂载了哪些&quot;&gt;查看已经挂载了哪些&lt;/h2&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cl</summary>
      
    
    
    
    <category term="Linux" scheme="https://guozhe001.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://guozhe001.github.io/tags/Linux/"/>
    
    <category term="ubantu" scheme="https://guozhe001.github.io/tags/ubantu/"/>
    
  </entry>
  
  <entry>
    <title>ubantu系统下nvidia显卡超频设置</title>
    <link href="https://guozhe001.github.io/2021/04/02/others/ubantu%E7%B3%BB%E7%BB%9F%E4%B8%8Bnvidia%E6%98%BE%E5%8D%A1%E8%B6%85%E9%A2%91%E8%AE%BE%E7%BD%AE/"/>
    <id>https://guozhe001.github.io/2021/04/02/others/ubantu%E7%B3%BB%E7%BB%9F%E4%B8%8Bnvidia%E6%98%BE%E5%8D%A1%E8%B6%85%E9%A2%91%E8%AE%BE%E7%BD%AE/</id>
    <published>2021-04-02T02:39:45.759Z</published>
    <updated>2021-04-02T03:49:02.933Z</updated>
    
    <content type="html"><![CDATA[<p>必要条件是先安装<a href="https://www.nvidia.cn/Download/index.aspx?lang=cn">nvidia的官方驱动</a></p><h3 id="查看显卡信息：">查看显卡信息：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><h3 id="设置显卡功率">设置显卡功率</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置第一个显卡的功率为125w</span></span><br><span class="line">sudo nvidia-smi -i 0 -pl 125</span><br></pre></td></tr></table></figure><h3 id="开启超频">开启超频</h3><p>下面的命令是用来开启超频功能的，但是执行之后会黑屏。删除相应的文件重启即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nvidia-xconfig -a --cool-bits=31 --allow-empty-initial-configuration</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;必要条件是先安装&lt;a href=&quot;https://www.nvidia.cn/Download/index.aspx?lang=cn&quot;&gt;nvidia的官方驱动&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;查看显卡信息：&quot;&gt;查看显卡信息：&lt;/h3&gt;
&lt;figure class=&quot;high</summary>
      
    
    
    
    <category term="Linux" scheme="https://guozhe001.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://guozhe001.github.io/tags/Linux/"/>
    
    <category term="nvidia" scheme="https://guozhe001.github.io/tags/nvidia/"/>
    
    <category term="ubuntu" scheme="https://guozhe001.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ubantu20.04设置静态ip</title>
    <link href="https://guozhe001.github.io/2021/04/02/others/ubantu20.04%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81ip/"/>
    <id>https://guozhe001.github.io/2021/04/02/others/ubantu20.04%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81ip/</id>
    <published>2021-04-02T02:39:45.757Z</published>
    <updated>2021-04-02T03:49:20.678Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置静态IP">设置静态IP</h2><h3 id="修改-etc-netplan-01-network-manager-all-yaml文件如下：">修改<code>/etc/netplan/01-network-manager-all.yaml</code>文件如下：</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Let NetworkManager manage all devices on this system</span></span><br><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">renderer:</span> <span class="string">NetworkManager</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">        <span class="attr">wlp7s0:</span></span><br><span class="line">            <span class="attr">addresses:</span> [<span class="number">192.168</span><span class="number">.0</span><span class="number">.107</span><span class="string">/24</span>, ]</span><br><span class="line">            <span class="attr">dhcp4:</span> <span class="literal">no</span></span><br><span class="line">            <span class="attr">dhcp6:</span> <span class="literal">no</span></span><br><span class="line">            <span class="attr">gateway4:</span>  <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">            <span class="attr">nameservers:</span></span><br><span class="line">                <span class="attr">addresses:</span> [<span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span>, <span class="number">9.9</span><span class="number">.9</span><span class="number">.9</span>]</span><br></pre></td></tr></table></figure><p>其中的<code>wlp7s0</code>是网卡信息，可以通过<code>ifconfig</code>获得。</p><h3 id="设置生效：">设置生效：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo netplan apply</span><br></pre></td></tr></table></figure><h2 id="启动ssh">启动ssh</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install openssh-service</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;设置静态IP&quot;&gt;设置静态IP&lt;/h2&gt;
&lt;h3 id=&quot;修改-etc-netplan-01-network-manager-all-yaml文件如下：&quot;&gt;修改&lt;code&gt;/etc/netplan/01-network-manager-all.yaml&lt;/code&gt;</summary>
      
    
    
    
    <category term="Linux" scheme="https://guozhe001.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://guozhe001.github.io/tags/Linux/"/>
    
    <category term="ubantu" scheme="https://guozhe001.github.io/tags/ubantu/"/>
    
  </entry>
  
  <entry>
    <title>如何在ubantu上启动go-ethereum客户端</title>
    <link href="https://guozhe001.github.io/2021/04/02/blockchain/eth/ubantu%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85go-ethereum%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    <id>https://guozhe001.github.io/2021/04/02/blockchain/eth/ubantu%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85go-ethereum%E5%AE%A2%E6%88%B7%E7%AB%AF/</id>
    <published>2021-04-02T02:39:45.756Z</published>
    <updated>2021-04-06T07:59:35.338Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境准备">环境准备</h2><ul><li>安装git:<code>sudo apt install git</code></li><li>安装go:<code>sudo apt install golang-go</code></li></ul><h2 id="go-ethereum（Geth）客户端下载和编译">go-ethereum（Geth）客户端下载和编译</h2><h3 id="clone源码：">clone源码：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://gitee.com/guozhe001/go-ethereum.git</span><br></pre></td></tr></table></figure><h3 id="从源码构建geth">从源码构建geth</h3><p><em>需要科学上网</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd go-ethereum</span><br><span class="line">make geth</span><br></pre></td></tr></table></figure><p>编译结果如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br></pre></td><td class="code"><pre><span class="line">env GO111MODULE=on go run build/ci.go install ./cmd/geth</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; /usr/lib/go-1.13/bin/go build -ldflags -X main.gitCommit=54c0d573d75ab9baa239db3f071d6cb4d1ec6aad -X main.gitDate=20210325 -trimpath -v -o /home/guozhe/code/go-ethereum/build/bin/geth ./cmd/geth</span></span><br><span class="line">go: downloading github.com/holiman/uint256 v1.1.1</span><br><span class="line">go: downloading github.com/peterh/liner v1.1.1-0.20190123174540-a2c9a5303de7</span><br><span class="line">go: downloading golang.org/x/sys v0.0.0-20210124154548-22da62e12c0c</span><br><span class="line">go: downloading github.com/edsrzf/mmap-go v1.0.0</span><br><span class="line">go: downloading github.com/prometheus/tsdb v0.7.1</span><br><span class="line">go: downloading github.com/hashicorp/golang-lru v0.5.5-0.20210104140557-80c98217689d</span><br><span class="line">go: downloading github.com/golang/protobuf v1.4.3</span><br><span class="line">go: downloading github.com/holiman/bloomfilter/v2 v2.0.3</span><br><span class="line">go: downloading github.com/rs/cors v1.7.0</span><br><span class="line">go: downloading github.com/tyler-smith/go-bip39 v1.0.1-0.20181017060643-dbb3b84ba2ef</span><br><span class="line">go: extracting github.com/rs/cors v1.7.0</span><br><span class="line">go: downloading github.com/olekukonko/tablewriter v0.0.2-0.20190409134802-7e037d187b0c</span><br><span class="line">go: extracting github.com/edsrzf/mmap-go v1.0.0</span><br><span class="line">go: extracting github.com/holiman/uint256 v1.1.1</span><br><span class="line">go: downloading github.com/karalabe/usb v0.0.0-20190919080040-51dc0efba356</span><br><span class="line">go: extracting github.com/golang/protobuf v1.4.3</span><br><span class="line">go: downloading github.com/golang/snappy v0.0.3-0.20201103224600-674baa8c7fc3</span><br><span class="line">go: extracting golang.org/x/sys v0.0.0-20210124154548-22da62e12c0c</span><br><span class="line">go: downloading github.com/status-im/keycard-go v0.0.0-20190316090335-8537d3370df4</span><br><span class="line">go: extracting github.com/prometheus/tsdb v0.7.1</span><br><span class="line">go: downloading github.com/deckarep/golang-set v0.0.0-20180603214616-504e848d77ea</span><br><span class="line">go: extracting github.com/peterh/liner v1.1.1-0.20190123174540-a2c9a5303de7</span><br><span class="line">go: downloading github.com/rjeczalik/notify v0.9.1</span><br><span class="line">go: extracting github.com/tyler-smith/go-bip39 v1.0.1-0.20181017060643-dbb3b84ba2ef</span><br><span class="line">go: downloading golang.org/x/text v0.3.3</span><br><span class="line">go: extracting github.com/hashicorp/golang-lru v0.5.5-0.20210104140557-80c98217689d</span><br><span class="line">go: downloading github.com/naoina/go-stringutil v0.1.0</span><br><span class="line">go: downloading google.golang.org/protobuf v1.23.0</span><br><span class="line">go: extracting github.com/holiman/bloomfilter/v2 v2.0.3</span><br><span class="line">go: downloading github.com/dop251/goja v0.0.0-20200721192441-a695b0cdd498</span><br><span class="line">go: extracting github.com/olekukonko/tablewriter v0.0.2-0.20190409134802-7e037d187b0c</span><br><span class="line">go: downloading github.com/syndtr/goleveldb v1.0.1-0.20210305035536-64b5b1c73954</span><br><span class="line">go: extracting github.com/karalabe/usb v0.0.0-20190919080040-51dc0efba356</span><br><span class="line">go: downloading github.com/pkg/errors v0.8.1</span><br><span class="line">go: extracting github.com/golang/snappy v0.0.3-0.20201103224600-674baa8c7fc3</span><br><span class="line">go: downloading github.com/mattn/go-isatty v0.0.5-0.20180830101745-3fb116b82035</span><br><span class="line">go: extracting github.com/status-im/keycard-go v0.0.0-20190316090335-8537d3370df4</span><br><span class="line">go: downloading github.com/shirou/gopsutil v2.20.5+incompatible</span><br><span class="line">go: extracting github.com/deckarep/golang-set v0.0.0-20180603214616-504e848d77ea</span><br><span class="line">go: extracting github.com/rjeczalik/notify v0.9.1</span><br><span class="line">go: downloading github.com/davecgh/go-spew v1.1.1</span><br><span class="line">go: extracting github.com/naoina/go-stringutil v0.1.0</span><br><span class="line">go: downloading github.com/huin/goupnp v1.0.1-0.20210310174557-0ca763054c88</span><br><span class="line">go: extracting google.golang.org/protobuf v1.23.0</span><br><span class="line">go: downloading github.com/fatih/color v1.7.0</span><br><span class="line">go: extracting github.com/syndtr/goleveldb v1.0.1-0.20210305035536-64b5b1c73954</span><br><span class="line">go: downloading github.com/graph-gophers/graphql-go v0.0.0-20201113091052-beb923fada29</span><br><span class="line">go: extracting github.com/dop251/goja v0.0.0-20200721192441-a695b0cdd498</span><br><span class="line">go: downloading github.com/jackpal/go-nat-pmp v1.0.2-0.20160603034137-1fa385a6f458</span><br><span class="line">go: extracting github.com/pkg/errors v0.8.1</span><br><span class="line">go: extracting github.com/davecgh/go-spew v1.1.1</span><br><span class="line">go: downloading github.com/jedisct1/go-minisign v0.0.0-20190909160543-45766022959e</span><br><span class="line">go: extracting github.com/mattn/go-isatty v0.0.5-0.20180830101745-3fb116b82035</span><br><span class="line">go: extracting github.com/huin/goupnp v1.0.1-0.20210310174557-0ca763054c88</span><br><span class="line">go: downloading github.com/google/uuid v1.1.5</span><br><span class="line">go: downloading github.com/go-sourcemap/sourcemap v2.1.2+incompatible</span><br><span class="line">go: extracting github.com/shirou/gopsutil v2.20.5+incompatible</span><br><span class="line">go: downloading github.com/go-stack/stack v1.8.0</span><br><span class="line">go: extracting github.com/fatih/color v1.7.0</span><br><span class="line">go: downloading golang.org/x/net v0.0.0-20200822124328-c89045814202</span><br><span class="line">go: extracting github.com/graph-gophers/graphql-go v0.0.0-20201113091052-beb923fada29</span><br><span class="line">go: extracting github.com/jackpal/go-nat-pmp v1.0.2-0.20160603034137-1fa385a6f458</span><br><span class="line">go: downloading gopkg.in/olebedev/go-duktape.v3 v3.0.0-20200619000410-60c24ae608a6</span><br><span class="line">go: extracting github.com/jedisct1/go-minisign v0.0.0-20190909160543-45766022959e</span><br><span class="line">go: downloading github.com/mattn/go-runewidth v0.0.4</span><br><span class="line">go: extracting github.com/go-sourcemap/sourcemap v2.1.2+incompatible</span><br><span class="line">go: downloading github.com/opentracing/opentracing-go v1.1.0</span><br><span class="line">go: extracting golang.org/x/text v0.3.3</span><br><span class="line">go: extracting github.com/google/uuid v1.1.5</span><br><span class="line">go: downloading github.com/gorilla/websocket v1.4.2</span><br><span class="line">go: downloading github.com/VictoriaMetrics/fastcache v1.5.7</span><br><span class="line">go: downloading github.com/dlclark/regexp2 v1.2.0</span><br><span class="line">go: downloading github.com/influxdata/influxdb v1.8.3</span><br><span class="line">go: extracting github.com/go-stack/stack v1.8.0</span><br><span class="line">go: extracting golang.org/x/net v0.0.0-20200822124328-c89045814202</span><br><span class="line">go: downloading golang.org/x/sync v0.0.0-20200317015054-43a5402ce75a</span><br><span class="line">go: extracting gopkg.in/olebedev/go-duktape.v3 v3.0.0-20200619000410-60c24ae608a6</span><br><span class="line">go: extracting github.com/VictoriaMetrics/fastcache v1.5.7</span><br><span class="line">go: downloading github.com/cespare/xxhash v1.1.0</span><br><span class="line">go: extracting github.com/opentracing/opentracing-go v1.1.0</span><br><span class="line">go: extracting github.com/gorilla/websocket v1.4.2</span><br><span class="line">go: extracting github.com/dlclark/regexp2 v1.2.0</span><br><span class="line">go: extracting github.com/mattn/go-runewidth v0.0.4</span><br><span class="line">go: extracting golang.org/x/sync v0.0.0-20200317015054-43a5402ce75a</span><br><span class="line">go: extracting github.com/cespare/xxhash v1.1.0</span><br><span class="line">go: downloading github.com/cespare/xxhash/v2 v2.1.1</span><br><span class="line">go: extracting github.com/cespare/xxhash/v2 v2.1.1</span><br><span class="line">go: extracting github.com/influxdata/influxdb v1.8.3</span><br><span class="line">go: finding gopkg.in/urfave/cli.v1 v1.20.0</span><br><span class="line">go: finding github.com/peterh/liner v1.1.1-0.20190123174540-a2c9a5303de7</span><br><span class="line">go: finding github.com/dop251/goja v0.0.0-20200721192441-a695b0cdd498</span><br><span class="line">go: finding github.com/VictoriaMetrics/fastcache v1.5.7</span><br><span class="line">go: finding github.com/davecgh/go-spew v1.1.1</span><br><span class="line">go: finding github.com/deckarep/golang-set v0.0.0-20180603214616-504e848d77ea</span><br><span class="line">go: finding github.com/jedisct1/go-minisign v0.0.0-20190909160543-45766022959e</span><br><span class="line">go: finding github.com/go-stack/stack v1.8.0</span><br><span class="line">go: finding github.com/edsrzf/mmap-go v1.0.0</span><br><span class="line">go: finding github.com/fjl/memsize v0.0.0-20190710130421-bcb5799ab5e5</span><br><span class="line">go: finding github.com/shirou/gopsutil v2.20.5+incompatible</span><br><span class="line">go: finding github.com/naoina/toml v0.1.2-0.20170918210437-9fafd6967416</span><br><span class="line">go: finding github.com/mattn/go-colorable v0.1.0</span><br><span class="line">go: finding github.com/mattn/go-isatty v0.0.5-0.20180830101745-3fb116b82035</span><br><span class="line">go: finding github.com/holiman/bloomfilter/v2 v2.0.3</span><br><span class="line">go: finding github.com/fatih/color v1.7.0</span><br><span class="line">go: finding github.com/golang/protobuf v1.4.3</span><br><span class="line">go: finding github.com/golang/snappy v0.0.3-0.20201103224600-674baa8c7fc3</span><br><span class="line">go: finding github.com/cespare/xxhash/v2 v2.1.1</span><br><span class="line">go: finding github.com/syndtr/goleveldb v1.0.1-0.20210305035536-64b5b1c73954</span><br><span class="line">go: finding github.com/olekukonko/tablewriter v0.0.2-0.20190409134802-7e037d187b0c</span><br><span class="line">go: finding github.com/hashicorp/golang-lru v0.5.5-0.20210104140557-80c98217689d</span><br><span class="line">go: finding github.com/naoina/go-stringutil v0.1.0</span><br><span class="line">go: finding github.com/dlclark/regexp2 v1.2.0</span><br><span class="line">go: finding github.com/prometheus/tsdb v0.7.1</span><br><span class="line">go: finding golang.org/x/sys v0.0.0-20210124154548-22da62e12c0c</span><br><span class="line">go: finding github.com/google/uuid v1.1.5</span><br><span class="line">go: finding github.com/karalabe/usb v0.0.0-20190919080040-51dc0efba356</span><br><span class="line">go: finding github.com/rjeczalik/notify v0.9.1</span><br><span class="line">go: finding github.com/mattn/go-runewidth v0.0.4</span><br><span class="line">go: finding github.com/go-sourcemap/sourcemap v2.1.2+incompatible</span><br><span class="line">go: finding github.com/pkg/errors v0.8.1</span><br><span class="line">go: finding golang.org/x/text v0.3.3</span><br><span class="line">go: finding github.com/holiman/uint256 v1.1.1</span><br><span class="line">go: finding github.com/gballet/go-libpcsclite v0.0.0-20190607065134-2772fd86a8ff</span><br><span class="line">go: finding github.com/gorilla/websocket v1.4.2</span><br><span class="line">go: finding github.com/status-im/keycard-go v0.0.0-20190316090335-8537d3370df4</span><br><span class="line">go: finding github.com/rs/cors v1.7.0</span><br><span class="line">go: finding github.com/tyler-smith/go-bip39 v1.0.1-0.20181017060643-dbb3b84ba2ef</span><br><span class="line">go: finding google.golang.org/protobuf v1.23.0</span><br><span class="line">go: finding github.com/huin/goupnp v1.0.1-0.20210310174557-0ca763054c88</span><br><span class="line">go: finding github.com/jackpal/go-nat-pmp v1.0.2-0.20160603034137-1fa385a6f458</span><br><span class="line">go: finding github.com/influxdata/influxdb v1.8.3</span><br><span class="line">go: finding github.com/graph-gophers/graphql-go v0.0.0-20201113091052-beb923fada29</span><br><span class="line">go: finding golang.org/x/time v0.0.0-20190308202827-9d24e82272b4</span><br><span class="line">go: finding gopkg.in/olebedev/go-duktape.v3 v3.0.0-20200619000410-60c24ae608a6</span><br><span class="line">go: finding golang.org/x/net v0.0.0-20200822124328-c89045814202</span><br><span class="line">go: finding golang.org/x/sync v0.0.0-20200317015054-43a5402ce75a</span><br><span class="line">go: finding github.com/opentracing/opentracing-go v1.1.0</span><br><span class="line">unicode</span><br><span class="line">unicode/utf8</span><br><span class="line">vendor/golang.org/x/crypto/cryptobyte/asn1</span><br><span class="line">crypto/internal/subtle</span><br><span class="line">math/bits</span><br><span class="line">golang.org/x/sys/internal/unsafeheader</span><br><span class="line">container/list</span><br><span class="line">internal/nettrace</span><br><span class="line">vendor/golang.org/x/crypto/internal/subtle</span><br><span class="line">encoding</span><br><span class="line">golang.org/x/net/html/atom</span><br><span class="line">crypto/subtle</span><br><span class="line">runtime/internal/sys</span><br><span class="line">golang.org/x/text/encoding/internal/identifier</span><br><span class="line">golang.org/x/text/internal/utf8internal</span><br><span class="line">runtime/cgo</span><br><span class="line">google.golang.org/protobuf/internal/flags</span><br><span class="line">unicode/utf16</span><br><span class="line">runtime/internal/atomic</span><br><span class="line">container/ring</span><br><span class="line">vendor/golang.org/x/crypto/curve25519</span><br><span class="line">internal/race</span><br><span class="line">internal/cpu</span><br><span class="line">google.golang.org/protobuf/internal/fieldnum</span><br><span class="line">sync/atomic</span><br><span class="line">google.golang.org/protobuf/internal/genname</span><br><span class="line">github.com/ethereum/go-ethereum/internal/web3ext</span><br><span class="line">runtime/internal/math</span><br><span class="line">internal/testlog</span><br><span class="line">google.golang.org/protobuf/internal/set</span><br><span class="line">internal/bytealg</span><br><span class="line">math</span><br><span class="line">runtime</span><br><span class="line">internal/reflectlite</span><br><span class="line">sync</span><br><span class="line">google.golang.org/protobuf/internal/pragma</span><br><span class="line">internal/singleflight</span><br><span class="line">math/rand</span><br><span class="line">errors</span><br><span class="line">sort</span><br><span class="line">internal/oserror</span><br><span class="line">io</span><br><span class="line">github.com/ethereum/go-ethereum/common/bitutil</span><br><span class="line">github.com/hashicorp/golang-lru/simplelru</span><br><span class="line">vendor/golang.org/x/net/dns/dnsmessage</span><br><span class="line">strconv</span><br><span class="line">syscall</span><br><span class="line">container/heap</span><br><span class="line">golang.org/x/text/internal/tag</span><br><span class="line">bytes</span><br><span class="line">hash</span><br><span class="line">github.com/ethereum/go-ethereum/ethdb</span><br><span class="line">crypto/internal/randutil</span><br><span class="line">strings</span><br><span class="line">text/tabwriter</span><br><span class="line">github.com/go-sourcemap/sourcemap/internal/base64vlq</span><br><span class="line">crypto/hmac</span><br><span class="line">hash/fnv</span><br><span class="line">hash/crc32</span><br><span class="line">golang.org/x/crypto/pbkdf2</span><br><span class="line">vendor/golang.org/x/crypto/hkdf</span><br><span class="line">golang.org/x/crypto/hkdf</span><br><span class="line">crypto/rc4</span><br><span class="line">github.com/dop251/goja/token</span><br><span class="line">crypto</span><br><span class="line">reflect</span><br><span class="line">golang.org/x/crypto/ripemd160</span><br><span class="line">github.com/syndtr/goleveldb/leveldb/comparer</span><br><span class="line">golang.org/x/text/transform</span><br><span class="line">vendor/golang.org/x/text/transform</span><br><span class="line">bufio</span><br><span class="line">path</span><br><span class="line">github.com/influxdata/influxdb/pkg/escape</span><br><span class="line">encoding/base32</span><br><span class="line">html</span><br><span class="line">regexp/syntax</span><br><span class="line">golang.org/x/text/runes</span><br><span class="line">golang.org/x/text/encoding</span><br><span class="line">golang.org/x/text/encoding/internal</span><br><span class="line">golang.org/x/text/encoding/unicode</span><br><span class="line">golang.org/x/text/encoding/charmap</span><br><span class="line">golang.org/x/text/encoding/japanese</span><br><span class="line">golang.org/x/text/encoding/traditionalchinese</span><br><span class="line">golang.org/x/text/encoding/korean</span><br><span class="line">golang.org/x/text/encoding/simplifiedchinese</span><br><span class="line">github.com/ethereum/go-ethereum/common/fdlimit</span><br><span class="line">internal/syscall/unix</span><br><span class="line">github.com/mattn/go-isatty</span><br><span class="line">time</span><br><span class="line">regexp</span><br><span class="line">context</span><br><span class="line">github.com/naoina/toml/ast</span><br><span class="line">github.com/ethereum/go-ethereum/common/mclock</span><br><span class="line">internal/poll</span><br><span class="line">github.com/ethereum/go-ethereum/common/prque</span><br><span class="line">golang.org/x/sync/errgroup</span><br><span class="line">os</span><br><span class="line">internal/fmtsort</span><br><span class="line">encoding/binary</span><br><span class="line">crypto/md5</span><br><span class="line">github.com/cespare/xxhash/v2</span><br><span class="line">encoding/base64</span><br><span class="line">crypto/sha1</span><br><span class="line">crypto/sha256</span><br><span class="line">golang.org/x/crypto/sha3</span><br><span class="line">crypto/cipher</span><br><span class="line">vendor/golang.org/x/crypto/poly1305</span><br><span class="line">crypto/sha512</span><br><span class="line">crypto/ed25519/internal/edwards25519</span><br><span class="line">github.com/golang/snappy</span><br><span class="line">vendor/golang.org/x/sys/cpu</span><br><span class="line">golang.org/x/sys/unix</span><br><span class="line">fmt</span><br><span class="line">runtime/debug</span><br><span class="line">path/filepath</span><br><span class="line">github.com/mattn/go-runewidth</span><br><span class="line">os/signal</span><br><span class="line">google.golang.org/protobuf/internal/detrand</span><br><span class="line">github.com/mattn/go-colorable</span><br><span class="line">net</span><br><span class="line">encoding/pem</span><br><span class="line">crypto/aes</span><br><span class="line">crypto/des</span><br><span class="line">vendor/golang.org/x/crypto/internal/chacha20</span><br><span class="line">golang.org/x/crypto/scrypt</span><br><span class="line">io/ioutil</span><br><span class="line">os/exec</span><br><span class="line">vendor/golang.org/x/crypto/chacha20poly1305</span><br><span class="line">golang.org/x/sys/cpu</span><br><span class="line">database/sql/driver</span><br><span class="line">encoding/json</span><br><span class="line">encoding/hex</span><br><span class="line">github.com/ethereum/go-ethereum/event</span><br><span class="line">github.com/go-stack/stack</span><br><span class="line">log</span><br><span class="line">net/url</span><br><span class="line">github.com/VictoriaMetrics/fastcache</span><br><span class="line">github.com/syndtr/goleveldb/leveldb/util</span><br><span class="line">math/big</span><br><span class="line">github.com/syndtr/goleveldb/leveldb/storage</span><br><span class="line">encoding/csv</span><br><span class="line">github.com/pkg/errors</span><br><span class="line">compress/flate</span><br><span class="line">github.com/hashicorp/golang-lru</span><br><span class="line">vendor/golang.org/x/net/http2/hpack</span><br><span class="line">encoding/gob</span><br><span class="line">mime</span><br><span class="line">mime/quotedprintable</span><br><span class="line">flag</span><br><span class="line">vendor/golang.org/x/text/unicode/norm</span><br><span class="line">net/http/internal</span><br><span class="line">github.com/peterh/liner</span><br><span class="line">vendor/golang.org/x/text/unicode/bidi</span><br><span class="line">github.com/olekukonko/tablewriter</span><br><span class="line">github.com/ethereum/go-ethereum/crypto/blake2b</span><br><span class="line">encoding/xml</span><br><span class="line">golang.org/x/net/html</span><br><span class="line">golang.org/x/text/internal/language</span><br><span class="line">github.com/syndtr/goleveldb/leveldb/cache</span><br><span class="line">github.com/syndtr/goleveldb/leveldb/filter</span><br><span class="line">github.com/status-im/keycard-go/derivationpath</span><br><span class="line">golang.org/x/text/unicode/norm</span><br><span class="line">google.golang.org/protobuf/internal/errors</span><br><span class="line">go/token</span><br><span class="line">google.golang.org/protobuf/internal/version</span><br><span class="line">github.com/karalabe/usb</span><br><span class="line">google.golang.org/protobuf/encoding/protowire</span><br><span class="line">github.com/davecgh/go-spew/spew</span><br><span class="line">github.com/syndtr/goleveldb/leveldb/errors</span><br><span class="line">github.com/shirou/gopsutil/internal/common</span><br><span class="line">google.golang.org/protobuf/reflect/protoreflect</span><br><span class="line">github.com/tyler-smith/go-bip39/wordlists</span><br><span class="line">github.com/syndtr/goleveldb/leveldb/iterator</span><br><span class="line">github.com/syndtr/goleveldb/leveldb/journal</span><br><span class="line">github.com/syndtr/goleveldb/leveldb/opt</span><br><span class="line">compress/gzip</span><br><span class="line">github.com/fjl/memsize</span><br><span class="line">vendor/golang.org/x/text/secure/bidirule</span><br><span class="line">text/template/parse</span><br><span class="line">runtime/trace</span><br><span class="line">os/user</span><br><span class="line">github.com/ethereum/go-ethereum/console/prompt</span><br><span class="line">golang.org/x/time/rate</span><br><span class="line">runtime/pprof</span><br><span class="line">github.com/ethereum/go-ethereum/eth/tracers/internal/tracers</span><br><span class="line">golang.org/x/text/internal/language/compact</span><br><span class="line">go/scanner</span><br><span class="line">github.com/graph-gophers/graphql-go/errors</span><br><span class="line">github.com/syndtr/goleveldb/leveldb/memdb</span><br><span class="line">github.com/syndtr/goleveldb/leveldb/table</span><br><span class="line">testing</span><br><span class="line">text/scanner</span><br><span class="line">github.com/graph-gophers/graphql-go/log</span><br><span class="line">github.com/opentracing/opentracing-go/log</span><br><span class="line">github.com/rjeczalik/notify</span><br><span class="line">github.com/prometheus/tsdb/fileutil</span><br><span class="line">github.com/edsrzf/mmap-go</span><br><span class="line">go/ast</span><br><span class="line">google.golang.org/protobuf/reflect/protoregistry</span><br><span class="line">golang.org/x/text/language</span><br><span class="line">google.golang.org/protobuf/internal/strs</span><br><span class="line">google.golang.org/protobuf/internal/mapsort</span><br><span class="line">google.golang.org/protobuf/internal/fieldsort</span><br><span class="line">github.com/huin/goupnp/scpd</span><br><span class="line">vendor/golang.org/x/net/idna</span><br><span class="line">google.golang.org/protobuf/runtime/protoiface</span><br><span class="line">google.golang.org/protobuf/internal/descfmt</span><br><span class="line">github.com/deckarep/golang-set</span><br><span class="line">github.com/shirou/gopsutil/cpu</span><br><span class="line">google.golang.org/protobuf/internal/encoding/text</span><br><span class="line">google.golang.org/protobuf/internal/descopts</span><br><span class="line">github.com/graph-gophers/graphql-go/internal/common</span><br><span class="line">github.com/influxdata/influxdb/models</span><br><span class="line">github.com/dlclark/regexp2/syntax</span><br><span class="line">github.com/syndtr/goleveldb/leveldb</span><br><span class="line">github.com/dop251/goja/file</span><br><span class="line">github.com/go-sourcemap/sourcemap</span><br><span class="line">github.com/fatih/color</span><br><span class="line">github.com/ethereum/go-ethereum/internal/jsre/deps</span><br><span class="line">google.golang.org/protobuf/internal/encoding/messageset</span><br><span class="line">github.com/naoina/go-stringutil</span><br><span class="line">github.com/shirou/gopsutil/mem</span><br><span class="line">text/template</span><br><span class="line">github.com/ethereum/go-ethereum/common/hexutil</span><br><span class="line">crypto/elliptic</span><br><span class="line">encoding/asn1</span><br><span class="line">crypto/rand</span><br><span class="line">github.com/ethereum/go-ethereum/common/math</span><br><span class="line">github.com/ethereum/go-ethereum/rlp</span><br><span class="line">crypto/dsa</span><br><span class="line">github.com/holiman/uint256</span><br><span class="line">google.golang.org/protobuf/proto</span><br><span class="line">github.com/graph-gophers/graphql-go/internal/schema</span><br><span class="line">github.com/graph-gophers/graphql-go/internal/query</span><br><span class="line">golang.org/x/text/encoding/htmlindex</span><br><span class="line">github.com/dop251/goja/ast</span><br><span class="line">golang.org/x/text/internal</span><br><span class="line">go/parser</span><br><span class="line">go/printer</span><br><span class="line">google.golang.org/protobuf/internal/encoding/defval</span><br><span class="line">golang.org/x/text/internal/colltab</span><br><span class="line">github.com/holiman/bloomfilter/v2</span><br><span class="line">crypto/ed25519</span><br><span class="line">crypto/rsa</span><br><span class="line">github.com/ethereum/go-ethereum/crypto/bn256/cloudflare</span><br><span class="line">github.com/tyler-smith/go-bip39</span><br><span class="line">golang.org/x/net/html/charset</span><br><span class="line">github.com/graph-gophers/graphql-go/internal/exec/packer</span><br><span class="line">github.com/graph-gophers/graphql-go/introspection</span><br><span class="line">github.com/graph-gophers/graphql-go/internal/validation</span><br><span class="line">github.com/dop251/goja/parser</span><br><span class="line">golang.org/x/text/cases</span><br><span class="line">golang.org/x/crypto/ed25519</span><br><span class="line">crypto/x509/pkix</span><br><span class="line">github.com/ethereum/go-ethereum/common</span><br><span class="line">vendor/golang.org/x/crypto/cryptobyte</span><br><span class="line">github.com/naoina/toml</span><br><span class="line">gopkg.in/urfave/cli.v1</span><br><span class="line">html/template</span><br><span class="line">crypto/ecdsa</span><br><span class="line">github.com/ethereum/go-ethereum/crypto/secp256k1</span><br><span class="line">github.com/jedisct1/go-minisign</span><br><span class="line">github.com/graph-gophers/graphql-go/internal/exec/resolvable</span><br><span class="line">github.com/dlclark/regexp2</span><br><span class="line">golang.org/x/text/collate</span><br><span class="line">go/format</span><br><span class="line">github.com/ethereum/go-ethereum/les/vflux</span><br><span class="line">google.golang.org/protobuf/encoding/prototext</span><br><span class="line">google.golang.org/protobuf/internal/filedesc</span><br><span class="line">github.com/graph-gophers/graphql-go/internal/exec/selected</span><br><span class="line">github.com/ethereum/go-ethereum/ethdb/memorydb</span><br><span class="line">github.com/ethereum/go-ethereum/crypto/bls12381</span><br><span class="line">github.com/ethereum/go-ethereum/crypto/bn256</span><br><span class="line">google.golang.org/protobuf/internal/encoding/tag</span><br><span class="line">google.golang.org/protobuf/internal/impl</span><br><span class="line">log/syslog</span><br><span class="line">vendor/golang.org/x/net/http/httpproxy</span><br><span class="line">github.com/ethereum/go-ethereum/p2p/enr</span><br><span class="line">github.com/jackpal/go-nat-pmp</span><br><span class="line">github.com/ethereum/go-ethereum/p2p/netutil</span><br><span class="line">net/textproto</span><br><span class="line">github.com/gballet/go-libpcsclite</span><br><span class="line">github.com/google/uuid</span><br><span class="line">crypto/x509</span><br><span class="line">gopkg.in/olebedev/go-duktape.v3</span><br><span class="line">github.com/ethereum/go-ethereum/log</span><br><span class="line">vendor/golang.org/x/net/http/httpguts</span><br><span class="line">mime/multipart</span><br><span class="line">github.com/ethereum/go-ethereum/signer/storage</span><br><span class="line">github.com/ethereum/go-ethereum/les/flowcontrol</span><br><span class="line">github.com/ethereum/go-ethereum/metrics</span><br><span class="line">crypto/tls</span><br><span class="line">github.com/ethereum/go-ethereum/ethdb/leveldb</span><br><span class="line">google.golang.org/protobuf/internal/filetype</span><br><span class="line">github.com/dop251/goja</span><br><span class="line">google.golang.org/protobuf/runtime/protoimpl</span><br><span class="line">github.com/golang/protobuf/proto</span><br><span class="line">google.golang.org/protobuf/types/descriptorpb</span><br><span class="line">net/http/httptrace</span><br><span class="line">net/http</span><br><span class="line">github.com/golang/protobuf/protoc-gen-go/descriptor</span><br><span class="line">github.com/ethereum/go-ethereum/accounts/usbwallet/trezor</span><br><span class="line">github.com/fjl/memsize/memsizeui</span><br><span class="line">github.com/ethereum/go-ethereum/metrics/prometheus</span><br><span class="line">github.com/rs/cors</span><br><span class="line">expvar</span><br><span class="line">github.com/influxdata/influxdb/client</span><br><span class="line">net/http/pprof</span><br><span class="line">github.com/huin/goupnp/soap</span><br><span class="line">github.com/huin/goupnp/httpu</span><br><span class="line">github.com/opentracing/opentracing-go</span><br><span class="line">github.com/gorilla/websocket</span><br><span class="line">github.com/opentracing/opentracing-go/ext</span><br><span class="line">github.com/ethereum/go-ethereum/metrics/exp</span><br><span class="line">github.com/graph-gophers/graphql-go/trace</span><br><span class="line">github.com/huin/goupnp/ssdp</span><br><span class="line">github.com/ethereum/go-ethereum/metrics/influxdb</span><br><span class="line">github.com/graph-gophers/graphql-go/internal/exec</span><br><span class="line">github.com/ethereum/go-ethereum/internal/debug</span><br><span class="line">github.com/huin/goupnp</span><br><span class="line">github.com/graph-gophers/graphql-go</span><br><span class="line">github.com/ethereum/go-ethereum/rpc</span><br><span class="line">github.com/huin/goupnp/dcps/internetgateway1</span><br><span class="line">github.com/huin/goupnp/dcps/internetgateway2</span><br><span class="line">github.com/ethereum/go-ethereum/internal/jsre</span><br><span class="line">github.com/ethereum/go-ethereum/p2p/nat</span><br><span class="line">github.com/ethereum/go-ethereum/crypto</span><br><span class="line">github.com/ethereum/go-ethereum/crypto/ecies</span><br><span class="line">github.com/ethereum/go-ethereum/p2p/enode</span><br><span class="line">github.com/ethereum/go-ethereum/params</span><br><span class="line">github.com/ethereum/go-ethereum/accounts/abi</span><br><span class="line">github.com/ethereum/go-ethereum/p2p/rlpx</span><br><span class="line">github.com/ethereum/go-ethereum/internal/flags</span><br><span class="line">github.com/ethereum/go-ethereum/core/types</span><br><span class="line">github.com/ethereum/go-ethereum/p2p/discover/v4wire</span><br><span class="line">github.com/ethereum/go-ethereum/les/utils</span><br><span class="line">github.com/ethereum/go-ethereum/p2p/dnsdisc</span><br><span class="line">github.com/ethereum/go-ethereum/p2p/nodestate</span><br><span class="line">github.com/ethereum/go-ethereum/p2p/discover/v5wire</span><br><span class="line">github.com/ethereum/go-ethereum/les/vflux/client</span><br><span class="line">github.com/ethereum/go-ethereum/les/vflux/server</span><br><span class="line">github.com/ethereum/go-ethereum</span><br><span class="line">github.com/ethereum/go-ethereum/eth/gasprice</span><br><span class="line">github.com/ethereum/go-ethereum/core/forkid</span><br><span class="line">github.com/ethereum/go-ethereum/core/bloombits</span><br><span class="line">github.com/ethereum/go-ethereum/core/rawdb</span><br><span class="line">github.com/ethereum/go-ethereum/core/vm</span><br><span class="line">github.com/ethereum/go-ethereum/p2p/discover</span><br><span class="line">github.com/ethereum/go-ethereum/accounts</span><br><span class="line">github.com/ethereum/go-ethereum/ethclient</span><br><span class="line">github.com/ethereum/go-ethereum/accounts/scwallet</span><br><span class="line">github.com/ethereum/go-ethereum/accounts/keystore</span><br><span class="line">github.com/ethereum/go-ethereum/accounts/usbwallet</span><br><span class="line">github.com/ethereum/go-ethereum/p2p</span><br><span class="line">github.com/ethereum/go-ethereum/console</span><br><span class="line">github.com/ethereum/go-ethereum/trie</span><br><span class="line">github.com/ethereum/go-ethereum/core/state/snapshot</span><br><span class="line">github.com/ethereum/go-ethereum/core/state</span><br><span class="line">github.com/ethereum/go-ethereum/consensus</span><br><span class="line">github.com/ethereum/go-ethereum/consensus/misc</span><br><span class="line">github.com/ethereum/go-ethereum/core/state/pruner</span><br><span class="line">github.com/ethereum/go-ethereum/consensus/clique</span><br><span class="line">github.com/ethereum/go-ethereum/consensus/ethash</span><br><span class="line">github.com/ethereum/go-ethereum/core</span><br><span class="line">github.com/ethereum/go-ethereum/eth/filters</span><br><span class="line">github.com/ethereum/go-ethereum/eth/protocols/eth</span><br><span class="line">github.com/ethereum/go-ethereum/eth/fetcher</span><br><span class="line">github.com/ethereum/go-ethereum/light</span><br><span class="line">github.com/ethereum/go-ethereum/eth/protocols/snap</span><br><span class="line">github.com/ethereum/go-ethereum/eth/downloader</span><br><span class="line">github.com/ethereum/go-ethereum/miner</span><br><span class="line">github.com/ethereum/go-ethereum/internal/ethapi</span><br><span class="line">github.com/ethereum/go-ethereum/signer/core</span><br><span class="line">github.com/ethereum/go-ethereum/accounts/external</span><br><span class="line">github.com/ethereum/go-ethereum/node</span><br><span class="line">github.com/ethereum/go-ethereum/accounts/abi/bind</span><br><span class="line">github.com/ethereum/go-ethereum/contracts/checkpointoracle/contract</span><br><span class="line">github.com/ethereum/go-ethereum/accounts/abi/bind/backends</span><br><span class="line">github.com/ethereum/go-ethereum/contracts/checkpointoracle</span><br><span class="line">github.com/ethereum/go-ethereum/eth/ethconfig</span><br><span class="line">github.com/ethereum/go-ethereum/graphql</span><br><span class="line">github.com/ethereum/go-ethereum/les/checkpointoracle</span><br><span class="line">github.com/ethereum/go-ethereum/eth</span><br><span class="line">github.com/ethereum/go-ethereum/les</span><br><span class="line">github.com/ethereum/go-ethereum/ethstats</span><br><span class="line">github.com/ethereum/go-ethereum/eth/tracers</span><br><span class="line">github.com/ethereum/go-ethereum/cmd/utils</span><br><span class="line">github.com/ethereum/go-ethereum/cmd/geth</span><br><span class="line">Done building.</span><br><span class="line">Run &quot;./build/bin/geth&quot; to launch geth.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过查看geth版本来确认geth是否已经安装正确：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./build/bin/geth version</span></span><br><span class="line">Geth</span><br><span class="line">Version: 1.10.2-unstable</span><br><span class="line">Git Commit: 54c0d573d75ab9baa239db3f071d6cb4d1ec6aad</span><br><span class="line">Git Commit Date: 20210325</span><br><span class="line">Architecture: amd64</span><br><span class="line">Go Version: go1.13.8</span><br><span class="line">Operating System: linux</span><br><span class="line">GOPATH=</span><br><span class="line">GOROOT=go</span><br></pre></td></tr></table></figure><h2 id="首次同步以太坊区块数据">首次同步以太坊区块数据</h2><p>查看go-ethereum的readme文档，默认是fast方式同步数据，直接运行<code>geth console</code>即可，因为数据比较大我单独挂载了一个磁盘，所以指定了数据存放的目录<code>--datadir /data/ethereum/node</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./build/bin/geth console --datadir /data/ethereum/node/</span></span><br><span class="line">INFO [03-27|16:25:39.409] Starting Geth on Ethereum mainnet... </span><br><span class="line">INFO [03-27|16:25:39.409] Bumping default cache on mainnet         provided=1024 updated=4096</span><br><span class="line">INFO [03-27|16:25:39.411] Maximum peer count                       ETH=50 LES=0 total=50</span><br><span class="line">INFO [03-27|16:25:39.411] Smartcard socket not found, disabling    err=&quot;stat /run/pcscd/pcscd.comm: no such file or directory&quot;</span><br><span class="line">INFO [03-27|16:25:39.412] Set global gas cap                       cap=25000000</span><br><span class="line">INFO [03-27|16:25:39.412] Allocated trie memory caches             clean=614.00MiB dirty=1024.00MiB</span><br><span class="line">INFO [03-27|16:25:39.412] Allocated cache and file handles         database=/data/ethereum/node/geth/chaindata cache=2.00GiB handles=524288</span><br><span class="line">INFO [03-27|16:25:39.504] Opened ancient database                  database=/data/ethereum/node/geth/chaindata/ancient readonly=false</span><br><span class="line">INFO [03-27|16:25:39.504] Writing default main-net genesis block </span><br><span class="line">INFO [03-27|16:25:39.645] Persisted trie from memory database      nodes=12356 size=1.78MiB time=48.710818ms gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=0.00B</span><br><span class="line">INFO [03-27|16:25:39.645] Initialised chain configuration          config=&quot;&#123;ChainID: 1 Homestead: 1150000 DAO: 1920000 DAOSupport: true EIP150: 2463000 EIP155: 2675000 EIP158: 2675000 Byzantium: 4370000 Constantinople: 7280000 Petersburg: 7280000 Istanbul: 9069000, Muir Glacier: 9200000, Berlin: 12244000, YOLO v3: &lt;nil&gt;, Engine: ethash&#125;&quot;</span><br><span class="line">INFO [03-27|16:25:39.645] Disk storage enabled for ethash caches   dir=/data/ethereum/node/geth/ethash count=3</span><br><span class="line">INFO [03-27|16:25:39.645] Disk storage enabled for ethash DAGs     dir=/home/guozhe/.ethash            count=2</span><br><span class="line">INFO [03-27|16:25:39.646] Initialising Ethereum protocol           network=1 dbversion=&lt;nil&gt;</span><br><span class="line">WARN [03-27|16:25:39.646] Upgrade blockchain database version      from=&lt;nil&gt; to=8</span><br><span class="line">INFO [03-27|16:25:39.646] Loaded most recent local header          number=0 hash=&quot;d4e567…cb8fa3&quot; td=17179869184 age=51y11mo3w</span><br><span class="line">INFO [03-27|16:25:39.646] Loaded most recent local full block      number=0 hash=&quot;d4e567…cb8fa3&quot; td=17179869184 age=51y11mo3w</span><br><span class="line">INFO [03-27|16:25:39.646] Loaded most recent local fast block      number=0 hash=&quot;d4e567…cb8fa3&quot; td=17179869184 age=51y11mo3w</span><br><span class="line">WARN [03-27|16:25:39.646] Failed to load snapshot, regenerating    err=&quot;missing or corrupted snapshot&quot;</span><br><span class="line">INFO [03-27|16:25:39.646] Rebuilding state snapshot </span><br><span class="line">INFO [03-27|16:25:39.646] Deleted state snapshot leftovers         kind=accounts wiped=0 elapsed=&quot;47.755µs&quot;</span><br><span class="line">INFO [03-27|16:25:39.647] Deleted state snapshot leftovers         kind=storage  wiped=0 elapsed=&quot;17.809µs&quot;</span><br><span class="line">INFO [03-27|16:25:39.647] Compacting snapshot account area  </span><br><span class="line">INFO [03-27|16:25:39.647] Regenerated local transaction journal    transactions=0 accounts=0</span><br><span class="line">INFO [03-27|16:25:39.650] Wiper running, state snapshotting paused accounts=0 slots=0 storage=0.00B elapsed=&quot;361.935µs&quot;</span><br><span class="line">INFO [03-27|16:25:39.676] Allocated fast sync bloom                size=2.00GiB</span><br><span class="line">WARN [03-27|16:25:39.677] Error reading unclean shutdown markers   error=&quot;leveldb: not found&quot;</span><br><span class="line">INFO [03-27|16:25:39.677] Starting peer-to-peer node               instance=Geth/v1.10.2-unstable-54c0d573-20210325/linux-amd64/go1.13.8</span><br><span class="line">INFO [03-27|16:25:39.741] Initialized state bloom                  items=12356 errorrate=0.000 elapsed=64.036ms</span><br><span class="line">INFO [03-27|16:25:39.817] New local node record                    seq=1 id=0d81eb9b177ba542 ip=127.0.0.1 udp=30303 tcp=30303</span><br><span class="line">INFO [03-27|16:25:39.817] Started P2P networking                   self=enode://dbb9a7d3a1ca59a200c1fa920b2cc467c342182b0f818c491028da1c564391f2cb91f0ce88bb7826264e609aa407dd8544224c0dd3d1a3f6bc449fd063dbdde7@127.0.0.1:30303</span><br><span class="line">INFO [03-27|16:25:39.818] IPC endpoint opened                      url=/data/ethereum/node/geth.ipc</span><br><span class="line">WARN [03-27|16:25:39.858] Served eth_coinbase                      reqid=3 t=&quot;12.338µs&quot; err=&quot;etherbase must be explicitly specified&quot;</span><br><span class="line">Welcome to the Geth JavaScript console!</span><br><span class="line"></span><br><span class="line">instance: Geth/v1.10.2-unstable-54c0d573-20210325/linux-amd64/go1.13.8</span><br><span class="line">at block: 0 (Thu Jan 01 1970 08:00:00 GMT+0800 (CST))</span><br><span class="line"> datadir: /data/ethereum/node</span><br><span class="line"> modules: admin:1.0 debug:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 personal:1.0 rpc:1.0 txpool:1.0 web3:1.0</span><br><span class="line"></span><br><span class="line">To exit, press ctrl-d</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> INFO [03-27|16:25:39.924] Compacting snapshot storage area</span>  </span><br><span class="line">INFO [03-27|16:25:39.924] Compacted snapshot area in database      elapsed=277.624ms</span><br><span class="line">INFO [03-27|16:25:39.924] Resuming state snapshot generation       root=&quot;d7f897…0f0544&quot; accounts=0 slots=0 storage=0.00B elapsed=&quot;9.119µs&quot;</span><br><span class="line">INFO [03-27|16:25:39.996] Generated state snapshot                 accounts=8893 slots=0 storage=409.64KiB elapsed=71.524ms</span><br><span class="line">INFO [03-27|16:25:46.015] New local node record                    seq=2 id=0d81eb9b177ba542 ip=115.171.250.78 udp=52360 tcp=30303</span><br><span class="line">INFO [03-27|16:25:50.847] Looking for peers                        peercount=0 tried=8 static=0</span><br><span class="line">INFO [03-27|16:25:56.124] Block synchronisation started </span><br><span class="line">INFO [03-27|16:26:01.068] Looking for peers                        peercount=0 tried=4 static=0</span><br><span class="line">WARN [03-27|16:26:05.414] Dropping unsynced node during sync       id=46e8efbdd811cf2e conn=dyndial addr=207.148.3.150:30303 type=Geth/v1.9.25-stable-...</span><br><span class="line">INFO [03-27|16:26:11.068] Looking for peers                        peercount=2 tried=15 static=0</span><br><span class="line">WARN [03-27|16:26:12.135] Dropping unsynced node during sync       id=53455744030e83cc conn=dyndial addr=108.61.176.254:30303 type=Geth/v1.9.25-stable-...</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查看-data-ethereum-node目录">查看<code>/data/ethereum/node</code>目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ll</span></span><br><span class="line">总用量 1</span><br><span class="line">drwxrwxrwx 1 root root 472 3月  27 16:28 geth/</span><br><span class="line">srwxrwxrwx 1 root root   1 3月  27 16:25 geth.ipc=</span><br><span class="line">drwxrwxrwx 1 root root   0 3月  27 16:25 keystore/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="调用geth的json-rpc接口">调用geth的json-rpc接口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -H &quot;Content-Type: application/json&quot; --data &#x27;&#123;&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;web3_clientVersion&quot;,&quot;params&quot;:[],&quot;id&quot;:1&#125;&#x27; http://localhost:8545</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;环境准备&quot;&gt;环境准备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;安装git:&lt;code&gt;sudo apt install git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装go:&lt;code&gt;sudo apt install golang-go&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h</summary>
      
    
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/ethereum/"/>
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/tags/ethereum/"/>
    
  </entry>
  
  <entry>
    <title>ubantu安装swarm-bee</title>
    <link href="https://guozhe001.github.io/2021/04/01/blockchain/eth/ubantu%E5%AE%89%E8%A3%85swarm-bee/"/>
    <id>https://guozhe001.github.io/2021/04/01/blockchain/eth/ubantu%E5%AE%89%E8%A3%85swarm-bee/</id>
    <published>2021-04-01T10:26:39.181Z</published>
    <updated>2021-04-02T07:17:13.927Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装swarm-clef">安装swarm-clef</h2><h3 id="安装">安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/ethersphere/bee-clef/releases/download/v0.4.9/bee-clef_0.4.9_amd64.deb</span><br><span class="line">sudo dpkg -i bee-clef_0.4.9_amd64.deb</span><br></pre></td></tr></table></figure><h3 id="查看状态">查看状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status bee-clef</span><br></pre></td></tr></table></figure><h3 id="查看日志">查看日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -f -u bee-clef.service</span><br></pre></td></tr></table></figure><h2 id="安装swarm-bee">安装swarm-bee</h2><h3 id="安装-v2">安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/ethersphere/bee/releases/download/v0.5.3/bee_0.5.3_amd64.deb</span><br><span class="line">sudo dpkg -i bee_0.5.3_amd64.deb</span><br></pre></td></tr></table></figure><h2 id="常用命令记录">常用命令记录</h2><h3 id="启动和停止">启动和停止</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启</span></span><br><span class="line">sudo systemctl restart bee</span><br></pre></td></tr></table></figure><h3 id="查看状态-v2">查看状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status bee</span><br></pre></td></tr></table></figure><h3 id="查看日志-v2">查看日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl --lines=100 --follow --unit bee</span><br></pre></td></tr></table></figure><h2 id="文件路径">文件路径</h2><h4 id="Bee-clef">Bee-clef<a href="https://docs.ethswarm.org/docs/installation/quick-start#bee-clef">#</a></h4><p>Configuration files are stored in <code>/etc/bee-clef/</code></p><p>Key material and other data is stored in <code>/var/lib/bee-clef/</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /var/lib/bee-clef/</span><br></pre></td></tr></table></figure><h4 id="Bee">Bee<a href="https://docs.ethswarm.org/docs/installation/quick-start#bee">#</a></h4><p>Configuration files are stored in <code>/etc/bee/</code></p><p>State, chunks and other data is stored in <code>/var/lib/bee/</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/bee/bee.yaml</span><br></pre></td></tr></table></figure><h2 id="导出钱包">导出钱包</h2><p>把bee-clef的钱包导出，然后就可以导入到自己的钱包（如metamask）。</p><p>运行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bee-clef-keys</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 运行命令后的输出结果</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> bee-clef-keys</span></span><br><span class="line">Key exported to /root/bee-clef-key-1617347363.json</span><br><span class="line">Pass exported to /root/bee-clef-password-1617347363.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装swarm-clef&quot;&gt;安装swarm-clef&lt;/h2&gt;
&lt;h3 id=&quot;安装&quot;&gt;安装&lt;/h3&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/ethereum/"/>
    
    
    <category term="blockchain" scheme="https://guozhe001.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="ethereum" scheme="https://guozhe001.github.io/tags/ethereum/"/>
    
    <category term="swarm" scheme="https://guozhe001.github.io/tags/swarm/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记-《你的第一本保险指南》</title>
    <link href="https://guozhe001.github.io/2021/04/01/others/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E3%80%8A%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E6%9C%AC%E4%BF%9D%E9%99%A9%E6%8C%87%E5%8D%97%E3%80%8B/"/>
    <id>https://guozhe001.github.io/2021/04/01/others/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E3%80%8A%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E6%9C%AC%E4%BF%9D%E9%99%A9%E6%8C%87%E5%8D%97%E3%80%8B/</id>
    <published>2021-04-01T10:18:21.507Z</published>
    <updated>2021-04-02T03:53:46.001Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、破除误会，我们真的了解保险吗">1、破除误会，我们真的了解保险吗</h1><h2 id="我们对保险的认识：理赔似乎特别难">我们对保险的认识：理赔似乎特别难</h2><ul><li>发生的事故不在保险范围，不能赔付</li><li>客户未如实告知自身情况，不能赔付</li><li>条款过于严苛，不能赔付</li></ul><h2 id="什么是核保师与健康告知">什么是核保师与健康告知</h2><h3 id="健康告知">健康告知</h3><h4 id="健康告知问询">健康告知问询</h4><ul><li>健康问询：是否有疾病或住院记录等</li><li>职业问询：是否从事高危行业</li><li>生活问询：是否吸烟、酗酒（酒精依赖），是否有极限运动等危险性高的业余爱好等</li></ul><h4 id="核保结论">核保结论</h4><ul><li>结论一：标准体。恭喜，你完美地符合健康告知中的所有要求，可以直接投保，无须做补充告知</li><li>结论二：次标准体。可能有少数几条不符合健康告知，但考虑到基本在可接受范围内，保险公司就“勉为其难”地允许你投保了<ul><li>接受除外责任：保险公司考虑到投保人当前的健康状况，将特定疾病排除在责任范围之外</li><li>增加保费</li></ul></li><li>结论三：延期。保险公司考虑到你的某个健康问题，暂不接受你的本次投保申请，建议过一段时间再来试试</li><li>结论四：拒保</li></ul><h4 id="到底怎么健康告知？">到底怎么健康告知？</h4><p>说实话，当保险公司把重疾险、医疗险这类保障型产品放到网上销售的时候，其实只是想卖给标准体客户。</p><p>至于次标准体和非标准体客户，对不起，这类产品不是为他们准备的。</p><h2 id="买保险一定要返本吗？">买保险一定要返本吗？</h2><h3 id="当你想要返还的时候，你到底想要什么">当你想要返还的时候，你到底想要什么</h3><ul><li>第一，拿回保费。如果没有发生保险事故，请把我交的保费还给我</li><li>第二，获得赔偿。既然我购买了保险，总归是希望能派上用场。</li></ul><h3 id="追求保费返还，切莫因小失大">追求保费返还，切莫因小失大</h3><ul><li>反本保险一般会比不反本（消费型）保险更贵</li><li>在追求保费返还时，想一下自己购买保险的初心：当初你说要买保险的时候，到底是用来做什么的？保费和保额，哪个才是你的初心？</li></ul><h3 id="非要拿到保费，不妨这样选择">非要拿到保费，不妨这样选择</h3><ul><li>提前给付型重疾险：身患重疾或不幸身故，哪个提前发生，都可给付赔偿，但是代价依然是支付更多保费</li><li>保障终身只是保险产品的一个功能设置，而不应被视为一个优点，因为你为此支付了更多的保费</li></ul><h2 id="保险公司会不会破产">保险公司会不会破产</h2><h3 id="保险公司会破产，却不会完蛋">保险公司会破产，却不会完蛋</h3><ul><li>保险公司破产时，人寿保险合同及责任准备金，必须转让给其他经营有人寿保险业务的保险公司</li><li>保险保障基金：来源是81家财险公司和88家寿险公司，保险公司每年需向其缴纳一定数额的资金，这也是被写进《保险法》的强制性要求。</li></ul><h3 id="政府在做的，是拼命预防保险公司破产">政府在做的，是拼命预防保险公司破产</h3><p>一家保险公司从计划成立之初，就不得不接受一系列监管。这些监管措施和规定就像一道道防火墙，确保公司在正确轨道上运转。</p><ul><li>第一道防火墙是极高的公司设立标准</li><li>第二道防火墙是全面科学的偿付能力监管<ul><li>所谓偿付能力，指的是当保险公司遭遇极端情况时，是否仍有能力履行赔付责任。每个年度和季度，保险公司的精算、财务等专业人士都会编制公司偿付能力报告，涉及一系列数学模型和压力测试</li><li>根据偿付能力情况，保险公司会得到从优到差的评级，包括A、B、C、D4个等级。评级可以在保险公司官网的“公开信息查询”栏目查到，我们将它视为判断保险公司是否“靠谱”的一个重要标志。长期来看，只要评级稳定在A和B的公司，我们都可以放心购买其产品</li></ul></li><li>第三道防火墙是频率高、强度大的现场检查<ul><li>监管部门会随时进驻保险公司总公司和分公司，通过调取档案、查询系统等方式实施现场检查</li></ul></li><li>当然，上述的防火墙虽好，如果因为贪污腐败而让保险公司蒙混过关，这是我们无法改变的事情，暂时只能接受</li></ul><h3 id="如何选择一家保险公司？">如何选择一家保险公司？</h3><ul><li>对比不同保险公司的投诉情况</li><li>监管部门每年都会对各家保险公司的投诉情况进行通报、评分，并发布在官网上（比如保监会官网）</li><li>销售人员口碑如何，信息技术实力如何（比如官网和手机软件的使用体验），客服电话能否快速接通，诸如此类</li><li>最重要的是保险产品的性价比</li></ul><h1 id="2、购前指南：买保险的正确方法">2、购前指南：买保险的正确方法</h1><ul><li><p>买保险和吃麦当劳是一样的，保险产品一般都是很多保险组成的。</p></li><li><p>一份保险计划通常由一款主险和若干款附加险构成，主险就像一位大哥，带着一帮作为附加险的小弟。</p><ul><li>这种充分利用和客户接触的机会推销尽可能多的产品，是一种普遍的保险销售模式</li></ul></li><li><p>但是有时候，单点比套餐更好，毕竟保险公司定的产品并非根据我们的需求定，附加险可能并非我们需要的。</p></li></ul><h2 id="责任的多少、保额的高低、期限的长短，这三大因素直接决定了保险产品的价格。">责任的多少、保额的高低、期限的长短，这三大因素直接决定了保险产品的价格。</h2><h3 id="保额：真到用时方恨少">保额：真到用时方恨少</h3><h3 id="期限：从一天到一辈子">期限：从一天到一辈子</h3><h4 id="短期产品">短期产品</h4><ul><li>保险期限不超过一年</li><li>以一年为一期计，产品的定价就要参考当下被保险人的年龄来计算了。30岁时购买，价格可能是100元；5年后，价格可能就会涨到400元。这种随年龄增加而上涨的定价策略，叫作自然费率。客户每年交的钱，只负责承担当年的风险。</li></ul><h4 id="长期产品">长期产品</h4><ul><li>10年、20年甚至终身</li><li>定价方法遵循两个原则：一是均衡费率原则，二是保证费率原则</li><li>均衡费率，指的是保险公司将被保险人未来很长一段时间的风险，归并到一起进行定价，而不只是一年的风险<ul><li>比如，保到70岁或保终身，投保人未来几十年的疾病发生率或者死亡率被累计后算出保费，再按照20年或30年交费的方式进行均摊，价格就确定了</li><li>在这样一种模式下，长期产品的停售只意味着不接受新客户的购买，但并不影响已经投保的客户</li></ul></li><li>保证费率：指的是在你投保的一瞬间，价格便已确定，后期不会增加。对于长期重疾险来说，即使投保人未来的发病率上升，保险公司也不会涨价</li></ul><h4 id="长期产品和短期产品费用比较">长期产品和短期产品费用比较</h4><ul><li>整体来看，购买短期险费用要比长期险费用高</li><li>人到中年，就有可能无法购买短期险</li><li>人到老年，则根本不能购买短期险</li><li>对于已经有长期险庇护的人来说，额外购买一份一年期产品，可以在一定时间内增加保额</li><li>短期险在年轻时比较便宜</li></ul><h3 id="保险产品的价格由谁决定">保险产品的价格由谁决定</h3><h4 id="我们有哪些需求需要保险解决？">我们有哪些需求需要保险解决？</h4><ol><li>得了重疾，有钱治病</li><li>得了重疾，弥补治疗期间的收入</li><li>不幸身故，给爸妈留一笔养老费</li><li>意外受伤，解决医保不包含的费用</li></ol><h4 id="保险这种产品不是一次性的，它是陪伴你度过漫长人生的一种风险规划">保险这种产品不是一次性的，它是陪伴你度过漫长人生的一种风险规划</h4><h2 id="如何与保险业务员打交道">如何与保险业务员打交道</h2><p>保险公司会不遗余力地增加产品的“人情味”，比如将保险塑造成爱与责任的象征，让你把对子女、父母的爱寄托于保险产品之上，让购买行为更加顺理成章</p><h3 id="保险销售人员到底指的是谁">保险销售人员到底指的是谁</h3><ul><li>第一，保险代理人。全国约800万，他们代表各自所在的保险公司，只销售某一家保险公司的产品。</li><li>第二，保险经纪人。和代理人最大的不同是，经纪人代表的不是某一家保险公司，而是保险中介公司，他们可以销售多家保险公司产品</li><li>第三，银行理财经理</li><li>第四，互联网第三方平台</li></ul><h3 id="和业务员打交道，要遵循两个原则">和业务员打交道，要遵循两个原则</h3><h4 id="想一下我们有时候会不会因为下面的情况而买保险">想一下我们有时候会不会因为下面的情况而买保险</h4><ul><li>第一，卖保险的人是亲戚，抹不开面子，买吧。</li><li>第二，邻居都给孩子买的这个，我也买一个吧</li><li>第三，他答应我把佣金返还给我，省了不少钱，买吧。</li><li>第四，小伙子口才好，人也帅，卖的保险不会差。</li><li>第五，就算被骗一年才损失1000多块钱，买吧</li></ul><p>好面子、从众心理、贪图小便宜、忽略产品的本质，这类问题经常发生，也间接催生了一批不靠谱的保险业务员</p><h4 id="第一个原则：互相尊重，学会提问。">第一个原则：互相尊重，学会提问。</h4><ul><li>条款能给我看一下吗？</li><li>为什么我需要这款产品？</li><li>为什么这类产品你们家的最好？</li><li>能比较一下不同产品吗？</li><li>为什么要保终身？</li><li>为什么这个附加险值得购买？</li><li>如果你发现这位保险业务员面对你提出的一个个问题，要么答不出来，要么逻辑混乱，要么不分青红皂白地敌视及贬损其他保险公司，最好立即更换业务员</li></ul><h4 id="第二个原则：充分信任，要有主见">第二个原则：充分信任，要有主见</h4><h3 id="卖保险简单吗">卖保险简单吗</h3><ul><li><p>产品贵不贵（同类产品的定价和费率对比）？</p></li><li><p>到底有哪些保障（保险责任的解读）？</p></li><li><p>退保能拿到多少保费（保单现金价值的解读）？</p></li><li><p>买完后哪些信息可以修改（对保单保全功能的讲解）？</p></li><li><p>这个产品能实现多高收益（如何计算分红险、万能险、年金等产品的投资收益）？</p></li><li><p>缴费期限怎么选择（现金流贴现原理）？</p></li><li><p>保险条款里有没有所谓的坑（除外责任做重点说明）？</p></li><li><p>遇到纠纷的时候如何处理？</p></li></ul><p>如果他真的做了产品对比，但如果他推销的产品价格没有竞争力，该怎么办？他真的算清楚了产品收益，但客户觉得收益率不如想象的那么高，该怎么办？他真的一条一条地解释清楚除外责任，客户却产生“保险公司推卸责任”的情绪化误解，该怎么办？他因为客户的健康问题而拒绝其投保，之前的工作不就白忙活了吗？<br>这些假设似乎暗示了保险销售人员“能力越强越卖不出去产品”的观点，但我想表达的绝不是“知识无用论”，它们只是在一定程度上反映了当前保险销售领域存在的弊病。而这些极端的例子恰恰凸显了“你”的重要性。</p><h3 id="你的公司给你买保险了吗">你的公司给你买保险了吗</h3><h4 id="企业团体保险">企业团体保险</h4><p>团险通常由4个保险产品组成：</p><ul><li>定期寿险</li><li>重大疾病险</li><li>意外险</li><li>医疗险</li></ul><p>团险计划可以涵盖以下责任：</p><ol><li>罹患重大疾病：保额50万元（重大疾病险的重疾责任50万元）。</li><li>疾病导致身故：保额50万元（定期寿险身故责任50万元）。</li><li>意外导致身故：保额150万元（定期寿险身故责任50万元+意外险身故责任100万元）。</li><li>门诊责任：保额2万元（医疗险包含的门急诊医疗责任2万元）。</li><li>住院责任：保额30万元（医疗险包含的住院医疗责任30万元）。</li></ol><p>团险价格之所以“亲民”，主要原因如下：</p><ul><li>第一，团险可以简单类比为团购，买的人数多，节省了一部分管理成本，自然就能获得一定的优惠</li><li>第二，团险的主要销售对象是企业人力资源部，只要负责人拍板，100个员工就直接购买了，不用一个一个地宣传、介绍，间接降低了产品的销售费用，最终的实惠落在了每一位参保员工身上</li><li>第三，以企业名义投保，参保人员的工作环境和性质相对一致，外部风险可控，何况不少企业还有入职体检，可以很好解决客户的逆选择和健康问题</li></ul><h4 id="团险带来的“保险幻觉”">团险带来的“保险幻觉”</h4><p>一般公司团险的保险产品的保障期限都是一年，如果完全依赖公司保险，我们一旦离职就会面临保险“裸奔”的情况<br>所以，建议大家用客观的态度看待公司为员工购买的团险。它是一种极好的员工福利，它应该是员工自身已购保险的有力补充，却不能被当作全部。</p><h4 id="了解公司的团险政策">了解公司的团险政策</h4><ul><li>这份团险计划里有涵盖身故责任的产品吗？</li><li>如果有，保额是多少？</li><li>如果员工获得晋升，保额会随之提高吗？</li></ul><h1 id="03-重点关注：中产必备的“四大保险金刚”">03 重点关注：中产必备的“四大保险金刚”</h1><h2 id="重大疾病险：为了不被改变的人生">重大疾病险：为了不被改变的人生</h2><p>重疾险的诞生，本质上是为了解决收入中断的风险，站在患者及其家人的角度，为已在重病深渊的家庭提供雪中送炭般的经济补偿</p><h3 id="重疾险究竟保什么">重疾险究竟保什么</h3><h4 id="什么叫“重大疾病”？">什么叫“重大疾病”？</h4><p>保监会安排中国保险行业协会和中国医师协会，在2007年拿出了一版25种重疾标准，囊括所有高发重疾类型（其实，只要是重疾险就都包括这25种）</p><p>保监会设定的这25种重大疾病，其发生概率超过95%的疾病种类。</p><p>所以如果一个保险说他包含更多的重疾，然后让我们多花钱买它，其实没有太必要。</p><h4 id="什么叫“罹患”？">什么叫“罹患”？</h4><ul><li>第一，病情达到某个标准，相当于确诊即赔，比如恶性肿瘤</li><li>第二，投保人为治疗某种疾病而接受了某种治疗方法。比如心脏瓣膜手术</li><li>第三，某种状态持续了一段时间。比如脑中风后遗症</li></ul><h3 id="除了重大疾病，重疾险还保这些">除了重大疾病，重疾险还保这些</h3><p>当重疾险的责任只有重大疾病时，消费者理所当然地提出了一个振聋发聩的问题：如果我一辈子没得重疾，这保费岂不是白交了？</p><p>好，为了不让你白交，保险公司索性增加了很多其他责任，<strong>“顺便”提升了保费</strong>。买卖双方都高兴，这种商业模式堪称完美。</p><ul><li>在新增的责任里，第一类是“身故责任”。这种包含身故责任的重疾险，基本上都可以“提前给付”。<ul><li>这里的提前指的是重疾、身故二者中哪个先发生，就给付哪个。</li><li>提前给付不过是一种产品设计罢了，千万别觉得它是一项独特的优势。</li></ul></li><li>第二类新增责任是轻症和中症责任</li><li>第三类新增责任是针对重大疾病的花样赔付方式。比如重疾和轻症可以赔付多次，又比如挑出某几个病种额外赔付50%的保额，再比如投保后前10年享受保额额外增加50%。</li></ul><p>上面说的这些都是在<strong>增加保费的基础上</strong>增加了更多的责任，所以当保险公司说我们保的多的时候除非和别人价格一样，否则只是在骗我们花更多钱而已。</p><h3 id="重疾险的保额及其他">重疾险的保额及其他</h3><h4 id="如何确定保额">如何确定保额</h4><ul><li>患重疾后，患者普遍面临的是3~5年的治疗康复期</li><li>与此同时，重疾导致收入中断将为家庭带来更大的压力</li><li>因此，重疾险的<strong>保额应至少覆盖投保人3~5年的收入</strong></li><li>如年收入20万元的保额应该在60万以上</li><li>而且只要确保这款重疾险能提供60万元的重疾保额，有没有身故责任、多次赔付、投保人豁免，都无关紧要</li></ul><h4 id="重疾险应该保障多久和交多少年保费。">重疾险应该保障多久和交多少年保费。</h4><p>讨论这个问题有一个前提：我们选择的是长期产品。</p><p>对于重疾险、定期寿险，可以保终身或者保到70岁左右的长期产品，是我们的首选——不仅价格更划算，也不会出现保险中断的情况。</p><p>长期重疾险的<strong>缴费期</strong>往往有多种选择：</p><ul><li>趸交（一次性交完）</li><li>10年交</li><li>20年交</li><li>少数产品甚至还设计了30年交</li></ul><p><strong>保障期限</strong>：</p><p>保障期限的延长，会带来保费的升高；没办法，一个人年龄越大，罹患重疾的概率就越高。如果预算充足，保终身当然是最好的选择。</p><p>在确保保额充足的情况下，我们可以把保额拆成两个产品来实现，一个保到退休，另一个保终身</p><p>如：对于需要60万元重疾险保额的小王来说，可以选择买<strong>一份保终身的30万元保额</strong>的重疾险，再买<strong>一份保到70岁的30万元保额</strong>的重疾险。这比直接购买一份保终身的60万元保额的重疾险，花费更少</p><h2 id="定期寿险：解决人生中最大的风险">定期寿险：解决人生中最大的风险</h2><h3 id="谁适合买寿险">谁适合买寿险</h3><p>如果说重疾险的赌注是病，寿险的赌注就是命。定期寿险赌的则是一段时间的命。比如投保人于30年内身故，受益人即可获得理赔款。</p><p>一般的定期寿险，除了保障身故，还会把全残也视作与身故等同的责任。</p><ul><li>单身的人理应关心父母的养老问题</li><li>新婚的人会增加对另一半的考虑</li><li>有了孩子后，责任更重</li></ul><h4 id="意外险和寿险对比">意外险和寿险对比</h4><p>这里需要额外强调一点。谈到身故风险，很多人会联想到意外险，因为它不是也有身故保障吗？</p><p>“疾病”和“意外”为占比最大的两类死亡原因，分别为79.3%和18.9%。</p><p>所以，单纯购买意外险，是无法解决身故的风险的。</p><h3 id="如何选购定期寿险？">如何选购定期寿险？</h3><h4 id="确定保额是关键性的第一步">确定保额是关键性的第一步</h4><p>保额的高低，决定了投保人身故后他的妻子、父母或者孩子能拿到多少补偿。定期寿险的保额，主要取决于三个因素。</p><ul><li>一是个人和家庭的债务额度，比如房贷、车贷等，确保一方身故后，债务不转嫁到另一方或父母身上</li><li>二是家庭成员的基本生活成本。如果家庭每年的开销为20万元，那么身故理赔金至少应为100万元，以负担家庭未来5—10年的基本生活开销。</li><li>三是父母的养老支出，这笔费用的计算逻辑和上一个类似。</li></ul><h4 id="定期寿险还要考虑的问题是保障期限">定期寿险还要考虑的问题是保障期限</h4><p>到底要保到多大年龄呢？我个人建议，以退休年龄为标准，60岁或70岁皆可。</p><p>至于缴费年限的选择，我建议尽可能拉长，20年交或30年交皆可。缴费年限越长，年均保费越低，从而做到用尽可能少的钱去撬动尽可能高的保额。</p><h4 id="保额、保障期限和缴费年限都确定后，我们在选购具体产品时，还要格外关注三个方面：">保额、保障期限和缴费年限都确定后，我们在选购具体产品时，还要格外关注三个方面：</h4><ul><li>第一，核保是否宽松。这是最重要的，因为如果健康告知非常严格，想买也买不了，何谈其他？比如，有的定期寿险不接受乙肝小三阳患者，有的不接受高危职业从业者。所以我们一定要弄清楚投保要求再买，尽量避免理赔时的潜在纠纷，才能真正做到安心。</li><li>第二，除外责任多不多。前文在分析如何阅读保险条款的时候，专门强调要关注除外责任。比如，有的定期寿险明确指出，因为战争、军事暴乱导致的死亡，它们概不负责。那么，对于去中东、非洲等地区旅游或工作的中国人来说，这种定期寿险就得慎重考虑购买了。</li><li>第三，价格低不低。如果上面几条标准比较起来都差不多，问题就变简单了：哪个产品便宜就选择哪个。</li></ul><h2 id="商业医疗险：让高额医疗开支不再可怕">商业医疗险：让高额医疗开支不再可怕</h2><h3 id="社会医疗保险">社会医疗保险</h3><p>在用医保卡看病的过程中，我们都接触过一些陌生的名词，比如起付线、药品目录、自费药、报销额度等。</p><ul><li>起付线：的意思是，每年只有花到一定金额，才能开始报销，否则就都是自费</li><li>药品目录：指的是在医保系统中，对于医疗机构开具的药品做了不同分类，不同类型的药品报销额度也不一样，有的可全部报销，有的则只可报销一部分，还有的药全部要自费购买</li><li>销额度很好理解，即使药品、治疗等都在报销范围内，医保也不是无限制的报销，整体来看，每年的报销额度范围为20万~30万元；对于罹患重大疾病的患者来说，这一额度根本无法满足他们长期、昂贵的治疗需求。</li></ul><h3 id="医保不管的，让商业医疗保险来管">医保不管的，让商业医疗保险来管</h3><p>医疗险其实只包括两种产品</p><h4 id="第一种是包含门诊责任的商业医疗保险，可暂且称之为门诊医疗保险">第一种是包含门诊责任的商业医疗保险，可暂且称之为门诊医疗保险</h4><p>这种产品保额不高，一般是几千元。有的门诊医疗保险会设置一个免赔额，比如单次100元或者累计500元。免赔额和政府医保起付线是同一个概念，都是为了减少理赔支出，实际上也起到了降低保费的作用。</p><h4 id="第二种是包含住院责任的商业医疗保险，我们称之为住院医疗保险。">第二种是包含住院责任的商业医疗保险，我们称之为住院医疗保险。</h4><p>这类产品的保额就高多了，几十万元甚至上百万元都很常见。和门诊医疗保险相比，住院医疗保险是下文要重点介绍的产品。</p><p>能被称作风险的，必然意味着财务上的巨大影响。所以和几十万甚至上百万元的医疗支出相比，几千元的门诊、住院费用，真的称不上风险。</p><h3 id="买了重疾险，还要买医疗险吗">买了重疾险，还要买医疗险吗</h3><h4 id="重疾险和商业医疗最重要的区别，是保险公司的理赔方式不一样">重疾险和商业医疗最重要的区别，是保险公司的理赔方式不一样</h4><ul><li><p>重疾险有点儿像一锤子买卖，只要符合条款规定，保险公司就会把理赔款一次性打给你，无论是几万元还是几十万元。</p></li><li><p>商业医保就不一样了，花多少才能赔多少，保额仅代表可报销额度的上限，而你不一定能花掉这么多钱</p></li></ul><p>如果一个人罹患影响正常生活的重大疾病，那他主要面临的问题有两个：一是治疗费用太高，掏空家底；二是无法继续工作，失去收入。前者可以靠商业医疗保险解决，后者则只能靠重疾险解决，两类保险的功能不一样。</p><h4 id="重疾险和商业医疗保险在定价方面的区别">重疾险和商业医疗保险在定价方面的区别</h4><p>长期重疾险每年的保费是恒定的，商业医疗保险的保费则会随着被保险人年龄的增加而上调</p><h4 id="重疾险和商业医疗保险在续保方面的区别">重疾险和商业医疗保险在续保方面的区别</h4><p>目前市场上大多数医疗险都是一年期产品，如果第二年你想继续投保，得先看看保险条款是怎么规定的，通常有以下两种情况：</p><ul><li>第一种是，卖不卖给你，我说了算。投保人的续保申请须经保险人审核同意，投保人申请续保时，保险人有权对费率进行调整。</li><li>第二种规定是，只要这个产品还在销售，保险公司就肯定会卖给你。连续投保时，保险人不会因为某一被保险人的健康状况变化或历史理赔情况而单独调整该被保险人的连续投保费率。</li></ul><h2 id="意外险：不容忽视的“小”保险">意外险：不容忽视的“小”保险</h2><h3 id="意外险保什么、不保什么">意外险保什么、不保什么</h3><p>遭受外来的、突发的、非本意的、非疾病的使身体受到伤害的客观事件。自然死亡、疾病身故、猝死、自杀及自伤均不属于意外伤害。</p><p>在每份意外险的保险条款里，你都能看到这样的描述。这段话表达了两层意思：</p><ul><li><p>第一，外来的、突发的、非本意的、非疾病的使身体受到伤害的客观事件，属于意外；</p></li><li><p>第二，自然死亡、疾病身故、猝死、自杀及自伤，不属于意外。</p></li></ul><p>除了猝死，意外险还有一些“不保”：</p><ul><li>意外险通常不保高危职业从业者</li><li>除了特定人群“不保”，还有某类地区“不保”。关于意外医疗责任，保险条款中往往会有一个补充描述：只承担中华人民共和国国境内（不包括港澳台地区）医院产生的医疗费用和支出。</li><li>最后一个“不保”，是某些行为不保。被保险人从事潜水、跳伞、攀岩运动、探险活动、武术比赛、摔跤比赛、特技表演、赛马、赛车等高风险活动期间发生的意外，不在意外险的责任范围内</li></ul><h3 id="配置意外险的几条原则">配置意外险的几条原则</h3><h4 id="原则一：必须涵盖意外医疗责任。">原则一：必须涵盖意外医疗责任。</h4><p>意外导致的结果无非两种：伤残和死亡。因此，意外险保障的责任有三个必选项：身故、伤残、医疗。</p><p>意外受伤后，我们最大的需求就是医疗费用补偿。考虑到很多意外产生的医疗费用医保都无法报销，意外险的医疗责任就更重要了。</p><p>至于意外医疗的保额，一两万就足够了。如果是一两万元都治不好的意外受伤，一定已经严重到需要做手术或者长期住院治疗了，这时理赔的责任就可以交给上文提到的住院医疗保险了。</p><p>另外，你可能听说过住院津贴或住院保险金，它的作用是，投保人每住一天院，保险公司就会支付给他几百元钱，主要是为了弥补住院期间的收入损失，颇为贴心，本质上也属于意外医疗的责任范围。住院津贴属于锦上添花型保险，而且要花钱购买，所以有没有都无所谓。</p><h4 id="原则二：一般意外身故的保额应足够高。">原则二：一般意外身故的保额应足够高。</h4><p>在这里我要提醒大家注意某些保险公司的“套路”。当你看到一个类似于“百万身价意外险”的打折产品时，请一定弄清楚它所说的百万身价到底是什么意思。举个例子，有个产品页面是这么描述该产品的：</p><ul><li><p>一般意外身故：10万元</p></li><li><p>航空意外身故：100万元</p></li></ul><p>我更喜欢以下这类保险：</p><ul><li><p>一般意外身故：100万元</p></li><li><p>航空意外身故：200万元</p></li></ul><h4 id="原则三：不同人群的意外险，侧重点不一样。">原则三：不同人群的意外险，侧重点不一样。</h4><ul><li><p>对于职场白领来说，意外险既要有足够的身故补偿（用于弥补家庭经济损失），也要保证受伤后有钱治疗；</p></li><li><p>但对于孩子和老人来说，身故补偿就没有医疗费用补偿重要，毕竟他们不是家里的顶梁柱。</p></li><li><p>因此，孩子和老人的意外险，应侧重于考虑提升意外医疗的保额，而没有必要追求意外身故的高保额。</p></li></ul><h4 id="原则四：保障时间一年就够了。">原则四：保障时间一年就够了。</h4><p>之前在介绍一年期产品特征的时候我提过，意外险和医疗险大多会设计成短期险，这样一来，就可以随时按照意外发生率和医疗成本的波动进行价格调整。因此，每年各家公司的意外险层出不穷，可能去年买的产品，到了明年就没什么竞争力了，这时直接换一家公司购买就好。由于意外险的几个基本责任都没有等待期这一说，所以可以做到无缝衔接。</p><h1 id="04-优化配置：给保险升个级">04　优化配置：给保险升个级</h1><h2 id="像有钱人一样看病">像有钱人一样看病</h2><h3 id="高端医疗，高端在哪里？">高端医疗，高端在哪里？</h3><ul><li>第一，保额更高。几十万元甚至几百万元的保额都是小菜一碟，从几千万元到不设限，高端医疗的保额完全超乎你的想象。</li><li>第二，医院更多、更高端。从三甲医院的特需部、国际部，到私立医院、国际医院，而且不限中国地区，从亚太地区到全球，基本覆盖所有类型的医疗机构。</li><li>第三，保障更全面。除了传统的门诊、住院两大块之外，高端医疗险还包含分娩、牙科、眼科、体检等责任，要知道，这些治疗通常都在常规医疗险的除外项目里，一般医疗险都不管。</li><li>第四，增值服务更多。</li><li>第五，理赔体验更好。</li></ul><h2 id="保险能为我的养老做什么？">保险能为我的养老做什么？</h2><h3 id="该不该买养老保险？">该不该买养老保险？</h3><h3 id="可不可以把保险当作投资方式">可不可以把保险当作投资方式</h3><p>要回答上面两个问题，需要使用excel中的IRR公式计算内部收益率，如果内部收益率能够达到预期并且现在手头有钱就可以买。</p><p>比如年复利6%以上就能达到预期，否则不如买债券基金或者指数型基金。</p><h2 id="该去香港买保险吗？">该去香港买保险吗？</h2><p>略</p><h1 id="05-个性化定制：保险方案，你自己说了算">05 个性化定制：保险方案，你自己说了算</h1><h2 id="如何给孩子买保险">如何给孩子买保险</h2><h3 id="先别着急买商业保险">先别着急买商业保险</h3><p>和大人一样，孩子也是可以参加政府医保的。在配置商业保险之前，父母一定要参考当地的医保政策为孩子办理少儿医保。</p><p>少儿医保本质上是针对儿童罹患重大疾病提供的风险保障。</p><p>有没有医保也会影响孩子投保商业保险的价格。尤其是医疗险，被保险人有医保的医疗险价格更低。</p><h3 id="孩子会面临哪些风险">孩子会面临哪些风险</h3><ul><li>风险一：身患危重疾病<ul><li>孩子一旦患危重疾病，除了需要长期投入高额治疗费用，父母也可能为了照顾孩子而辞掉工作。</li><li>因此，重疾险和高保额住院医疗险是应该首先为孩子配置的保险。</li><li>重疾险的价值在于，罹患重疾后一次性获得定额赔偿，可作为自费治疗费用和家庭收入中断的补偿。</li><li>高额住院医疗险的价值在于应对高额的医疗费用，尤其是许多医保范围外的自费项目</li></ul></li><li>风险二：发生意外受伤</li><li>风险三：身患一般疾病</li></ul><h3 id="配置儿童商业保险">配置儿童商业保险</h3><h4 id="孩子不该买哪些保险">孩子不该买哪些保险</h4><ul><li>包含身故责任的意外险不在我们的讨论范围内</li><li>定期寿险、终身寿险也无需购买</li><li>除意义不大的身故责任外，为孩子购买教育金、养老金，优先级也不高</li></ul><p><strong>孩子真正需要的商业保险其实只有三款：重大疾病险、意外险、高额住院医疗险。</strong></p><h4 id="关于孩子的重疾险">关于孩子的重疾险</h4><p>请记住一个事实：少儿罹患重大疾病的概率非常低。这直接决定了儿童重疾险的价格十分便宜。因此，为孩子配置重疾险，一定要抓住价格优势，尽可能提高保额，拉长期限。都是100万元的终身重疾险保额，30多岁男性的购买价格，可以达到小孩子的两倍多。</p><p>孩子的重疾险应该买保终身或者70岁的，不要买保障30年，三十年之后孩子才三、四十岁，那时断保再新买保险会更贵。</p><h4 id="孩子最好的保险是父母">孩子最好的保险是父母</h4><p>父母自身的健康以及稳定、持续的赚钱能力，是孩子最重要的保险。</p><p><strong>总结一下为孩子配置保险的几个关键点。</strong></p><ol><li><p><strong>作为父母，先把自己的保险配置好，因为你才是孩子最大的“保险”；</strong></p></li><li><p><strong>在购买任何商业保险之前，先为孩子办理好当地的少儿医保，这是政府给予的福利，一定要充分利用；</strong></p></li><li><p><strong>结合自身预算，首先配置高保额的重大疾病险和住院医疗险，其他的保险则量力购买。</strong></p></li></ol><h2 id="如何给父母买保险">如何给父母买保险</h2><h3 id="一个不断妥协退让的过程">一个不断妥协退让的过程</h3><p>其实父母面临的风险非常简单，就是疾病引发的财务风险。</p><p>这样看来，给父母配置保险，主要考虑的应该是重疾险、医疗险和意外险。</p><p>年龄超过60岁的人想要投保重疾险和医疗险会有很多限制：</p><ul><li>第一，年龄限制。<ul><li>几乎所有重疾险和医疗险的投保年龄都在0~60岁。对重疾险而言，55岁的投保年龄上限是普遍规则。</li></ul></li><li>第二，保额限制。<ul><li>同样一份保险，30岁的人和50岁的人可享受的保额上限是不一样的。</li><li>以重疾险为例，如果在网上直接投保，30岁的被保险人的保额上限基本为50万~60万元，而50岁的被保险人的保额上限只有10万元。</li></ul></li><li>第三，保费倒挂。<ul><li>一位55岁的男性购买保额为10万元的重疾险，每年需要交3500元左右，交20年，总计7万元的支出和10万元的保额相比，差别不大。</li></ul></li><li>第四，健康告知不符。<ul><li>患有高血压、心脏病、糖尿病的老年人，可以直接和重大疾病险、住院医疗险说再见了</li><li>保险公司也意识到了这个问题，于是想了一个办法：双方各退一步。保险公司把保障范围缩小，限制也随之减少。但这个保障范围不能太小，得有存在的意义。</li><li>于是，防癌类保险应运而生。重疾险涵盖的几十种疾病，只保留第一项，即恶性肿瘤；住院医疗险涵盖的所有疾病的住院责任，也只保留一项，即癌症住院责任。</li><li>这种做法最大的好处，就是健康告知的内容大幅减少。只要不是易引发癌症的症状（肝部疾病、器官或组织的结节等），保险公司都不介意，高血压、糖尿病患者也可以投保。毕竟，高血压导致的急性心梗和糖尿病导致的终末期肾病或截肢，都不在防癌类保险的责任范围内。</li></ul></li></ul><h3 id="六分靠规划，四分靠心态">六分靠规划，四分靠心态</h3><p>哪怕有那么多的限制，我们还是可以购买意外险、防癌险、防癌医疗险和糖尿病特定疾病重疾险。</p><h4 id="如果你想简明扼要地掌握给父母买保险的技巧，请记住以下几点。">如果你想简明扼要地掌握给父母买保险的技巧，请记住以下几点。</h4><ul><li><p>第一，确保父母双方都有社会医疗保险。不管是城市的居民医保，还是农村的“新农合”，没有的话，赶紧先把社会医保办好。</p></li><li><p>第二，遇到疑难杂症，不少人会选择带父母来北上广等大城市就诊。所以，请提前研究好医保的异地结算流程，确保不让医保“白交”，这一点非常有必要。</p></li><li><p>第三，详细了解爸妈的身体健康情况，对症下药买保险。</p></li></ul><h2 id="如何给自己买保险">如何给自己买保险</h2><h3 id="18岁保险清单">18岁保险清单</h3><ul><li>学生团体保险：包含意外身故/伤残责任，意外医疗责任，住院医疗责任；预算为200元。</li><li>或自己投保：<ul><li>意外险：包含意外身故/伤残责任，意外医疗责任；预算为200元（保额为50万元）。</li><li>医疗险：包含疾病导致的住院医疗责任，预算为200元。</li></ul></li></ul><h4 id="18岁保障速览">18岁保障速览</h4><ul><li><p>身故补偿（仅限意外原因）：50万元。</p></li><li><p>意外医疗补偿：1万元（上限）。</p></li><li><p>住院医疗补偿：100万元（上限）。</p></li></ul><h3 id="22岁新增保险情况">22岁新增保险情况</h3><p>定期寿险A：受益人为父母，保额大约相当于父母5年的退休金；预算为每年500元（保额50万元，保障期30年，缴费期30年）。</p><h4 id="保障速览">保障速览</h4><ul><li><p>身故补偿（不限死亡原因）：50万元。</p></li><li><p>额外身故补偿（仅限意外原因）：50万元。</p></li><li><p>意外医疗补偿：1万元（上限）。</p></li><li><p>住院医疗补偿：100万元（上限）。</p></li></ul><h3 id="28岁新增保险情况"><strong>28岁</strong>新增保险情况</h3><ul><li><p>定期寿险B：受益人为法定受益人，保额约等于5倍年薪；</p></li><li><p>预算为每年1000元（保额80万元，保到60岁，缴费期30年）。</p></li><li><p>重大疾病险A：保额约等于购买时的3倍年薪；预算为每年5000元（保额50万元，保到70岁，缴费期30年）。</p></li></ul><h4 id="28岁保障速览">28岁保障速览</h4><ul><li><p>身故补偿（不限死亡原因）：130万元。</p></li><li><p>额外身故补偿（仅限意外原因）：50万元。</p></li><li><p>意外医疗补偿：1万元（上限）。</p></li><li><p>住院医疗补偿：100万元（上限）。</p></li><li><p>重大疾病补偿：50万元。</p></li></ul><h3 id="32岁新增保险情况"><strong>32岁</strong>新增保险情况</h3><ul><li><p>意外险：包含意外身故/伤残责任；预算为每年400元（保额100万元）。</p></li><li><p>减额定期寿险C：受益人为法定受益人，保额等于房贷总额；预算为每年2000元（保额150万元，保障期30年，缴费期20年）。（有房贷才买）</p></li><li><p>重大疾病险B：提升重疾保额；预算为每年5000元（保额30万元，保终身，缴费期30年）。</p></li></ul><h4 id="32岁保障速览"><strong>32岁</strong>保障速览</h4><ul><li><p>身故补偿（不限死亡原因）：130万元。</p></li><li><p>额外身故补偿（仅限意外原因）：150万元。</p></li><li><p>意外医疗补偿：1万元（上限）。</p></li><li><p>住院医疗补偿：100万元（上限）。</p></li><li><p>重大疾病补偿：80万元。</p></li></ul><h3 id="34岁"><strong>34岁</strong></h3><ul><li><p>意外险：包含意外身故/伤残责任，意外医疗责任；预算为每年200元（保额50万元）。</p></li><li><p>意外险：包含意外身故/伤残责任；预算为每年400元（保额100万元）。</p></li><li><p>医疗险：包含疾病导致的住院医疗责任；预算为每年200元。定期寿险A：受益人为父母，保额相当于父母5年的退休金；预算为每年500元（保额50万元，保障期30年，缴费期30年）。</p></li><li><p>定期寿险B：受益人为法定受益人，保额相当于自己5倍的年薪。预算为每年1000元（保额80万元，保到60岁，缴费期30年）。</p></li><li><p>减额定期寿险C：受益人为法定受益人，保额等于房贷总额；预算为每年2000元（保额150万元，保障期30年，缴费期20年）。</p></li><li><p>定期寿险D：受益人为子女，保额相当于孩子5年的生活费；预算为每年4000元（保额100万元，保到60岁，缴费期20年）。</p></li><li><p>重大疾病险A：保额相当于自己当时的3倍年薪；预算为每年5000元（保额50万元，保到70岁，缴费期30年）。重大疾病险B：提升重疾险保额；预算为每年5000元（保额30万元，保终身，缴费期30年）。</p></li><li><p>养老保险（60岁领取）：预算为每年60000元（每月5000元）。</p></li></ul><p>给自己买保险，不能一蹴而就，应随着人生进入不同阶段而分步实施。在这个过程中，我们需要对自己的情感进行再分配，说到底就是，回答“为谁买保险”的问题。比如，涉及医疗补偿的保险（如住院医疗险、重大疾病险），是为了让自己不至于被疾病掏空腰包；再比如，涉及身故补偿的保险（如定期寿险、意外险），是为了让家人能够继续维持原来的生活水准。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、破除误会，我们真的了解保险吗&quot;&gt;1、破除误会，我们真的了解保险吗&lt;/h1&gt;
&lt;h2 id=&quot;我们对保险的认识：理赔似乎特别难&quot;&gt;我们对保险的认识：理赔似乎特别难&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;发生的事故不在保险范围，不能赔付&lt;/li&gt;
&lt;li&gt;客户未如实告知自身</summary>
      
    
    
    
    <category term="读书笔记" scheme="https://guozhe001.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="读书笔记" scheme="https://guozhe001.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    <category term="保险" scheme="https://guozhe001.github.io/tags/%E4%BF%9D%E9%99%A9/"/>
    
  </entry>
  
  <entry>
    <title>Gradle学习踩坑记录</title>
    <link href="https://guozhe001.github.io/2021/04/01/others/gradle%E5%AD%A6%E4%B9%A0%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <id>https://guozhe001.github.io/2021/04/01/others/gradle%E5%AD%A6%E4%B9%A0%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-01T10:18:21.506Z</published>
    <updated>2021-04-02T03:52:20.472Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gradle学习踩坑记录">gradle学习踩坑记录</h1><p>最近想学习一下Java11，使用gradle搭建了一个项目，但是在执行打包命令<code>./gradlew clean build</code>时报错如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not target platform: &#x27;Java SE 11&#x27; using tool chain: &#x27;JDK 8 (1.8)&#x27;</span><br></pre></td></tr></table></figure><p>原因是因为我本地的JAVA_HOME配置的JDK版本是1.8，但是项目中指定的编译版本为Java11：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sourceCompatibility = JavaVersion.VERSION_11</span><br><span class="line">targetCompatibility = JavaVersion.VERSION_11</span><br></pre></td></tr></table></figure><p>解决方式是在项目的根目录下新建gradle.properties文件，并写入以下配置，问题解决</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">org.gradle.java.home</span> = <span class="string">/Library/Java/JavaVirtualMachines/jdk-11.0.9.jdk/Contents/Home</span></span><br></pre></td></tr></table></figure><p>gradle的<a href="https://www.jetbrains.com/help/idea/gradle-jvm-selection.html#jdk_existing_project">官方文档</a>解释如下：</p><h3 id="Resolve-the-Gradle-JVM-version-for-the-existing-project">Resolve the Gradle JVM version for the existing project</h3><ol><li>IntelliJ IDEA checks the <code>gradle.properties</code> file for the appropriate Gradle JVM specified in <code>org.gradle.java.home</code> and uses it for the project.</li><li>Then it checks the <code>JAVA_HOME</code> environment variable.</li><li>Then it checks the closest appropriate JDK version for the existing Gradle version.</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;gradle学习踩坑记录&quot;&gt;gradle学习踩坑记录&lt;/h1&gt;
&lt;p&gt;最近想学习一下Java11，使用gradle搭建了一个项目，但是在执行打包命令&lt;code&gt;./gradlew clean build&lt;/code&gt;时报错如下：&lt;/p&gt;
&lt;figure class</summary>
      
    
    
    
    <category term="Java" scheme="https://guozhe001.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://guozhe001.github.io/tags/Java/"/>
    
    <category term="Gradle" scheme="https://guozhe001.github.io/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Homebrew配置为国内镜像</title>
    <link href="https://guozhe001.github.io/2021/04/01/others/Homebrew%E9%85%8D%E7%BD%AE%E4%B8%BA%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/"/>
    <id>https://guozhe001.github.io/2021/04/01/others/Homebrew%E9%85%8D%E7%BD%AE%E4%B8%BA%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/</id>
    <published>2021-04-01T10:18:21.505Z</published>
    <updated>2021-04-02T04:00:45.186Z</updated>
    
    <content type="html"><![CDATA[<p>本人的Mac电脑按照<a href="https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/">清华大学开源软件镜像站</a>的设置时报错如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git -C &quot;$(brew --repo homebrew/cask)&quot; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git</span><br><span class="line">fatal: cannot change to &#x27;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask&#x27;: No such file or directory</span><br></pre></td></tr></table></figure><p>解决方案是先change到对应的目录下，在执行替换脚本，操作如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd &quot;$(brew --repo)&quot;</span><br><span class="line">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span><br><span class="line"></span><br><span class="line">cd $(brew --repo homebrew/core)</span><br><span class="line">git remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span><br></pre></td></tr></table></figure><h2 id="卸载homebrew">卸载homebrew</h2><p>执行卸载脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)&quot;</span><br></pre></td></tr></table></figure><p>如果报错如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused</span><br></pre></td></tr></table></figure><p>需要配置一下host；去往<a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a>，输入<a href="https://raw.githubusercontent.com">raw.githubusercontent.com</a>查看ip地址，然后配置host之后重试。</p><h2 id="安装bash-completion">安装bash_completion</h2><p>卸载homebrew后发现自动补全的功能也没有了，报错如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi awk: can&#x27;t open file /usr/local/etc/bash_completion</span><br></pre></td></tr></table></figure><p>解决方法是重新安装homebrew后，安装bash-completion：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install bash-completion</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本人的Mac电脑按照&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/&quot;&gt;清华大学开源软件镜像站&lt;/a&gt;的设置时报错如下：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;tab</summary>
      
    
    
    
    <category term="Mac" scheme="https://guozhe001.github.io/categories/Mac/"/>
    
    
    <category term="Mac" scheme="https://guozhe001.github.io/tags/Mac/"/>
    
    <category term="Homebrew" scheme="https://guozhe001.github.io/tags/Homebrew/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令记录</title>
    <link href="https://guozhe001.github.io/2021/04/01/others/Linux%20Shell%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/"/>
    <id>https://guozhe001.github.io/2021/04/01/others/Linux%20Shell%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-01T10:18:21.505Z</published>
    <updated>2021-04-02T03:52:26.241Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tar-解压，压缩，帮助：tar-h">tar(解压，压缩，帮助：tar -h)</h2><p>解压，<code>-C</code>标签指定解压到哪个目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xf -C ./test</span><br></pre></td></tr></table></figure><p>压缩</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cf &lt;archive-filename&gt; [filenames...]</span><br></pre></td></tr></table></figure><h2 id="shasum（hash，帮助shasum-h）">shasum（hash，帮助shasum -h）</h2><p>生成hash，<code>-a</code>标签指定使用哪个算法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shasum -a 256 README.md</span><br></pre></td></tr></table></figure><h2 id="修改终端显示，不显示用户名和电脑名称">修改终端显示，不显示用户名和电脑名称</h2><p>修改<code>/etc/bashrc</code>：PS1='\w $ ’</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> more /etc/bashrc</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> System-wide .bashrc file <span class="keyword">for</span> interactive bash(1) shells.</span></span><br><span class="line">if [ -z &quot;$PS1&quot; ]; then</span><br><span class="line">   return</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">PS1=<span class="string">&#x27;\h:\W \u\$ &#x27;</span></span></span><br><span class="line">PS1=&#x27;\w \$ &#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Make bash check its window size after a process completes</span></span><br><span class="line">shopt -s checkwinsize</span><br><span class="line"></span><br><span class="line">[ -r &quot;/etc/bashrc_$TERM_PROGRAM&quot; ] &amp;&amp; . &quot;/etc/bashrc_$TERM_PROGRAM&quot;</span><br></pre></td></tr></table></figure><p>其他参数：</p><ul><li>\d ：代表日期，格式为weekday month date，例如：“Mon Aug 1”</li><li>\H ：完整的主机名称。例如：我的机器名称为：fc4.linux，则这个名称就是fc4.linux</li><li>\h ：仅取主机的第一个名字，如上例，则为fc4，.linux则被省略</li><li>\t ：显示时间为24小时格式，如：HH：MM：SS</li><li>\T ：显示时间为12小时格式\A ：显示时间为24小时格式：HH：MM</li><li>\u ：当前用户的账号名称\v ：BASH的版本信息</li><li>\w ：完整的工作目录名称。家目录会以 ~代替</li><li>\W ：利用basename取得工作目录名称，所以只会列出最后一个目录</li><li># ：下达的第几个命令</li><li>$ ：提示字符，如果是root时，提示符为：# ，普通用户则为：$</li></ul><h3 id="crontab（定时任务-man-crontab）">crontab（定时任务,man crontab）</h3><ul><li>查看：<code>crontab -l</code></li><li>编辑：<code>crontab -e</code></li></ul><p>crontab配置举例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 每天十点30分执行hello.sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 分 时 日 月 星期 <span class="built_in">command</span></span></span><br><span class="line">30 10 * * * ～/hello.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;tar-解压，压缩，帮助：tar-h&quot;&gt;tar(解压，压缩，帮助：tar -h)&lt;/h2&gt;
&lt;p&gt;解压，&lt;code&gt;-C&lt;/code&gt;标签指定解压到哪个目录&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="Linux" scheme="https://guozhe001.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://guozhe001.github.io/tags/Linux/"/>
    
    <category term="shell" scheme="https://guozhe001.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Docker常用命令记录</title>
    <link href="https://guozhe001.github.io/2021/04/01/others/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/"/>
    <id>https://guozhe001.github.io/2021/04/01/others/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-01T10:18:21.504Z</published>
    <updated>2021-04-02T04:00:18.813Z</updated>
    
    <content type="html"><![CDATA[<h2 id="docker命令">docker命令</h2><h3 id="删除本地所有没有被使用的卷：">删除本地所有没有被使用的卷：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume prune</span><br></pre></td></tr></table></figure><p>WARNING! This will remove all local volumes not used by at least one container.</p><h3 id="查看本地的所有卷：">查看本地的所有卷：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume ls</span><br></pre></td></tr></table></figure><h3 id="删除某个volume卷">删除某个volume卷</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume rm docker_orderer.supply.com</span><br></pre></td></tr></table></figure><h3 id="查看所有的容器，包括没有运行中的">查看所有的容器，包括没有运行中的</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h3 id="查看某个容器的日志">查看某个容器的日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs ead00b30e8ec</span><br></pre></td></tr></table></figure><h3 id="停止容器">停止容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 46bc78ee1f8a e8df5432a918 be15203b7835</span><br></pre></td></tr></table></figure><h3 id="删除容器">删除容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm ead00b30e8ec 46bc78ee1f8a e8df5432a918 be15203b7835</span><br></pre></td></tr></table></figure><h3 id="进入docker容器">进入docker容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it f37c61b09023 /bin/sh</span><br></pre></td></tr></table></figure><h3 id="修改容器的环境变量">修改容器的环境变量</h3><p>在配置docker-compose某个容器的环境变量时出现了错误，但是容器已经运行了，如果重新运行则数据会丢失。所以需要修正此环境变量</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">  <span class="attr">peer0.s1.supply.com:</span></span><br><span class="line"></span><br><span class="line"><span class="string">​</span>    <span class="attr">container_name:</span> <span class="string">peer0.s1.supply.com</span></span><br><span class="line"></span><br><span class="line"><span class="string">​</span>    <span class="attr">image:</span> <span class="string">hyperledger/fabric-peer:2.2.0</span></span><br><span class="line"></span><br><span class="line"><span class="string">​</span>    <span class="attr">environment:</span></span><br><span class="line"></span><br><span class="line"><span class="string">​</span>      <span class="string">*#Generic</span> <span class="string">peer</span> <span class="string">variables*</span></span><br><span class="line"></span><br><span class="line"><span class="string">​</span>      <span class="string">\-</span> <span class="string">CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock</span></span><br><span class="line"></span><br><span class="line"><span class="string">​</span>      <span class="string">*#</span> <span class="string">the</span> <span class="string">following</span> <span class="string">setting</span> <span class="string">starts</span> <span class="string">chaincode</span> <span class="string">containers</span> <span class="string">on</span> <span class="string">the</span> <span class="string">same*</span></span><br><span class="line"></span><br><span class="line"><span class="string">​</span>      <span class="string">*#</span> <span class="string">bridge</span> <span class="string">network</span> <span class="string">as</span> <span class="string">the</span> <span class="string">peers*</span></span><br><span class="line"></span><br><span class="line"><span class="string">​</span>      <span class="string">*#</span> <span class="string">https://docs.docker.com/compose/networking/*</span></span><br><span class="line"></span><br><span class="line"><span class="string">​</span>      <span class="string">\-</span> <span class="string">CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=_test</span></span><br><span class="line"></span><br><span class="line"><span class="string">​</span>      <span class="string">\-</span> <span class="string">FABRIC_LOGGING_SPEC=INFO</span></span><br><span class="line"></span><br><span class="line"><span class="string">​</span>      <span class="string">*#-</span> <span class="string">FABRIC_LOGGING_SPEC=DEBUG*</span></span><br></pre></td></tr></table></figure><p>如要修改<code>CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE</code>为<code>docker_test</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1、进入容器</span></span><br><span class="line">docker exec -it f37c61b09023 /bin/sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2、修改环境变量</span></span><br><span class="line">echo &quot;export CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=docker_test&quot; &gt;&gt; /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="bash"> 3、重新启动容器即可</span></span><br></pre></td></tr></table></figure><h3 id="查看docker启动的网络">查看docker启动的网络</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network ls</span><br></pre></td></tr></table></figure><h2 id="docker-compose命令">docker-compose命令</h2><h3 id="使用docker-compose启动docker镜像">使用docker-compose启动docker镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> --f 指定文件, -d指定后台运行</span></span><br><span class="line">docker-compose --f docker-compose.yml up -d</span><br></pre></td></tr></table></figure><h3 id="使用docker-compose启动指定的名称的容器">使用docker-compose启动指定的名称的容器</h3><p>在一个<code>docker-compose.yaml</code>配置文件下可能有多个<code>serevice</code>，可以指定名称来启动其中的一个，命令如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up ca-tls</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;docker命令&quot;&gt;docker命令&lt;/h2&gt;
&lt;h3 id=&quot;删除本地所有没有被使用的卷：&quot;&gt;删除本地所有没有被使用的卷：&lt;/h3&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</summary>
      
    
    
    
    <category term="Cloud" scheme="https://guozhe001.github.io/categories/Cloud/"/>
    
    
    <category term="Docker" scheme="https://guozhe001.github.io/tags/Docker/"/>
    
    <category term="docker-compose" scheme="https://guozhe001.github.io/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>Gradle常用命令记录</title>
    <link href="https://guozhe001.github.io/2021/04/01/others/Gradle%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://guozhe001.github.io/2021/04/01/others/Gradle%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2021-04-01T10:18:21.504Z</published>
    <updated>2021-04-02T03:52:28.750Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Gradle常用命令记录">Gradle常用命令记录:</h2><h4 id="运行gradle-help-task-someTask来显示帮助，如：">运行<code>gradle help --task someTask</code>来显示帮助，如：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew help --task test</span><br></pre></td></tr></table></figure><h4 id="clean">clean</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew clean</span><br></pre></td></tr></table></figure><h4 id="build">build</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew build</span><br></pre></td></tr></table></figure><h4 id="test">test</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew test</span><br></pre></td></tr></table></figure><h4 id="排除指定的task-exclude-task">排除指定的task<code>--exclude-task</code></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew clean build --exclude-task test</span><br></pre></td></tr></table></figure><h4 id="多模块指定模块运行task">多模块指定模块运行task</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./gradlew :my-subproject:taskName</span><br><span class="line">./gradlew my-subproject:taskName</span><br></pre></td></tr></table></figure><h4 id="测试失败继续执行">测试失败继续执行</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew test --continue</span><br></pre></td></tr></table></figure><h4 id="检查，会执行test和linting">检查，会执行test和linting</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew check</span><br></pre></td></tr></table></figure><h4 id="显示当前的项目层次">显示当前的项目层次</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew project</span><br></pre></td></tr></table></figure><h4 id="列出所有的task">列出所有的task</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew tasks</span><br></pre></td></tr></table></figure><h4 id="列出项目所有的依赖：">列出项目所有的依赖：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew dependencies</span><br></pre></td></tr></table></figure><p>去<a href="https://docs.gradle.org/current/userguide/command_line_interface.html">官网</a>查看更多</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Gradle常用命令记录&quot;&gt;Gradle常用命令记录:&lt;/h2&gt;
&lt;h4 id=&quot;运行gradle-help-task-someTask来显示帮助，如：&quot;&gt;运行&lt;code&gt;gradle help --task someTask&lt;/code&gt;来显示帮助，如：&lt;/h4</summary>
      
    
    
    
    <category term="Java" scheme="https://guozhe001.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://guozhe001.github.io/tags/Java/"/>
    
    <category term="Gradle" scheme="https://guozhe001.github.io/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>使用Redis自增特性创建唯一id生成器</title>
    <link href="https://guozhe001.github.io/2021/04/01/language/java/%E4%BD%BF%E7%94%A8redis%E8%87%AA%E5%A2%9E%E7%89%B9%E6%80%A7%E5%88%9B%E5%BB%BA%E5%94%AF%E4%B8%80id%E7%94%9F%E6%88%90%E5%99%A8/"/>
    <id>https://guozhe001.github.io/2021/04/01/language/java/%E4%BD%BF%E7%94%A8redis%E8%87%AA%E5%A2%9E%E7%89%B9%E6%80%A7%E5%88%9B%E5%BB%BA%E5%94%AF%E4%B8%80id%E7%94%9F%E6%88%90%E5%99%A8/</id>
    <published>2021-04-01T10:18:21.503Z</published>
    <updated>2021-04-02T03:53:27.938Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求说明">需求说明</h1><h2 id="产品要求实现一个订单编号，此编号规则如下">产品要求实现一个订单编号，此编号规则如下</h2><h3 id="订单编号规则：">订单编号规则：</h3><p>“字母” + “日期” + “自增ID”</p><h3 id="订单编号举例">订单编号举例</h3><p>比如业务A，在2020-08-04日有三个订单，那么订单编号如下：</p><ul><li>A202008040001</li><li>A202008040002</li><li>A202008040003</li></ul><p>比如业务A，在2020-08-05日有4个订单，那么订单编号如下：</p><ul><li>A202008050001</li><li>A202008050002</li><li>A202008050003</li><li>A202008050003</li></ul><p>通过上面的例子可以看到，后面的“自增ID”每天都会从1开始增加，在一个分布式系统中，要做到每天从1开始不重复并且自增的效果；想到的第一个实现方案就是redis的Incr命令（Redis Incr 命令将 key 中储存的数字值增一）。</p><h1 id="需求实现">需求实现</h1><h2 id="配置redis">配置redis</h2><h3 id="依赖redis相关jar包">依赖redis相关jar包</h3><p>因为此模块继承了spring-boot-starter-parent，所以不需要指定版本</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编写配置redis的config">编写配置redis的config</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nicai.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.data.redis.RedisProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisClusterConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.jedis.JedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * redis集群配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guozhe</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/08/04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties(RedisProperties.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisClusterConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RedisProperties redisProperties;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RedisClusterConfig</span><span class="params">(RedisProperties redisProperties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisProperties = redisProperties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Thread-safe factory of Redis connections配置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> factory of Redis</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisConnectionFactory <span class="title">redisConnectionFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        RedisClusterConfiguration redisClusterConfiguration = <span class="keyword">new</span> RedisClusterConfiguration(redisProperties.getCluster().getNodes());</span><br><span class="line">        redisClusterConfiguration.setPassword(redisProperties.getPassword());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JedisConnectionFactory(redisClusterConfiguration);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建String类型的redis模板</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> redisConnectionFactory factory of Redis</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String-focused extension of RedisTemplate</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StringRedisTemplate <span class="title">stringRedisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> </span>&#123;</span><br><span class="line">        StringRedisTemplate template = <span class="keyword">new</span> StringRedisTemplate(redisConnectionFactory);</span><br><span class="line">        template.afterPropertiesSet();</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是配置范型的RedisTemplate，需要设置值的序列化规则为：<strong>StringRedisSerializer</strong>，原因可以参考此文章：<a href="https://blog.csdn.net/tyyh08/article/details/80267261">Spring Boot中使用RedisTemplate优雅的操作Redis，并且解决RedisTemplate泛型注入失败的问题</a></p><h3 id="测试redis的config代码">测试redis的config代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nicai.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yuanfeng.accounting.BaseAdminSpringTest;</span><br><span class="line"><span class="keyword">import</span> com.yuanfeng.accounting.Constants;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.junit.Assert;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.ValueOperations;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guozhe</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/08/04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest(classes = AdminApplication.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisClusterConfigTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEST_KEY = Constants.REDIS_KEY_PREFIX + <span class="string">&quot;test:hello&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TEST_VALUE = <span class="string">&quot;world&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testStringRedisTemplateGetAndSet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        stringRedisTemplate.opsForValue().set(TEST_KEY, TEST_VALUE);</span><br><span class="line">        String value = stringRedisTemplate.opsForValue().get(TEST_KEY);</span><br><span class="line">        Assert.assertEquals(TEST_VALUE, value);</span><br><span class="line">        stringRedisTemplate.delete(TEST_KEY);</span><br><span class="line">        Assert.assertNull(stringRedisTemplate.opsForValue().get(TEST_KEY));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testIncr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String key = TEST_KEY;</span><br><span class="line">        ValueOperations&lt;String, String&gt; valueOperations = stringRedisTemplate.opsForValue();</span><br><span class="line">        valueOperations.set(key, <span class="string">&quot;1&quot;</span>, <span class="number">24</span>, TimeUnit.HOURS);</span><br><span class="line">        String initValue = valueOperations.get(key);</span><br><span class="line">        log.info(<span class="string">&quot;key=&#123;&#125;, init value=&#123;&#125;&quot;</span>, key, initValue);</span><br><span class="line">        Assert.assertEquals(<span class="string">&quot;1&quot;</span>, initValue);</span><br><span class="line">        Long increment = valueOperations.increment(key);</span><br><span class="line">        log.info(<span class="string">&quot;key=&#123;&#125;, after increment=&#123;&#125;&quot;</span>, key, increment);</span><br><span class="line">        Assert.assertEquals(Long.valueOf(<span class="number">2</span>), increment);</span><br><span class="line">        stringRedisTemplate.delete(key);</span><br><span class="line">        Assert.assertNull(valueOperations.get(key));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基于redis编写唯一ID生成服务">基于redis编写唯一ID生成服务</h2><h3 id="添加抽象的唯一id生成服务">添加抽象的唯一id生成服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nicai.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.BooleanUtil;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分布式ID生成服务</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guozhe</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/08/04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractRedisDistributedIDGenerateService</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">AbstractRedisDistributedIDGenerateService</span>.<span class="title">Context</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化key时的默认值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> DEFAULT_VALUE = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AbstractRedisDistributedIDGenerateService</span><span class="params">(StringRedisTemplate redisTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取下一个ID，直接从redis中获取自增后的值；</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 下一个ID, 如果redis出现异常则返回null，请使用者自行处理</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> Optional&lt;Long&gt; <span class="title">nextId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 从redis中获取自增id</span></span><br><span class="line">        Long id = incr(getKey());</span><br><span class="line">        <span class="keyword">return</span> Objects.isNull(id) ? Optional.empty() : Optional.of(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取下一个ID，根据传入的上下文和redis中自增后的值最终组装成下一个ID；</span></span><br><span class="line"><span class="comment">     * 获取之后会交给子类检查此ID是否重复，如果重复会从子类中获取最新的ID，然后更新redis中的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context 拼装id时需要的上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 下一个ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> String <span class="title">nextId</span><span class="params">(T context)</span> </span>&#123;</span><br><span class="line">        Optional&lt;Long&gt; id = nextId();</span><br><span class="line">        <span class="comment">// 如果可以从redis中获取值，则说明redis服务正常，需要判重；否则直接从数据库中获取下一个id</span></span><br><span class="line">        String nextId = id.isPresent() ? ifDuplicatedThenUpdate(context, assemblyNextId(context, id.get())) :</span><br><span class="line">                getNewIdFromDbAndUpdateRedis(context, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (log.isDebugEnabled()) &#123;</span><br><span class="line">            log.debug(<span class="string">&quot;context=&#123;&#125;,redisIncrId=&#123;&#125; nextId=&#123;&#125;&quot;</span>, JSON.toJSONString(context), id, nextId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nextId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检查获取到的ID是否重复</span></span><br><span class="line"><span class="comment">     * 如果重复则说明由于redis的一些原因导致的重复，返回最新的redis中应该存在的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nextId 下一个ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果当前ID没有重复，则返回null，否则如果重复了则返回redis中应该有的值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">boolean</span> <span class="title">checkIfDuplicated</span><span class="params">(String nextId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从数据库获取下一个id</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> duplicatedId 重复的id，此入参可能为null，子类需要自己处理</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 数据库获取下一个id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> Long <span class="title">maxIdFromDatabase</span><span class="params">(String duplicatedId)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 子类根据redis当前的值自行组装最终的ID</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context    上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> redisValue redis当前的值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 最终的ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> String <span class="title">assemblyNextId</span><span class="params">(T context, Long redisValue)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取redis自增的key</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> redis自增的key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> String <span class="title">getKey</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 调用redis的自增方法</span></span><br><span class="line"><span class="comment">     * 如果key不存在则先设置key，再调用自增方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 需要自增的key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 自增之后的值，如果redis出现异常则返回null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Long <span class="title">incr</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        Long increment = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 先检查redis中是否有key,如果没有,先设置key并且设置过期时间</span></span><br><span class="line">            <span class="keyword">if</span> (BooleanUtil.isFalse(redisTemplate.hasKey(key))) &#123;</span><br><span class="line">                initOrUpdateValue(key, getKeyInitValue());</span><br><span class="line">            &#125;</span><br><span class="line">            increment = redisTemplate.opsForValue().increment(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;调用redis的自增方法异常，error_message=&#123;&#125;&quot;</span>, e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">        log.debug(<span class="string">&quot;key = &#123;&#125;, increment=&#123;&#125;&quot;</span>, key, increment);</span><br><span class="line">        <span class="keyword">return</span> increment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取初始化key时的value值，默认是0，自增之后id从1开始；</span></span><br><span class="line"><span class="comment">     * 如果子类想从其他数字开始则自己覆盖此方法即可</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 初始化key时的value值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">long</span> <span class="title">getKeyInitValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DEFAULT_VALUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取key的超时时间，单位是小时，由子类设置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 超时时间，单位小时</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">long</span> <span class="title">getTimeOutHours</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断是否重复，如果重复则从别的渠道（由子类自己决定从哪个渠道）更新</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context 拼装id时需要的上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nextId  下一个id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果重复则返回新的nextId，否则返回入参传入的nextId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">ifDuplicatedThenUpdate</span><span class="params">(T context, String nextId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断是否重复，如果重复则从数据库中获取，否则直接返回当前值</span></span><br><span class="line">        <span class="keyword">return</span> checkIfDuplicated(nextId) ? getNewIdFromDbAndUpdateRedis(context, nextId) : nextId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从数据库获取新id并更新redis中的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context 拼装id时需要的上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nextId  下一个id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 根据数据库的id获得的新id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getNewIdFromDbAndUpdateRedis</span><span class="params">(T context, String nextId)</span> </span>&#123;</span><br><span class="line">        Long maxIdFromDatabase = maxIdFromDatabase(nextId);</span><br><span class="line">        String newId = assemblyNextId(context, maxIdFromDatabase);</span><br><span class="line">        log.warn(<span class="string">&quot;nextId=&#123;&#125; 在数据库中已经存在，maxIdFromDatabase=&#123;&#125; 重新获取新的newId=&#123;&#125;&quot;</span>, nextId, maxIdFromDatabase, newId);</span><br><span class="line">        initOrUpdateValue(getKey(), maxIdFromDatabase);</span><br><span class="line">        <span class="keyword">return</span> newId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化或者更新redis中的自增的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   redis中的key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 需要设置的值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initOrUpdateValue</span><span class="params">(String key, Long value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            redisTemplate.opsForValue().set(key, String.valueOf(value), getTimeOutHours(), TimeUnit.HOURS);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;设置redis值异常，value=&#123;&#125; error_message=&#123;&#125;&quot;</span>, value, e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上下文；子类自己定义上下文，然后根据上下文的数据来最终组装ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Context</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 凭证编号上下文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="meta">@NoArgsConstructor</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">AContext</span> <span class="keyword">implements</span> <span class="title">Context</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 业务类型</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> String businessType;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="添加一个A服务的唯一id生成服务实现">添加一个A服务的唯一id生成服务实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nicai.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DatePattern;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DateUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.util.StrUtil;</span><br><span class="line"><span class="keyword">import</span> com.yuanfeng.accounting.Constants;</span><br><span class="line"><span class="keyword">import</span> com.yuanfeng.accounting.dao.ManualVoucherDAO;</span><br><span class="line"><span class="keyword">import</span> com.yuanfeng.accounting.entity.ManualVoucherEntity;</span><br><span class="line"><span class="keyword">import</span> com.yuanfeng.accounting.exception.AccountingException;</span><br><span class="line"><span class="keyword">import</span> com.yuanfeng.accounting.service.AbstractRedisDistributedIDGenerateService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分布式唯一ID生成-A实现类</span></span><br><span class="line"><span class="comment"> * 编号规则：用途+日期+自增ID，如：A202007310001；A202007310002；A202008070001；</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guozhe</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/08/04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DistributedIDGenerateServiceAImpl</span> <span class="keyword">extends</span> <span class="title">AbstractRedisDistributedIDGenerateService</span>&lt;<span class="title">AbstractRedisDistributedIDGenerateService</span>.<span class="title">AContext</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 业务类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String BUSINESS_TYPE = <span class="string">&quot;A:&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ID长度不足4位时在前面填充的字符</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">char</span> FILLED_CHAR = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最后的自增ID的长度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> INCREMENT_LENGTH = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过期小时数，即在24小时候过期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> EXPIRATION_HOURS = <span class="number">24</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DistributedIDGenerateServiceAImpl</span><span class="params">(StringRedisTemplate redisTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(redisTemplate);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">checkIfDuplicated</span><span class="params">(String nextId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Long <span class="title">maxIdFromDatabase</span><span class="params">(String duplicatedId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1L</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> String <span class="title">assemblyNextId</span><span class="params">(VoucherNumberContext context, Long redisValue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> String.join(Constants.BLANK, context.getBusinessType(), getDatePeriod(),</span><br><span class="line">                StrUtil.fillBefore(String.valueOf(redisValue), FILLED_CHAR, INCREMENT_LENGTH));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> String <span class="title">getKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> String.join(Constants.REDIS_KEY_DELIMITER, Constants.REDIS_KEY_PREFIX, BUSINESS_TYPE, getDatePeriod());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">long</span> <span class="title">getTimeOutHours</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> EXPIRATION_HOURS;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;需求说明&quot;&gt;需求说明&lt;/h1&gt;
&lt;h2 id=&quot;产品要求实现一个订单编号，此编号规则如下&quot;&gt;产品要求实现一个订单编号，此编号规则如下&lt;/h2&gt;
&lt;h3 id=&quot;订单编号规则：&quot;&gt;订单编号规则：&lt;/h3&gt;
&lt;p&gt;“字母” + “日期” + “自增ID”&lt;/p&gt;
&lt;h</summary>
      
    
    
    
    <category term="Java" scheme="https://guozhe001.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://guozhe001.github.io/tags/Java/"/>
    
    <category term="Redis" scheme="https://guozhe001.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>线程池无法捕获线程的异常踩坑复盘</title>
    <link href="https://guozhe001.github.io/2021/04/01/language/java/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%97%A0%E6%B3%95%E6%8D%95%E8%8E%B7%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%BC%82%E5%B8%B8%E8%B8%A9%E5%9D%91%E5%A4%8D%E7%9B%98/"/>
    <id>https://guozhe001.github.io/2021/04/01/language/java/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%97%A0%E6%B3%95%E6%8D%95%E8%8E%B7%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%BC%82%E5%B8%B8%E8%B8%A9%E5%9D%91%E5%A4%8D%E7%9B%98/</id>
    <published>2021-04-01T10:18:21.503Z</published>
    <updated>2021-04-02T03:53:43.334Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2><h3 id="需求信息">需求信息</h3><p>最近在工作中有个需求，先在A服务页面增加一条数据，然后去B服务查询此数据的详细信息</p><h3 id="解决方案">解决方案</h3><p>为了使A服务的新增数据接口快速响应，在查询B服务数据详情的地方使用了线程池异步查询与更新。</p><h3 id="问题现象">问题现象</h3><p>在验证时发现数据库中的数据字段不全，经分析缺少的都是需要从B服务查询并更新的字段</p><h3 id="初步定位">初步定位</h3><p>猜测应该是查询B服务时出了一些异常，而由于不规范使用线程池导致异常没有抛出，直接打到了控制台，故A服务的日志系统并看不到错误日志。</p><h2 id="问题解决">问题解决</h2><ol><li>查询B服务数据详情时暂时去掉使用线程池，改为同步调用</li><li>增加容错定时任务，定时查询需要从B服务获取缺失字段的数据进行更新</li></ol><p>上线后观察，新增的数据不再有部分字段缺失的情况；问题解决。</p><h2 id="问题复盘">问题复盘</h2><h3 id="A服务线程池的使用">A服务线程池的使用</h3><p>线程池定义</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询B服务数据详情的线程池</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ExecutorService executorService = <span class="keyword">new</span> ThreadPoolExecutor(<span class="number">2</span>, <span class="number">2</span>, <span class="number">0L</span>, TimeUnit.MICROSECONDS,</span><br><span class="line">        <span class="keyword">new</span> LinkedBlockingDeque&lt;&gt;(), <span class="keyword">new</span> ThreadFactoryBuilder().setNameFormat(<span class="string">&quot;queryDataDetail-%d&quot;</span>).build());</span><br></pre></td></tr></table></figure><p>线程池使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(String contract)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 0、检查合同必须不存在</span></span><br><span class="line">    checkIfExist(contract);</span><br><span class="line">    <span class="comment">// 1、保存合同数据</span></span><br><span class="line">    Entity entity = saveData(contract);</span><br><span class="line">    <span class="comment">// 2、从B服务查询缺失信息</span></span><br><span class="line">    executorService.execute(() -&gt; queryDataDetail(entity));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如此使用有何问题">如此使用有何问题</h3><p>我重新写了一个测试方法如下：</p><p>1、定义一个会一直抛异常的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 引入SystemOutRule，监听程序日志输出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Rule</span></span><br><span class="line"><span class="keyword">public</span> SystemOutRule systemOutRule = <span class="keyword">new</span> SystemOutRule().enableLog();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 引入SystemOutRule，监听程序日志输出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">runWithException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Thread thread = Thread.currentThread();</span><br><span class="line">    log.info(<span class="string">&quot;thread is &#123;&#125;&quot;</span>, thread);</span><br><span class="line">    log.info(<span class="string">&quot;eh=&#123;&#125;&quot;</span>, thread.getUncaughtExceptionHandler());</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> NicaiException(<span class="string">&quot;出错啦！&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、使用线程池调用上面的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    ExecutorService executorService = Executors.newCachedThreadPool();</span><br><span class="line">    executorService.execute(<span class="keyword">this</span>::runWithException);</span><br><span class="line">    TimeUnit.MILLISECONDS.sleep(<span class="number">100L</span>);</span><br><span class="line">    <span class="comment">// 断言程序打印的日志不包含“出错啦！”</span></span><br><span class="line">    Assert.assertFalse(systemOutRule.getLog().contains(<span class="string">&quot;出错啦！&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、上面的单测断言是成功的，那么异常跑哪里去了？上面的单测在控制台的输出如下：</p><p><img src="https://gitee.com/zheshiyigegexingwangzhan/images/raw/master//image-20200807110851677.png" alt="image-20200807110851677"></p><p>4、可以看出上面的异常信息是直接输出到了控制台，而不是由程序输出到控制台，主要原因是主程序没有捕获到此异常导致的。（具体原因还没有深入）</p><h3 id="如何解决线程池的异常捕获问题">如何解决线程池的异常捕获问题</h3><p>上面的测试可以说明到为什么日志里面查不到错误日志，那么如何捕获线程里的异常呢？</p><h4 id="方法1-使用UncaughtExceptionHandler">方法1:使用UncaughtExceptionHandler</h4><p>1、在创建线程池的时候，设置传入的ThreadFactory的UncaughtExceptionHandler属性，此UncaughtExceptionHandler会处理线程中的异常；下面的例子我直接打印了出来异常原因和异常栈。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">runWithUncaughtExceptionHandler</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    ExecutorService executorService = Executors.newCachedThreadPool(</span><br><span class="line">            <span class="keyword">new</span> ThreadFactoryBuilder()</span><br><span class="line">                    .setUncaughtExceptionHandler((t, e) -&gt; log.info(<span class="string">&quot;UncaughtExceptionHandler caught, error_message=&#123;&#125;&quot;</span>, e.getMessage(), e))</span><br><span class="line">                    .build());</span><br><span class="line">    executorService.execute(<span class="keyword">this</span>::runWithException);</span><br><span class="line">    TimeUnit.MILLISECONDS.sleep(<span class="number">100L</span>);</span><br><span class="line">    Assert.assertTrue(systemOutRule.getLog().contains(<span class="string">&quot;出错啦！&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、上面的单测运行结果如下：（可以和上面的运行结果进行比对）</p><p><img src="https://gitee.com/zheshiyigegexingwangzhan/images/raw/master//image-20200807111728213.png" alt="image-20200807111728213"></p><p>3、从上面的运行结果可以看出异常信息是由程序捕获后再输出出来，这样就不会导致查不到异常日志了。</p><h4 id="方法2-使用guava扩展的FutureCallback">方法2:使用guava扩展的FutureCallback</h4><p>1、guava对jdk的线程做了一些扩展，其中一个就是FutureCallback，使用方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">runWithGuavaThreadPool</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    ListeningExecutorService executorService = MoreExecutors.listeningDecorator(Executors.newCachedThreadPool());</span><br><span class="line">    ListenableFuture&lt;String&gt; listenableFuture = executorService.submit(<span class="keyword">this</span>::runWithException);</span><br><span class="line">    Futures.addCallback(listenableFuture, <span class="keyword">new</span> FutureCallback&lt;String&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String result)</span> </span>&#123;</span><br><span class="line">            log.info(<span class="string">&quot;success! result = &#123;&#125;&quot;</span>, result);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Throwable t)</span> </span>&#123;</span><br><span class="line">            log.error(<span class="string">&quot;guava FutureCallback caught, error_message=&#123;&#125;&quot;</span>, t.getMessage(), t);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, executorService);</span><br><span class="line">    TimeUnit.MILLISECONDS.sleep(<span class="number">100L</span>);</span><br><span class="line">    Assert.assertTrue(systemOutRule.getLog().contains(<span class="string">&quot;出错啦！&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、上面的单测运行结果如下：</p><p><img src="https://gitee.com/zheshiyigegexingwangzhan/images/raw/master//image-20200807112535447.png" alt="image-20200807112535447"></p><h2 id="问题总结">问题总结</h2><p>1、通过上面的测试，优化A服务的线程池定义，使之在遇到异常时能够正常被捕获，能输出，方便问题定位；补偿定时任务也能对第一次查询异常进行容错，保证数据能够同步过来。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询B服务数据详情的线程池</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ExecutorService executorService = <span class="keyword">new</span> ThreadPoolExecutor(<span class="number">2</span>, <span class="number">2</span>, <span class="number">0L</span>, TimeUnit.MICROSECONDS,</span><br><span class="line">        <span class="keyword">new</span> LinkedBlockingDeque&lt;&gt;(), <span class="keyword">new</span> ThreadFactoryBuilder()</span><br><span class="line">        .setUncaughtExceptionHandler((t, e) -&gt; log.error(<span class="string">&quot;查询数据详情的线程池异常,error_message=&#123;&#125;&quot;</span>, e.getMessage(), e))</span><br><span class="line">        .setNameFormat(<span class="string">&quot;queryDataDetail-%d&quot;</span>).build());</span><br></pre></td></tr></table></figure><p>2、当然此问题更深层的问题还没有完全解答</p><ul><li>为什么线程里的异常不会被捕获？</li><li>UncaughtExceptionHandler的运行原理是什么？</li><li>Guava的FutureCallback是如何运行的？</li></ul><p>3、<a href="https://github.com/guozhe001/my-tools/blob/master/my-learn/my-experience/src/test/java/com/nicai/experience/concurrency/ExceptionThreadTest.java">测试代码源码地址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题描述&quot;&gt;问题描述&lt;/h2&gt;
&lt;h3 id=&quot;需求信息&quot;&gt;需求信息&lt;/h3&gt;
&lt;p&gt;最近在工作中有个需求，先在A服务页面增加一条数据，然后去B服务查询此数据的详细信息&lt;/p&gt;
&lt;h3 id=&quot;解决方案&quot;&gt;解决方案&lt;/h3&gt;
&lt;p&gt;为了使A服务的新增数据接口快速响</summary>
      
    
    
    
    <category term="Java" scheme="https://guozhe001.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://guozhe001.github.io/tags/Java/"/>
    
    <category term="线程池" scheme="https://guozhe001.github.io/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
  </entry>
  
</feed>
